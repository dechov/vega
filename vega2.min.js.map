{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/aggregate/aggregator.js","node_modules/datalib/src/aggregate/collector.js","node_modules/datalib/src/aggregate/groupby.js","node_modules/datalib/src/aggregate/measures.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/bins/histogram.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/dsv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/import/readers.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/index.js","node_modules/datalib/src/print.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/template.js","node_modules/datalib/src/time-units.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/HeadlessView.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg-headless/Renderer.js","src/render/svg-headless/index.js","src/render/svg-headless/svg.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/BatchTransform.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/Geo.js","src/transforms/GeoPath.js","src/transforms/GroupBy.js","src/transforms/LinkPath.js","src/transforms/Parameter.js","src/transforms/Pie.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Treemap.js","src/transforms/Unique.js","src/transforms/Zip.js","src/transforms/index.js","src/transforms/measures.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/debug.js","src/util/quickselect.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./src/core/View","./src/dataflow/Datasource","./src/dataflow/Graph","./src/dataflow/Node","./src/dataflow/changeset","./src/parse/spec","./src/scene/Builder","./src/scene/GroupBuilder","./src/transforms/index","./src/util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"Aggregator","_cells","_aggr","_stream","summarize_args","fields","isArray","ops","array","Measures","Collector","Flags","ADD_CELL","MOD_CELL","proto","prototype","stream","v","key","_key","$","groupby","dims","_dims","map","d","isString","get","isFunction","summarize","m","j","op","as","aggr","measures","create","_assign","count","*","object","value","accessors","clear","_keys","x","k","Array","keystr","keys","_cell","_newcell","cell","num","tuple","_newtuple","flag","aggs","collect","data","_ingest","identity","_add","add","_rem","rem","_mod","prev","result","set","_rems","changes","mod","execute","input","insert","_consolidate","remove","values","../util","./collector","./measures",5,"stats","REM","lut","toMap","hasOwnProperty","_f","extent","_ext","index","min","max","quartile","_q","q1","q2","q3","../stats",6,"args","reduce","arguments","concat","./aggregator",7,"measure","base","out","extend","init","idx","resolve","agg","helper","types","req","forEach","str","vals","sort","b","accessor","mutator","all","ctr","slice","Function","assign","distinct","isValid","v_new","v_old","undefined","missing","valid","sum","mean","average","variance","variancep","stdev","stdevp","median","argmin","argmax","modeskew",8,"bins","opt","step","level","minstep","precision","eps","maxb","maxbins","logb","Math","log","div","span","steps","bisect","ceil","pow","round","floor","start","stop","unit","lo","hi","mid","cmp","EPSILON","date_value","date","date_index","units","dmin","dmax","minb","minbins","find","raw","../time-units",9,"$bin","options","$func","histogram","numerical","categorical","type","qtype","ext","h","gen","range","isFinite","unique","c","counts","comparator","integer","number","../generate","../import/type","./bins",10,"repeat","val","zeros","Infinity","random","uniform","samples","normal","next","rds","y","sqrt",11,"dsv","format","header","join","delimiter","d3","delim","fmt","../../util",12,"json","topojson","treejson","csv","tsv","./dsv","./json","./topojson","./treejson",13,"isObject","isBuffer","JSON","property",14,"obj","feature","objects","features","mesh",15,"toTable","root","childrenField","visit","node","table","children",16,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","test","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","lastIndexOf","load","callback","error","err","indexOf","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","filename","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",17,"read","formats","cols","parsers","clen","inferAll","duplicate","annotation","./formats","./type",18,"./load","./read",19,"TYPES","isDate","isNumber","isBoolean","typeAll","infer","TESTS","splice","PARSERS","boolean","string","isNaN","Date",20,"dl","print","template","timeunits","./aggregate/groupby","./bins/bins","./bins/histogram","./generate","./import/load","./import/read","./import/readers","./import/type","./print","./stats","./template","./time-units","./util",21,"printQuantitativeProfile","p","printCategoricalProfile","list","top","FMT","POS","separator","minwidth","maxwidth","limit","lens","head","truncate","pad","tmpl","summary","__summary__","field",22,"results","filter","quantile","q","H","delta","M2","avg","med","std","dot","Number","rank","mu","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","aa","bb","ab","X","Y","A","mat","B","exp","L2","abs","R","M","entropy","LN2","mutual","z","px","py","I","info","profile","sd",23,"text","src","source","bind","context","variable","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","stringCast","filters","split","prop","shift","trim","pidx","template_format","time","template_escapes","pattern","format_map","clearFormatCache","'","\\","\r","\n"," "," ",24,"STEPS","entries","UTC","getUTCFullYear","getUTCMonth","minuteOfHour","getUTCMinutes","hourOfDay","getUTCHours","dayOfWeek","getUTCDay","dayOfMonth","getUTCDate","monthOfYear","second","minute","hour","day","month","year","timesteps",25,"util_escape_str","escape_str_re","strrep","truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","Buffer","stderr","FNAME","namedfunc","stringify","equal","String","toString","Object","apply","$valid","$length","$year","$month","$date","$day","$hour","$minute","$in","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","searchString","pos","padchar","word","ellipsis","l1","l2","_process","buffer",26,"./lib/heap",27,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","empty","size","clone","heap","toArray","front","has","copy","factory",28,"bounds","union","x1","MAX_VALUE","y1","x2","y2","expand","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",29,"canvas","svg","HeadlessView","model","_el","_type","_renderers","_canvas","renderer","canvasAsync","wait","pendingImages","view","render","_renderer","initialize","_width","_height","_padding","_viewport","left","right","bottom","_io","Renderer","initSVG","initCanvas","Canvas","tw","th","ctx","getContext","setAttribute","setTransform","resize","../render/canvas/index","../render/svg-headless/index","../util/debug","./View",30,"Model","_defs","_predicates","_scene","_node","_builder","predicates","defs","pipeline","predicate","disconnect","marks","connect","fire","cs","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",31,"streaming","ds","_model","listener","streamer","_streamer","_changeset","api","signals","_api","update","build","_renderNode","router","evaluate","debug","trans","items","revises","finalize","last","parseStreams","Encoder","Transition","el","__width","__height","_autopad","_handler","dataValues","signal","setter","signalValues","reflow","_strict","padding","autopad","inset","autopadInset","viewport","_build","prevHandler","parentNode","select","append","attr","style","Handler","handlers","handler","duration","ease","props","listeners","onSignal","offSignal","../parse/streams","../render/svg/index","../scene/Encoder","../scene/Transition","../util/config","./HeadlessView",32,"graph","_data","collector","ids","_id","../util/constants","./Node","./changeset",33,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","ingest","where","func","idMap","unshift","output","dest","_srcMap","derive","./Collector","./tuple",34,"_signals","forEachNode","branch","Signal","_stamp","_rank","doNotPropagate","db","names","sg","signalRef","ref","schedule","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","SIGNALS","reevaluate","run","./Datasource","./Signal",35,"REEVAL","FIELDS","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","bool","cur","foundSending","reeval",36,"_value","_handlers",37,"reset_prev",38,"datum","tuple_id","reset",39,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","Identifier","id","Program","MemberExpression","computed","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","ExpressionStatement","expression","./constants","./functions",40,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",41,"fncall","cast","DATE","STRING","REGEXP","acos","asin","atan","atan2","tan","now","datetime","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","if",42,"parser","./codegen","./parser",43,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",44,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",45,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",46,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","startRule",47,"eval","../expression",48,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",49,"parseProperties","parseMark","mark","delay","./properties",50,"./mark",51,"signalName","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",52,53,"parseSignal","parseOperands","decl","arg","pred","parseComparator","parseLogical","parseIn","parseScale","scope","invert","=","==","!=",">",">=","<","<=","and","&&","or","||","in",54,"compile","vars","valueRef","DEPS","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","colorRef","sgRef","fRef","sRef","fieldRef","scaleRef","band","mult","xx","color","yy","zz","nested","fr",55,"dep","./expr",56,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",57,"changset","selector","START","MIDDLE","END","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",58,"tx","../transforms/index",59,"eventName","_active","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","gx","gy","marktype","picker","./marks",60,"scaleCanvas","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","element","bb2","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../core/Bounds","../../util/config",61,"./Handler","./Renderer",62,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","axisItems","legendItems","gradient","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",63,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",64,"SVGBuilder","./svg",65,66,"tag","close","escape_text","escape_font","group_bg","styl","class","clip_id","clipping","arc_path","area_path_h","area_path_v","line_path","symbol_path","xlink:href","text-anchor","cssClass","cls","xw","yh","styleProps","styles","_gid","_text","foot","svgNamespace","buildDefs","dgrad","dclip","stop-color","meta","MARKS","sty","nest","center",67,"svgHandler","__data__","_svg","dom","removeEventListener",68,"updateDefs","each","grd","cr","renderItems",69,"dup",70,"setProperty","removeProperty","area_path","setAttributeNS","removeAttribute","textContent","drawMark","evts","grps","childNodes","notG","mark_id",71,"Bounder","_mark","GROUP","../util/bounds",72,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Encoder","./Item",73,"preds","enc","EMPTY",74,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","../dataflow/Collector","../parse/axes","./Builder","./Scale",75,"hasPropertySet","cousin","iidx","midx","touch",76,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","dataRef","RANGE","DOMAIN","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","cacheField","Aggregate","singleton","stat","group_by","MIN","MAX","order","DESC","SINGLETON","domainMin","domainMax","LOG","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",77,"updates","elapsed","curr","calcBounds","skip","interp","timer",78,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","label","tdata","vg_axisOrients","subticks","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",79,"GroupBy","Transform","addParameters","var","varp","_fieldsDef","_Aggregators","_singleton","meas","_reset","_gb","_new_cell","flg","./GroupBy","./Transform",80,"BatchTransform","batchTransform",81,"Bin","default","bin",82,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",83,"Facet","_new_tuple",84,"Filter","_skip","../parse/expr",85,"Fold","rst","get_tuple","dlen","fold",86,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",87,"Formula",88,"Geo","Parameters","lon","lat","projection","clipAngle","clipExtent","d3Projection","proj","param","_mode","_projection","geo","ll","xy",89,"GeoPath","geojson","./Geo",90,"gb","groupBy",91,"LinkPath","sx","sy","ty","curve","ix","iy","diagonalX","diagonalY","shapes",92,"Parameter","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","isExpr",93,"Pie","ones","./BatchTransform",94,"Sort","by",95,"Stack","sortby","partition","groups",96,"params","_parameters","./Parameter",97,"Treemap","sticky","mode","treemap",98,"Unique",99,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",100,"aggregate","linkpath","formula","geopath","pie","zip","./Aggregate","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./GeoPath","./LinkPath","./Pie","./Sort","./Stack","./Treemap","./Unique","./Zip",101,"quickselect","_counts","../util/quickselect",102,"gfx","pathBounds","boundPath","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config",103,"utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20",104,"sentinel","COUNT","ASC",105,"console",106,"swap","pivot"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,GAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCAAC,EAAAD,SACA0B,MACAC,KAAAT,EAAA,oBAEAU,UACAC,UAAAX,EAAA,4BACAY,WAAAZ,EAAA,6BACAa,MAAAb,EAAA,wBACAc,KAAAd,EAAA,wBAEAe,OACAC,KAAAhB,EAAA,qBAEAiB,OACAC,QAAAlB,EAAA,uBACAmB,aAAAnB,EAAA,6BAEAoB,WAAApB,EAAA,0BACAqB,OAAArB,EAAA,qBACAsB,KAAAtB,EAAA,cCGGuB,kBAAkB,GAAGC,4BAA4B,GAAGC,uBAAuB,GAAGC,sBAAsB,GAAGC,2BAA2B,GAAGC,mBAAmB,GAAGC,sBAAsB,GAAGC,2BAA2B,GAAGC,yBAAyB,IAAIC,oBAAoB,IAAIC,QAAU,KAAKC,GAAG,SAASlC,EAAQjB,EAAOD,SAE9SqD,GAAG,SAASnC,EAAQjB,EAAOD,GClBjC,QAAAsD,KACA,IAAAC,EAAA,CAGAA,GAAA,CAGA,KAFA,GAAAC,GACAC,EAAAC,EAAAlC,OACAiC,GAAA,CACAD,EAAAE,EACAA,IAEA,KADA,GAAAvC,GAAA,KACAA,EAAAsC,GACAD,EAAArC,IAEAsC,GAAAC,EAAAlC,OAEA+B,GAAA,GAgBA,QAAAI,MApCA,GAAAC,GAAA3D,EAAAD,WACA0D,KACAH,GAAA,CAoBAK,GAAAC,SAAA,SAAAC,GACAJ,EAAAK,KAAAD,GACAP,GACAS,WAAAV,EAAA,IAIAM,EAAAK,MAAA,UACAL,EAAAM,SAAA,EACAN,EAAAO,OACAP,EAAAQ,QACAR,EAAAS,QAAA,GACAT,EAAAU,YAIAV,EAAAW,GAAAZ,EACAC,EAAAY,YAAAb,EACAC,EAAAa,KAAAd,EACAC,EAAAc,IAAAf,EACAC,EAAAe,eAAAhB,EACAC,EAAAgB,mBAAAjB,EACAC,EAAAiB,KAAAlB,EAEAC,EAAAkB,QAAA,SAAAC,GACA,KAAA,IAAA3D,OAAA,qCAIAwC,EAAAoB,IAAA,WAAA,MAAA,KACApB,EAAAqB,MAAA,SAAAC,GACA,KAAA,IAAA9D,OAAA,mCAEAwC,EAAAuB,MAAA,WAAA,MAAA,SD2BMC,GAAG,SAASlE,EAAQjB,EAAOD,GEhFjC,QAAAqF,KACA7E,KAAA8E,UACA9E,KAAA+E,SACA/E,KAAAgF,SAAA,EAoFA,QAAAC,GAAAC,GACA,GAAAlD,EAAAmD,QAAAD,GAAA,MAAAA,EACA,IAAA,MAAAA,EAAA,QACA,IAAAX,GAAAa,EAAA3E,IACA,KAAA8D,IAAAW,GACAE,EAAApD,EAAAqD,MAAAH,EAAAX,IACA9D,EAAA8C,MAAAgB,KAAAA,EAAAa,IAAAA,GAEA,OAAA3E,GAnGA,GAAAuB,GAAAtB,EAAA,WACA4E,EAAA5E,EAAA,cACA6E,EAAA7E,EAAA,eAQA8E,EAAAX,EAAAW,OACAC,SAAA,EACAC,SAAA,GAGAC,EAAAd,EAAAe,SAIAD,GAAAE,OAAA,SAAAC,GACA,MAAA,OAAAA,EAAA9F,KAAAgF,SACAhF,KAAAgF,UAAAc,EACA9F,KAAA+E,SACA/E,OAIA2F,EAAAI,IAAA,SAAAA,GACA,MAAA,OAAAA,EAAA/F,KAAAgG,MACAhG,KAAAgG,KAAAhE,EAAAiE,EAAAF,GACA/F,OAKA2F,EAAAO,QAAA,SAAAC,GAQA,MAPAnG,MAAAoG,MAAApE,EAAAqD,MAAAc,GAAAE,IAAA,SAAAC,EAAA3F,GAIA,GAHA2F,EAAAtE,EAAAuE,SAAAD,IAAA/B,KAAA+B,EAAAE,IAAAxE,EAAAiE,EAAAK,IACAtE,EAAAyE,WAAAH,IAAA/B,KAAAvC,EAAAuC,KAAA+B,IAAAA,EAAA/B,MAAA,IAAA5D,EAAA6F,IAAAF,GACAA,EAAA/B,MAAAvC,EAAAyE,WAAAH,EAAAE,KAAAF,EAAA,KACA,MAAAA,EAAA,KAAA,6BAAAA,CACA,OAAAA,KAEAtG,MAKA2F,EAAAe,UAAA,SAAAxB,GACAA,EAAAD,EAAAC,EACA,IACAyB,GAAApH,EAAAoB,EAAAiG,EAAAC,EAAAC,EADAC,EAAA/G,KAAA+E,QAGA,KAAApE,EAAA,EAAAA,EAAAuE,EAAAlE,SAAAL,EAAA,CACA,IAAAiG,EAAA,EAAAD,KAAApH,EAAA2F,EAAAvE,GAAAiG,EAAArH,EAAA6F,IAAApE,SAAA4F,EACAC,EAAAtH,EAAA6F,IAAAwB,GACAE,EAAAvH,EAAAuH,IAAAvH,EAAAuH,GAAAF,IAAAC,GAAA,MAAAtH,EAAAgF,KAAA,GAAA,IAAAhF,EAAAgF,MACAoC,EAAApD,KAAA+B,EAAAuB,GAAAC,GAEAC,GAAAxD,MACAgB,KAAAhF,EAAAgF,KACAyC,SAAA1B,EAAA2B,OACAN,EACA3G,KAAAgF,QACAzF,EAAAiH,KAAAxE,EAAAiE,EAAA1G,EAAAiH,MAAAxE,EAAAiE,EAAA1G,EAAAgF,MACAvE,KAAAkH,WAGA,MAAAlH,OAIA2F,EAAAwB,MAAA,WACA,MAAAnH,MAAA0G,WAAAU,IAAA,WAIAzB,EAAAuB,QAAA,SAAAG,EAAA9C,EAAA+C,GACAD,EAAA9C,GAAA+C,GAGA3B,EAAA4B,UAAA,SAAArC,GACA,GAAAvE,GAAAP,EAAAb,EAAAwH,EAAA/G,KAAA+E,KACA,KAAApE,EAAA,EAAAP,EAAA2G,EAAA/F,OAAAZ,EAAAO,IAAAA,GACApB,EAAA2F,EAAA6B,EAAApG,GAAA4D,SACAwC,EAAApG,GAAAqG,SAAApB,UAAAY,IAAAxE,EAAAiE,EAAA1G,GAGA,OAAAS,OAgBA2F,EAAA6B,MAAA,WACA,MAAAxH,MAAA8E,UAAA9E,MAGA2F,EAAA8B,MAAA,SAAAC,GACA,GAEA/G,GAFA2F,EAAAtG,KAAAoG,MACAhG,EAAAkG,EAAAtF,OACA2G,EAAAC,MAAAxH,EACA,KAAAO,EAAA,EAAAP,EAAAO,IAAAA,EAAAgH,EAAAhH,GAAA2F,EAAA3F,GAAA6F,IAAAkB,EACA,QAAA3B,IAAA/D,EAAA6F,OAAAF,GAAAG,KAAAH,IAGAhC,EAAAoC,MAAA,SAAAL,GACA,GAAAC,GAAA3H,KAAAyH,MAAAC,EACA,OAAA1H,MAAA8E,OAAA6C,EAAA5B,OAAA/F,KAAA8E,OAAA6C,EAAA5B,KAAA/F,KAAAgI,SAAAN,EAAAC,KAGAhC,EAAAqC,SAAA,SAAAN,EAAAC,GACA,GAOAhH,GAPAsH,GACAC,IAAA,EACAC,MAAAnI,KAAAoI,UAAAV,EAAAC,GACAU,KAAA7C,EAAAC,SACA6C,SAGAvB,EAAA/G,KAAA+E,KACA,KAAApE,EAAA,EAAAA,EAAAoG,EAAA/F,SAAAL,EACAsH,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAA,GAAAwC,GAAApG,GAAAqG,SAAAiB,EAAAA,EAAAE,MAMA,OAJAF,GAAAM,UACAN,EAAAO,KAAA,GAAAjD,GAAAvF,KAAAgG,OAGAiC,GAGAtC,EAAAyC,UAAA,SAAAV,GACA,GACA/G,GAAAP,EADA+F,EAAAnG,KAAAoG,MACAjG,IACA,KAAAQ,EAAA,EAAAP,EAAA+F,EAAAnF,OAAAZ,EAAAO,IAAAA,EACAR,EAAAgG,EAAAxF,GAAA4D,MAAA4B,EAAAxF,GAAA6F,IAAAkB,EAEA,OAAA1H,MAAAyI,QAAAtI,IAIAwF,EAAA8C,QAAAzG,EAAA0G,SAIA/C,EAAAgD,KAAA,SAAAjB,GACA,GACA/G,GADAsH,EAAAjI,KAAA+H,MAAAL,GACAX,EAAA/G,KAAA+E,KAIA,KAFAkD,EAAAC,KAAA,EACAD,EAAAM,SAAAN,EAAAO,KAAAI,IAAAlB,GACA/G,EAAA,EAAAA,EAAAoG,EAAA/F,SAAAL,EACAsH,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAAqE,IAAAlB,EAEAO,GAAAI,MAAA7C,EAAAE,UAGAC,EAAAkD,KAAA,SAAAnB,GACA,GACA/G,GADAsH,EAAAjI,KAAA+H,MAAAL,GACAX,EAAA/G,KAAA+E,KAIA,KAFAkD,EAAAC,KAAA,EACAD,EAAAM,SAAAN,EAAAO,KAAAM,IAAApB,GACA/G,EAAA,EAAAA,EAAAoG,EAAA/F,SAAAL,EACAsH,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAAuE,IAAApB,EAEAO,GAAAI,MAAA7C,EAAAE,UAGAC,EAAAoD,KAAA,SAAArB,EAAAsB,GACA,GACArI,GADAsH,EAAAjI,KAAA+H,MAAAL,GACAX,EAAA/G,KAAA+E,KAEA,KAAApE,EAAA,EAAAA,EAAAoG,EAAA/F,SAAAL,EACAsH,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAAuE,IAAAE,GACAf,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAAqE,IAAAlB,EAEAO,GAAAI,MAAA7C,EAAAE,UAGAC,EAAAsD,OAAA,WACA,GAEAhB,GAAAtH,EAAAgH,EAFAsB,KACAlC,EAAA/G,KAAA+E,KAGA,KAAA4C,IAAA3H,MAAA8E,OAAA,CAEA,GADAmD,EAAAjI,KAAA8E,OAAA6C,GACAM,EAAAC,IAAA,EAAA,CACA,IAAAvH,EAAA,EAAAA,EAAAoG,EAAA/F,SAAAL,EACAsH,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAA2E,KAEAD,GAAA1F,KAAA0E,EAAAE,OAEAF,EAAAI,KAAA,EAIA,MADArI,MAAAmJ,OAAA,EACAF,GAGAtD,EAAAyD,QAAA,WACA,GAEAnB,GAAAI,EAAA1H,EAAAgH,EAFAyB,GAAAR,OAAAE,OAAAO,QACAtC,EAAA/G,KAAA+E,KAGA,KAAA4C,IAAA3H,MAAA8E,OAAA,CAKA,IAJAmD,EAAAjI,KAAA8E,OAAA6C,GACAU,EAAAJ,EAAAI,KAGA1H,EAAA,EAAAA,EAAAoG,EAAA/F,SAAAL,EACAsH,EAAAK,KAAAvB,EAAApG,GAAA4D,MAAA2E,KAIAjB,GAAAC,KAAA,GACAG,IAAA7C,EAAAE,UACA0D,EAAAN,IAAAvF,KAAA0E,EAAAE,aAEAnI,MAAA8E,OAAA6C,IACAU,EAAA7C,EAAAC,SACA2D,EAAAR,IAAArF,KAAA0E,EAAAE,OACAE,EAAA7C,EAAAE,UACA0D,EAAAC,IAAA9F,KAAA0E,EAAAE,OAGAF,EAAAI,KAAA,EAIA,MADArI,MAAAmJ,OAAA,EACAC,GAGAzD,EAAA2D,QAAA,SAAAC,GACA,MAAAvJ,MAAAwH,QAAAgC,OAAAD,GAAAN,UAGAtD,EAAA6D,OAAA,SAAAD,GACAvJ,KAAAyJ,cACA,KAAA,GAAA9I,GAAA,EAAAA,EAAA4I,EAAAvI,SAAAL,EACAX,KAAA2I,KAAAY,EAAA5I,GAEA,OAAAX,OAGA2F,EAAA+D,OAAA,SAAAH,GACA,IAAAvJ,KAAAgF,QACA,KAAA,gGAGA,KAAA,GAAArE,GAAA,EAAAA,EAAA4I,EAAAvI,SAAAL,EACAX,KAAA6I,KAAAU,EAAA5I,GAGA,OADAX,MAAAmJ,OAAA,EACAnJ,MAIA2F,EAAA8D,aAAA,WACA,GAAAzJ,KAAAmJ,MAAA,CACA,IAAA,GAAAxB,KAAA3H,MAAA8E,OACA9E,KAAA8E,OAAA6C,GAAAY,SACAvI,KAAA8E,OAAA6C,GAAAa,KAAAmB,QAGA3J,MAAAmJ,OAAA,IAGA1J,EAAAD,QAAAqF,IFsFG+E,UAAU,GAAGC,cAAc,EAAEC,aAAa,IAAIC,GAAG,SAASrJ,EAAQjB,EAAOD,GGtW5E,QAAA+F,GAAAQ,GACA/F,KAAA2I,QACA3I,KAAA6I,QACA7I,KAAAgG,KAAAD,GAAA,KARA,GAAA/D,GAAAtB,EAAA,WACAsJ,EAAAtJ,EAAA,YAEAuJ,EAAA,YAQAtE,EAAAJ,EAAAK,SAEAD,GAAAiD,IAAA,SAAA9C,GACA9F,KAAA2I,KAAApF,KAAAuC,IAGAH,EAAAmD,IAAA,SAAAhD,GACA9F,KAAA6I,KAAAtF,KAAAuC,IAGAH,EAAAgE,OAAA,WACA,GAAA,IAAA3J,KAAA6I,KAAA7H,OAAA,MAAAhB,MAAA2I,IACA,IAIAhI,GAAAiG,EAAAxG,EAJAK,EAAAT,KAAA2I,KACAtI,EAAAL,KAAA6I,KACAlB,EAAA3H,KAAAgG,KACA0B,EAAAE,MAAAnH,EAAAO,OAAAX,EAAAW,OAGA,IAAA2G,EAAA,CAEA,GAAAuC,GAAAlI,EAAAmI,MAAA9J,EAAAsH,EACA,KAAAhH,EAAA,EAAAiG,EAAA,EAAAxG,EAAAK,EAAAO,OAAAZ,EAAAO,IAAAA,EACAuJ,EAAAE,eAAAzC,EAAAlH,EAAAE,OAAA+G,EAAAd,KAAAnG,EAAAE,QAEA,CAEA,IAAAA,EAAA,EAAAP,EAAAC,EAAAW,OAAAZ,EAAAO,IAAAA,EACAN,EAAAM,GAAAsJ,GAAA,CAEA,KAAAtJ,EAAA,EAAAiG,EAAA,EAAAxG,EAAAK,EAAAO,OAAAZ,EAAAO,IAAAA,EACAF,EAAAE,GAAAsJ,KAAAvC,EAAAd,KAAAnG,EAAAE,GAEA,KAAAA,EAAA,EAAAP,EAAAC,EAAAW,OAAAZ,EAAAO,IAAAA,QACAN,GAAAM,GAAAsJ,GAMA,MAFAjK,MAAA6I,QACA7I,KAAAqK,GAAA,KACArK,KAAA2I,KAAAjB,GAKA/B,EAAA2E,OAAA,SAAA9D,GACA,GAAAxG,KAAAqK,KAAA7D,IAAAxG,KAAAuK,KAAA,CACA,GAAAzE,GAAA9F,KAAA2J,SACAhJ,EAAAqJ,EAAAM,OAAAE,MAAA1E,EAAAU,EACAxG,MAAAuK,MAAAzE,EAAAnF,EAAA,IAAAmF,EAAAnF,EAAA,KACAX,KAAAqK,GAAA7D,EAEA,MAAAxG,MAAAuK,MAEA5E,EAAA8E,IAAA,SAAAlL,GAAA,MAAAS,MAAAsK,OAAA/K,GAAA,IACAoG,EAAA+E,IAAA,SAAAnL,GAAA,MAAAS,MAAAsK,OAAA/K,GAAA,IAEAoG,EAAAgF,SAAA,SAAAnE,GAKA,MAJAxG,MAAAqK,KAAA7D,GAAAxG,KAAA4K,KACA5K,KAAA4K,GAAAZ,EAAAW,SAAA3K,KAAA2J,SAAAnD,GACAxG,KAAAqK,GAAA7D,GAEAxG,KAAA4K,IAEAjF,EAAAkF,GAAA,SAAAtL,GAAA,MAAAS,MAAA2K,SAAApL,GAAA,IACAoG,EAAAmF,GAAA,SAAAvL,GAAA,MAAAS,MAAA2K,SAAApL,GAAA,IACAoG,EAAAoF,GAAA,SAAAxL,GAAA,MAAAS,MAAA2K,SAAApL,GAAA,IAEAE,EAAAD,QAAA+F,IH6WGyF,WAAW,GAAGpB,UAAU,KAAKqB,GAAG,SAASvK,EAAQjB,EAAOD,GI3b3D,GAAAwC,GAAAtB,EAAA,WACAmE,EAAAnE,EAAA,eAEAjB,GAAAD,QAAA,WAEA,GAAA0L,GAAAtD,MAAAhC,UAAAuF,OAAApK,KAAAqK,UAAA,SAAA3K,EAAAiH,GACA,MAAAjH,GAAA4K,OAAArJ,EAAAqD,MAAAqC,QAGA,QAAA,GAAA7C,IACAqB,QAAAgF,GACAxE,WAAAU,IAAA,cJ+bGwC,UAAU,GAAG0B,eAAe,IAAIC,GAAG,SAAS7K,EAAQjB,EAAOD,GKnV9D,QAAAgM,GAAAC,GACA,MAAA,UAAAC,GACA,GAAA/E,GAAA3E,EAAA2J,QAAAC,KAAA,GAAAhD,IAAA,GAAAE,IAAA,GAAA+C,IAAA,GAAAJ,EAEA,OADA9E,GAAA+E,IAAAA,GAAAD,EAAAlH,KACAoC,GAIA,QAAAmF,GAAAC,EAAAlG,GACA,QAAA0C,GAAA5B,EAAAlG,GACA,QAAAuL,GAAA3L,GAAAsG,EAAAtG,IAAAkI,EAAA5B,EAAAA,EAAAtG,GAAA4L,EAAA5L,MAGA,MAFAI,GAAAyL,KAAAzL,EAAAyL,IAAAC,QAAAH,GACAnG,GAAApF,EAAA2L,KAAA3L,EAAA2L,IAAAD,QAAAH,GACArF,EAEA,GAAAN,GAAA0F,EAAAZ,OACA5C,EACAwD,EAAAZ,OAAA,SAAAxE,EAAAlG,GAAA,MAAAkG,GAAAlG,EAAA8D,MAAA9D,EAAAkG,OAEA,OAAA3E,GAAAqK,KAAAhG,GAAAiG,KAAA,SAAA7L,EAAA8L,GAAA,MAAA9L,GAAAoL,IAAAU,EAAAV,MAGA,QAAA5E,GAAA8E,EAAAlG,EAAA2G,EAAAC,GACA,GAAAC,GAAAZ,EAAAC,EAAAlG,GACA8G,EAAA,sEACA/D,EAAA,2EACAE,EAAA,2EACAI,EAAA,2CA8BA,OA5BAwD,GAAAP,QAAA,SAAA1L,GACAA,EAAAoL,IAAA,GACAc,EAAAlM,EAAAmL,KAAAe,EACA/D,EAAAnI,EAAAmI,IAAAA,EACAE,EAAArI,EAAAqI,IAAAA,IAEA6D,GAAAlM,EAAAmL,KACAhD,GAAAnI,EAAAmI,IACAE,GAAArI,EAAAqI,OAGAiD,EAAAa,QACAN,KAAA,SAAA7L,EAAA8L,GAAA,MAAA9L,GAAAoL,IAAAU,EAAAV,MACAM,QAAA,SAAA1L,GACAyI,GAAA,kBAAAzI,EAAAiL,IAAA,KAAAjL,EAAAyI,IAAA,OAEAA,GAAA,YAGAyD,EAAAE,SAAA,OAAA,IAAAF,GACAA,EAAA/G,UAAAkH,OAAAL,EACAE,EAAA/G,UAAAgD,IAAAiE,SAAA,IAAA,uBAAAjE,GACA+D,EAAA/G,UAAAkD,IAAA+D,SAAA,IAAA,uBAAA/D,GACA6D,EAAA/G,UAAAsD,IAAA2D,SAAA3D,GACAyD,EAAA/G,UAAAY,IAAAgG,EACAG,EAAA/G,UAAAyD,IAAAA,EACAsD,EAAA/G,UAAAmH,SAAArM,EAAA,YAAAyG,MAAA4F,SACAJ,EAAA/G,UAAAoH,QAAAhL,EAAAgL,QACAL,EAGA,QAAAtD,GAAA4D,EAAAC,GACAC,SAAAD,GAAAA,IAAAD,IACAjN,KAAA8I,IAAAoE,GACAlN,KAAA4I,IAAAqE,IAtLA,GAAAjL,GAAAtB,EAAA,WAEAuL,GACAtC,OAAA6B,GACAjH,KAAA,SACAqH,KAAA,uBACA1C,IAAA,qBAAA2C,IAAA,KAEA1E,MAAAqE,GACAjH,KAAA,QACA2E,IAAA,aAEAkE,QAAA5B,GACAjH,KAAA,UACA2E,IAAA,iBAEAmE,MAAA7B,GACAjH,KAAA,QACA2E,IAAA,eAEAoE,IAAA9B,GACAjH,KAAA,MACAqH,KAAA,gBACAhD,IAAA,iBACAE,IAAA,iBACAI,IAAA,aAEAqE,KAAA/B,GACAjH,KAAA,OACAqH,KAAA,iBACAhD,IAAA,sDACAE,IAAA,sDACAI,IAAA,cAEAsE,QAAAhC,GACAjH,KAAA,UACA2E,IAAA,YACAgD,KAAA,QAAAL,IAAA,IAEA4B,SAAAjC,GACAjH,KAAA,WACAqH,KAAA,gBACAhD,IAAA,mCACAE,IAAA,mCACAI,IAAA,4BACAgD,KAAA,QAAAL,IAAA,IAEA6B,UAAAlC,GACAjH,KAAA,YACA2E,IAAA,wBACAgD,KAAA,YAAAL,IAAA,IAEA8B,MAAAnC,GACAjH,KAAA,QACA2E,IAAA,uCACAgD,KAAA,YAAAL,IAAA,IAEA+B,OAAApC,GACAjH,KAAA,SACA2E,IAAA,mCACAgD,KAAA,YAAAL,IAAA,IAEAgC,OAAArC,GACAjH,KAAA,SACA2E,IAAA,yBACAgD,KAAA,UAAAL,IAAA,IAEAhB,GAAAW,GACAjH,KAAA,KACA2E,IAAA,yBACAgD,KAAA,UAAAL,IAAA,IAEAd,GAAAS,GACAjH,KAAA,KACA2E,IAAA,yBACAgD,KAAA,UAAAL,IAAA,IAEAkB,SAAAvB,GACAjH,KAAA,WACA2E,IAAA,8CACAgD,KAAA,UAAAL,IAAA,IAEAiC,OAAAtC,GACAjH,KAAA,SACAqE,IAAA,qCACAE,IAAA,sBACAI,IAAA,yCACAgD,KAAA,OAAAE,KAAA,UAAAP,IAAA,IAEAkC,OAAAvC,GACAjH,KAAA,SACAqE,IAAA,qCACAE,IAAA,sBACAI,IAAA,yCACAgD,KAAA,OAAAE,KAAA,UAAAP,IAAA,IAEApB,IAAAe,GACAjH,KAAA,MACAqH,KAAA,wBACAhD,IAAA,kCACAE,IAAA,kBACAI,IAAA,8EACAkD,KAAA,UAAAP,IAAA,IAEAnB,IAAAc,GACAjH,KAAA,MACAqH,KAAA,wBACAhD,IAAA,kCACAE,IAAA,kBACAI,IAAA,8EACAkD,KAAA,UAAAP,IAAA,IAEAmC,SAAAxC,GACAjH,KAAA,WACA2E,IAAA,+FACAgD,KAAA,OAAA,QAAA,UAAAL,IAAA,IAsEAI,GAAAhF,OAAAA,EACAxH,EAAAD,QAAAyM,IL4cGjB,WAAW,GAAGpB,UAAU,KAAKqE,GAAG,SAASvN,EAAQjB,EAAOD,GMloB3D,QAAA0O,GAAAC,GACAA,EAAAA,KAGA,IAOAC,GAAAC,EAAAC,EAAAC,EAAAzI,EAAAnF,EAAA6N,EAPAC,EAAAN,EAAAO,SAAA,GACAjD,EAAA0C,EAAA1C,MAAA,GACAkD,EAAAC,KAAAC,IAAApD,GACAqD,EAAAX,EAAAW,MAAA,EAAA,GACArE,EAAA0D,EAAA1D,IACAC,EAAAyD,EAAAzD,IACAqE,EAAArE,EAAAD,CAGA,IAAA0D,EAAAC,KAEAA,EAAAD,EAAAC,SACA,IAAAD,EAAAa,MAEAZ,EAAAD,EAAAa,MAAAJ,KAAAnE,IACA0D,EAAAa,MAAAhO,OAAA,EACAiO,EAAAd,EAAAa,MAAAD,EAAAN,EAAA,EAAAN,EAAAa,MAAAhO,cAEA,CAEAqN,EAAAO,KAAAM,KAAAN,KAAAC,IAAAJ,GAAAE,GACAL,EAAAH,EAAAG,SAAA,EACAF,EAAAQ,KAAAlE,IACA4D,EACAM,KAAAO,IAAA1D,EAAAmD,KAAAQ,MAAAR,KAAAC,IAAAE,GAAAJ,GAAAN,GAIA,GAAAD,IAAA3C,QAAAmD,KAAAM,KAAAH,EAAAX,GAAAK,EAGA,KAAA9N,EAAA,EAAAA,EAAAmO,EAAA9N,SAAAL,EACAmF,EAAAsI,EAAAU,EAAAnO,GACAmF,GAAAwI,GAAAG,GAAAM,EAAAjJ,IAAAsI,EAAAtI,GAWA,MANAA,GAAA8I,KAAAC,IAAAT,GACAG,EAAAzI,GAAA,EAAA,MAAAA,EAAA6I,GAAA,EACAH,EAAAI,KAAAO,IAAA1D,GAAA8C,EAAA,GACA9D,EAAAmE,KAAAnE,IAAAA,EAAAmE,KAAAS,MAAA5E,EAAA2D,EAAAI,GAAAJ,GACA1D,EAAAkE,KAAAM,KAAAxE,EAAA0D,GAAAA,GAGAkB,MAAA7E,EACA8E,KAAA7E,EACA0D,KAAAA,EACAoB,MAAAjB,UAAAA,GACAjH,MAAAA,EACAkD,MAAAA,GAIA,QAAAyE,GAAAxO,EAAAiH,EAAA+H,EAAAC,GACA,KAAAA,EAAAD,GAAA,CACA,GAAAE,GAAAF,EAAAC,IAAA,CACA1N,GAAA4N,IAAAnP,EAAAkP,GAAAjI,GAAA,EAAA+H,EAAAE,EAAA,EACAD,EAAAC,EAEA,MAAAF,GAGA,QAAAnI,GAAAxB,GACA,MAAA9F,MAAAoO,KAAAQ,KAAAS,MAAAvJ,EAAA9F,KAAAoO,KAAAyB,GAGA,QAAArF,GAAA1E,GACA,MAAA8I,MAAAS,OAAAvJ,EAAA9F,KAAAsP,OAAAtP,KAAAoO,KAAAyB,GAGA,QAAAC,GAAAhK,GACA,MAAA9F,MAAAwP,KAAAO,KAAAzI,EAAAvG,KAAAf,KAAA8F,IAGA,QAAAkK,GAAAlK,GACA,MAAA0E,GAAAzJ,KAAAf,KAAAA,KAAAwP,KAAAA,KAAA1J,IApFA,GAAA9D,GAAAtB,EAAA,WACAuP,EAAAvP,EAAA,iBACAmP,EAAA,KAqFA3B,GAAA6B,KAAA,SAAA5B,GACAA,EAAAA,KAGA,IAAA+B,GAAA/B,EAAA1D,IACA0F,EAAAhC,EAAAzD,IACA+D,EAAAN,EAAAO,SAAA,GACA0B,EAAAjC,EAAAkC,SAAA,EACAtB,GAAAoB,GAAAD,EACAV,EAAArB,EAAAqB,KAAAS,EAAA9B,EAAAqB,MAAAS,EAAAK,KAAAvB,EAAAqB,EAAA3B,GACA/M,EAAAwM,GACAzD,IAAA,MAAA+E,EAAA/E,IAAA+E,EAAA/E,IAAA+E,EAAAA,KAAAU,GACAxF,IAAA,MAAA8E,EAAA9E,IAAA8E,EAAA9E,IAAA8E,EAAAA,KAAAW,GACAzB,QAAAD,EACAH,QAAAkB,EAAAlB,QACAU,MAAAQ,EAAApB,MAMA,OAHA1M,GAAA8N,KAAAA,EACA9N,EAAA8I,MAAAwF,EACA7B,EAAAoC,MAAA7O,EAAA4F,MAAAwI,GACApO,GAGAjC,EAAAD,QAAA0O,INyoBGsC,gBAAgB,GAAG5G,UAAU,KAAK6G,GAAG,SAAS/P,EAAQjB,EAAOD,GO5uBhE,QAAAkR,GAAA/G,EAAApK,EAAA4O,GACAA,EAAAwC,EAAAhH,EAAApK,EAAA4O,EACA,IAAA5B,GAAA7K,EAAAyM,EACA,OAAA5B,GACAvK,EAAA4O,MAAA,MAAArE,EAAAiD,KAAAA,KACA,SAAA9H,GAAA,MAAA6E,GAAAjF,MAAAiF,EAAAiD,KAAAA,KAAA9H,KACA,SAAAA,GAAA,MAAA6E,GAAAjF,MAAAI,KACAyG,EAAA3B,UAJA2B,EAAA3B,UAAAxK,EAAA0G,SAOA,QAAAmI,GAAAlH,EAAApK,EAAA4O,GACAA,EAAAwC,EAAAhH,EAAApK,EAAA4O,EACA,IAAA5B,GAAA7K,EAAAyM,EACA,OAAA5B,GACAuE,EAAAnH,EAAAwE,EAAA3B,SAAAD,GACAwE,EAAApH,EAAAwE,EAAA3B,SAAA2B,GAAAA,EAAA7B,MAGA,QAAA5K,GAAAyM,GACA,GAAAhO,GAAAgO,EAAA6C,KAAAzE,EAAA,IAKA,QAJA,MAAApM,GAAA8Q,EAAA9Q,MACA,YAAAA,GAAA,MAAAgO,EAAAG,UAAAH,EAAAG,QAAA,GACA/B,EAAA,SAAApM,EAAA+N,EAAA6B,KAAA5B,GAAAD,EAAAC,IAEA5B,EAGA,QAAAoE,KACA,GAAAlQ,GAAA2K,UACAzK,EAAA,EACAgJ,EAAA3H,EAAAmD,QAAA1E,EAAAE,IAAAF,EAAAE,KAAA,KACApB,EAAAyC,EAAAyE,WAAAhG,EAAAE,KAAAqB,EAAAuE,SAAA9F,EAAAE,IAAAqB,EAAAiE,EAAAxF,EAAAE,MAAA,KACAwN,EAAAnM,EAAA2J,UAAAlL,EAAAE,GAEA,IAAAgJ,IACAwE,EAAA6C,KAAA7C,EAAA6C,MAAAA,EAAArH,EAAApK,GACA0R,EAAA9C,EAAA6C,OAAA,CACA,GAAAE,GAAAlH,EAAAM,OAAAX,EAAApK,EACA4O,GAAAnM,EAAA2J,QAAAlB,IAAAyG,EAAA,GAAAxG,IAAAwG,EAAA,IAAA/C,GAIA,MADA5O,KAAA4O,EAAA3B,SAAAjN,GACA4O,EAGA,QAAA2C,GAAAnH,EAAApK,EAAAgN,GAIA,IAAA,GAAAzG,GAAAc,EAHAuK,EAAAC,EAAAC,MAAA9E,EAAA+C,MAAA/C,EAAAgD,KAAAhD,EAAA6B,KAAA,EAAA7B,EAAA6B,MACA/H,IAAA,SAAAP,GAAA,OAAAwB,MAAAiF,EAAAjF,MAAAxB,GAAAqB,MAAA,KAEAxG,EAAA,EAAAA,EAAAgJ,EAAA3I,SAAAL,EAEA,GADAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,GAAA,CAEA,GADAc,EAAA2F,EAAA/B,MAAA1E,GACA,EAAAc,GAAAA,GAAAuK,EAAAnQ,SAAAsQ,SAAA1K,GAAA,QACAuK,GAAAvK,GAAAO,OAAA,EAIA,MADAgK,GAAAjD,KAAA3B,EACA4E,EAGA,QAAAJ,GAAApH,EAAApK,EAAA+M,GACA,GAAA9L,GAAAwJ,EAAAuH,OAAA5H,EAAApK,GAAAiS,EAAAhR,EAAAiR,MACA,OAAAjR,GAAA6F,IAAA,SAAAsB,GAAA,OAAAL,MAAAK,EAAAR,MAAAqK,EAAA7J,MACA2E,KAAAtK,EAAA0P,WAAApF,EAAA,SAAA,WA5EA,GAAAtC,GAAAtJ,EAAA,YACAsQ,EAAAtQ,EAAA,kBACAsB,EAAAtB,EAAA,WACA0Q,EAAA1Q,EAAA,eACAwN,EAAAxN,EAAA,UAEAuQ,GACAU,QAAA,EACAC,OAAA,EACA7B,KAAA,EAsEAtQ,GAAAD,SACAkR,KAAAA,EACAG,UAAAA,KP2vBGgB,cAAc,GAAGC,iBAAiB,GAAG9G,WAAW,GAAGpB,UAAU,GAAGmI,SAAS,IAAIC,IAAI,SAAStR,EAAQjB,EAAOD,GQ50B5G,GAAA4R,GAAA3R,EAAAD,UAEA4R,GAAAa,OAAA,SAAAC,EAAA9R,GACA,GAAAO,GAAAF,EAAAmH,MAAAxH,EACA,KAAAO,EAAA,EAAAP,EAAAO,IAAAA,EAAAF,EAAAE,GAAAuR,CACA,OAAAzR,IAGA2Q,EAAAe,MAAA,SAAA/R,GACA,MAAAgR,GAAAa,OAAA,EAAA7R,IAGAgR,EAAAC,MAAA,SAAA/B,EAAAC,EAAAnB,GAQA,GAPAhD,UAAApK,OAAA,IACAoN,EAAA,EACAhD,UAAApK,OAAA,IACAuO,EAAAD,EACAA,EAAA,KAGAC,EAAAD,GAAAlB,GAAAgE,EAAAA,EAAA,KAAA,IAAAxR,OAAA,iBACA,IAAAgG,GAAAyK,KAAA1Q,EAAA,EACA,IAAA,EAAAyN,EAAA,MAAAxH,EAAA0I,EAAAlB,IAAAzN,GAAA4O,GAAA8B,EAAA9N,KAAAqD,OACA,OAAAA,EAAA0I,EAAAlB,IAAAzN,GAAA4O,GAAA8B,EAAA9N,KAAAqD,EACA,OAAAyK,IAGAD,EAAAiB,UAEAjB,EAAAiB,OAAAC,QAAA,SAAA7H,EAAAC,GACAyC,SAAAzC,IACAA,EAAAD,EACAA,EAAA,EAEA,IAAAnE,GAAAoE,EAAAD,EACAlL,EAAA,WACA,MAAAkL,GAAAnE,EAAAsI,KAAAyD,SAGA,OADA9S,GAAAgT,QAAA,SAAAnS,GAAA,MAAAgR,GAAAe,MAAA/R,GAAAiG,IAAA9G,IACAA,GAGA6R,EAAAiB,OAAAV,QAAA,SAAAlR,EAAA8L,GACAY,SAAAZ,IACAA,EAAA9L,EACAA,EAAA,EAEA,IAAA6F,GAAAiG,EAAA9L,EACAlB,EAAA,WACA,MAAAkB,GAAAmO,KAAAS,MAAA/I,EAAAsI,KAAAyD,UAGA,OADA9S,GAAAgT,QAAA,SAAAnS,GAAA,MAAAgR,GAAAe,MAAA/R,GAAAiG,IAAA9G,IACAA,GAGA6R,EAAAiB,OAAAG,OAAA,SAAAjF,EAAAI,GACAJ,EAAAA,GAAA,EACAI,EAAAA,GAAA,CACA,IAAA8E,GACAlT,EAAA,WACA,GAAAmT,GAAAlB,EAAA9J,EAAA,EAAAiL,EAAA,CACA,IAAAxF,SAAAsF,EAGA,MAFA/K,GAAA+K,EACAA,EAAAtF,OACAzF,CAEA,GACAA,GAAA,EAAAkH,KAAAyD,SAAA,EACAM,EAAA,EAAA/D,KAAAyD,SAAA,EACAK,EAAAhL,EAAAA,EAAAiL,EAAAA,QACA,IAAAD,GAAAA,EAAA,EAGA,OAFAlB,GAAA5C,KAAAgE,KAAA,GAAAhE,KAAAC,IAAA6D,GAAAA,GACAD,EAAAlF,EAAAoF,EAAAnB,EAAA7D,EACAJ,EAAA7F,EAAA8J,EAAA7D,EAGA,OADApO,GAAAgT,QAAA,SAAAnS,GAAA,MAAAgR,GAAAe,MAAA/R,GAAAiG,IAAA9G,IACAA,QR+0BMsT,IAAI,SAASnS,EAAQjB,EAAOD,IAClC,SAAWM,GSz5BX,QAAAgT,GAAAtK,EAAAuK,GACA,GAAAvK,EAAA,CACA,GAAA2I,GAAA4B,EAAAC,MACAxK,IAAA2I,EAAAA,EAAA8B,KAAAF,EAAAG,WAAA,KAAA,IAAA1K,EAEA,MAAA2K,GAAAL,IAAAC,EAAAG,WAAAzR,MAAA+G,GARA,GAAAxG,GAAAtB,EAAA,cACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,IAUAL,GAAAI,UAAA,SAAAE,GACA,GAAAC,IAAAH,UAAAE,EACA,OAAA,UAAA5K,EAAAuK,GACA,MAAAD,GAAAtK,EAAAuK,EAAA/Q,EAAA2J,OAAAoH,EAAAM,GAAAA,KAIA5T,EAAAD,QAAAsT,IT85BG/R,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHyT,aAAa,KAAKC,IAAI,SAAS7S,EAAQjB,EAAOD,GUl7BjD,GAAAsT,GAAApS,EAAA,QAEAjB,GAAAD,SACAgU,KAAA9S,EAAA,UACA+S,SAAA/S,EAAA,cACAgT,SAAAhT,EAAA,cACAoS,IAAAA,EACAa,IAAAb,EAAAI,UAAA,KACAU,IAAAd,EAAAI,UAAA,QVq7BGW,QAAQ,GAAGC,SAAS,GAAGC,aAAa,GAAGC,aAAa,KAAKC,IAAI,SAASvT,EAAQjB,EAAOD,GW77BxF,GAAAwC,GAAAtB,EAAA,aAEAjB,GAAAD,QAAA,SAAAgJ,EAAAuK,GACA,GAAAzM,GAAAtE,EAAAkS,SAAA1L,KAAAxG,EAAAmS,SAAA3L,GACAA,EAAA4L,KAAA3S,MAAA+G,EAIA,OAHAuK,IAAAA,EAAAsB,WACA/N,EAAAtE,EAAAwK,SAAAuG,EAAAsB,UAAA/N,IAEAA,KXi8BGgN,aAAa,KAAKgB,IAAI,SAAS5T,EAAQjB,EAAOD,IACjD,SAAWM,GY18BX,GAAA0T,GAAA9S,EAAA,UACA+S,EAAA,mBAAA5T,QAAAA,OAAA4T,SAAA,mBAAA3T,GAAAA,EAAA2T,SAAA,IAEAhU,GAAAD,QAAA,SAAAgJ,EAAAuK,GACA,GAAA,MAAAU,EAAA,KAAA7S,OAAA,+BAEA,IAAA2T,GAAApU,EAAAqT,EAAAhL,EAAAuK,EAEA,IAAAA,GAAAA,EAAAyB,QAAA,CACA,GAAAD,EAAApU,EAAAsU,QAAA1B,EAAAyB,SACA,MAAAf,GAAAe,QAAArU,EAAAoU,GAAAG,QAEA,MAAA9T,OAAA,4BAAAmS,EAAAyB,SAEA,GAAAzB,GAAAA,EAAA4B,KAAA,CACA,GAAAJ,EAAApU,EAAAsU,QAAA1B,EAAA4B,MACA,OAAAlB,EAAAkB,KAAAxU,EAAAA,EAAAsU,QAAA1B,EAAA4B,OAEA,MAAA/T,OAAA,4BAAAmS,EAAA4B,MAGA,KAAA/T,OAAA,kDZi9BGG,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHiU,SAAS,KAAKc,IAAI,SAASlU,EAAQjB,EAAOD,Gaj+B7C,QAAAqV,GAAAC,EAAAC,GAIA,QAAAC,GAAAC,GACAC,EAAA3R,KAAA0R,EACA,IAAAE,GAAAF,EAAAF,EACA,IAAAI,EACA,IAAA,GAAAxU,GAAA,EAAAA,EAAAwU,EAAAnU,SAAAL,EACAqU,EAAAG,EAAAxU,GAAAsU,GARAF,EAAAA,GAAA,UACA,IAAAG,KAaA,OADAF,GAAAF,EAAA,MACAI,EAAAJ,KAAAA,EAAAI,EAtBA,GAAA1B,GAAA9S,EAAA,SAEAjB,GAAAD,QAAA,SAAAgJ,EAAAuK,GAEA,MADAvK,GAAAgL,EAAAhL,EAAAuK,GACA8B,EAAArM,EAAAuK,GAAAA,EAAAoC,ab6/BGrB,SAAS,KAAKsB,IAAI,SAAS1U,EAAQjB,EAAOD,Gct/B7C,QAAA6V,GAAAlH,GACA,GAAAmH,GAAAnH,EAAAmH,GACA,KAAAA,GAAAnH,EAAAoH,KAAA,MAAAC,GAAArH,EAAAoH,IAiBA,IAdApH,EAAAsH,UAAAC,EAAAC,KAAAL,KACAtT,EAAA4T,WAAAN,EAAA,MAAA,MAAAnH,EAAAsH,QAAAtH,EAAAsH,QAAAzU,OAAA,KACAsU,EAAA,IAAAA,GAEAA,EAAAnH,EAAAsH,QAAAH,GAGAtT,EAAA6T,QAAA7T,EAAA4T,WAAAN,EAAA,QACAA,GAAAnH,EAAA2H,iBAAA,QAAA,IAAAR,GAMAnH,EAAA4H,gBAAA,CACA,GAAAC,GAAAC,CACA,IAAAjU,EAAA6T,OAAA,CAEA,GAAAK,GAAAxV,EAAA,OAAAe,MAAA6T,EACAU,GAAAE,EAAAC,SACAF,EAAA,SACA,CACA,GAAAxV,GAAA2V,SAAAC,cAAA,IACA5V,GAAA6V,KAAAhB,EAKA,KAAA7U,EAAA8V,OACA9V,EAAA6V,KAAA7V,EAAA6V,MAEAN,EAAAvV,EAAA0V,SAAAK,cACAP,EAAApW,OAAA4W,SAAAN,SAGA,GAAAF,IAAAD,EAAA,CACA,GAAAU,GAAAvI,EAAA4H,gBAAAY,KAAA,SAAArQ,GACA,GAAAuF,GAAAmK,EAAAhV,OAAAsF,EAAAtF,MACA,OAAAsF,KAAA0P,GACAnK,EAAA,GAAA,MAAAmK,EAAAnK,EAAA,IAAAmK,EAAAY,YAAAtQ,KAAAuF,GAEA,KAAA6K,EACA,KAAA,2BAAApB,GAIA,MAAAA,GAGA,QAAAuB,GAAA1I,EAAA2I,GACA,GAAAxB,GAAAyB,EAAAD,GAAA,SAAA5W,GAAA,KAAAA,GAEA,KACAoV,EAAAuB,EAAAxB,YAAAlH,GACA,MAAA6I,GAEA,WADAD,GAAAC,GAIA,MAAA1B,GAEAtT,EAAA6T,OAGA7T,EAAA4T,WAAAN,EAAAE,GAEAD,EAAAD,EAAA1I,MAAA4I,EAAAxU,QAAA8V,GACAxB,EAAA2B,QAAA,OAAA,EAEA1B,EAAAD,EAAAwB,GAGAI,EAAA5B,EAAAwB,GATAK,EAAA7B,EAAAwB,OAHAC,GAAA,gBAAAzB,GAgBA,QAAA8B,GAAAC,GACA,GAAArG,GAAAqG,EAAAC,YACA,OAAAtG,IAAA,SAAAA,EACAqG,EAAAE,SACAF,EAAAG,aAGA,QAAAL,GAAA7B,EAAAwB,GAQA,QAAAW,KACA,GAAAC,GAAAL,EAAAK,QACAA,GAAAN,EAAAC,IAAAK,GAAA,KAAA,IAAAA,GAAA,MAAAA,EACAZ,EAAA,KAAAO,EAAAG,cAEAV,EAAAO,EAAA,MAZA,GAAAM,KAAAb,EACAO,EAAA,GAAAO,eA4BA,QA1BA5X,KAAA6X,gBACA,mBAAAR,KACA,oBAAA1B,KAAAL,KAAA+B,EAAA,GAAAQ,iBAWAF,IACA,UAAAN,GACAA,EAAAS,OAAAT,EAAAU,QAAAN,EAEAJ,EAAAW,mBAAA,WACAX,EAAAY,WAAA,GAAAR,MAKAJ,EAAAa,KAAA,MAAA5C,EAAAqC,GACAN,EAAAc,QAEAR,GAAAP,EAAAC,GACAA,EAAAG,aADA,OAKA,QAAAjC,GAAA6C,EAAAtB,GACA,GAAAuB,GAAA3X,EAAA,KACA,OAAAoW,OAGApW,GAAA,MAAA4X,SAAAF,EAAAtB,GAFAuB,EAAAE,aAAAH,EAAA,QAKA,QAAAlB,GAAA5B,EAAAwB,GACA,MAAAA,OAGApW,GAAA,WAAA4U,EAAA,SAAAyB,EAAAQ,EAAAiB,GACAzB,GAAA,MAAAQ,EAAAkB,WAGA3B,EAAAC,EAAA,MAFAD,EAAA,KAAA0B,KAJA9X,EAAA,gBAAA,MAAA4U,GAAAoD,UAhJA,GAAA1W,GAAAtB,EAAA,WAIAgV,EAAA,qBAGAF,EAAA,SAoJAqB,GAAAxB,YAAAA,EAEA5V,EAAAD,QAAAqX,IdogCGjN,UAAU,GAAGyO,GAAK,EAAEhB,QAAU,EAAEsB,eAAe,EAAErD,IAAM,IAAIsD,IAAI,SAASlY,EAAQjB,EAAOD,Ge7pC1F,QAAAqZ,GAAArQ,EAAAuK,GACA,GAAA/B,GAAA+B,GAAAA,EAAA/B,MAAA,MAGA,OAFAxI,GAAAsQ,EAAA9H,GAAAxI,EAAAuK,GACAA,GAAAA,EAAAtR,OAAAA,EAAA+G,EAAAuK,EAAAtR,OACA+G,EAGA,QAAA/G,GAAA+G,EAAAyD,GACA,GAAA8M,GAAAC,EAAA1S,EAAA3F,EAAAiG,EAAAqS,EAAAhW,EAAAuF,EAAAxH,MAMA,KAJAiL,EAAA,SAAAA,EAAA+E,EAAAkI,SAAA1Q,GAAAxG,EAAAmX,UAAAlN,GACA8M,EAAA/W,EAAA8F,KAAAmE,GACA+M,EAAAD,EAAA1S,IAAA,SAAAmL,GAAA,MAAAR,GAAAgI,QAAA/M,EAAAuF,MAEA7Q,EAAA,EAAAsY,EAAAF,EAAA/X,OAAAiC,EAAAtC,IAAAA,EAEA,IADA2F,EAAAkC,EAAA7H,GACAiG,EAAA,EAAAqS,EAAArS,IAAAA,EACAN,EAAAyS,EAAAnS,IAAAoS,EAAApS,GAAAN,EAAAyS,EAAAnS,IAGAoK,GAAAoI,WAAA5Q,EAAAyD,GAxBA,GAAAjK,GAAAtB,EAAA,WACAsQ,EAAAtQ,EAAA,UACAoY,EAAApY,EAAA,YAyBAmY,GAAAC,QAAAA,EACArZ,EAAAD,QAAAqZ,IfoqCGjP,UAAU,GAAGyP,YAAY,GAAGC,SAAS,KAAKC,IAAI,SAAS7Y,EAAQjB,EAAOD,GgBhsCzE,GAAAwC,GAAAtB,EAAA,WACAmW,EAAAnW,EAAA,UACAmY,EAAAnY,EAAA,SAEAjB,GAAAD,QAAAwC,EACA8F,KAAA+Q,EAAAC,SACA3N,OAAA,SAAAO,EAAAsF,GA4BA,MA3BAtF,GAAAsF,GAAA,SAAA7C,EAAA4E,EAAA+D,GAEA9U,EAAAuE,SAAA4H,KAAAA,GAAAmH,IAAAnH,IACA,IAAA/C,UAAApK,QAAAgB,EAAAyE,WAAAsM,KACA+D,EAAA/D,EACAA,EAAA5F,QAIA4F,EAAA/Q,EAAA2J,QAAAlK,MAAA,QAAAsR,GACAA,EAAA/B,KAAAA,CAGA,IAAAxI,GAAAqO,EAAA1I,EAAA2I,EAAA,SAAAC,EAAAvO,GACAuO,GAAAD,EAAAC,EAAA,KACA,KAEAvO,EAAAqQ,EAAArQ,EAAAuK,GACA,MAAA7S,GACA4W,EAAA5W,EAAA,MAEA4W,EAAA,KAAAtO,IACA2E,OAGA,OAAA3E,GAAAqQ,EAAArQ,EAAAuK,GAAA,QAEArH,ShBosCG9B,UAAU,GAAG4P,SAAS,GAAGC,SAAS,KAAKC,IAAI,SAAShZ,EAAQjB,EAAOD,GiBntCtE,QAAA4Z,GAAA5Q,EAAAyD,GACA,MAAAA,QACAzD,EAAAmR,GAAA1N,GADAzD,GAAAA,EAAAmR,IAAA,KAIA,QAAA3I,GAAArH,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAuG,GAAAnF,EAAAP,CAGA,IAAAuJ,EAAAgQ,KACA7T,EAAAvG,EAAAoK,EAAAgQ,IACA3X,EAAAuE,SAAAT,IAAA,MAAAA,EAGA,KAAAnF,EAAA,EAAAP,EAAAuJ,EAAA3I,QAAAgB,EAAAgL,QAAAlH,IAAA1F,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,EAGA,OAAAqB,GAAA4X,OAAA9T,GAAA,OACA9D,EAAA6X,SAAA/T,GAAA,SACA9D,EAAA8X,UAAAhU,GAAA,UACA9D,EAAAuE,SAAAT,GAAA,SAAA,KAGA,QAAAiU,GAAAvR,EAAAtD,GACA,MAAAsD,GAAAxH,QACAkE,EAAAA,GAAAlD,EAAA8F,KAAAU,EAAA,IACAtD,EAAAiG,OAAA,SAAAc,EAAA1M,GACA,MAAA0M,GAAA1M,GAAAyR,EAAAxI,EAAAjJ,GAAA0M,QAHA,OAOA,QAAA+N,GAAArQ,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAoB,GAAAiG,EAAAd,EAGAmG,GAAA,UAAA,UAAA,SAAA,OAEA,KAAAtL,EAAA,EAAAA,EAAAgJ,EAAA3I,SAAAL,EAAA,CAIA,IAFAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GAEAiG,EAAA,EAAAA,EAAAqF,EAAAjL,SAAA4F,EACA5E,EAAAgL,QAAAlH,KAAAmU,EAAAhO,EAAArF,IAAAd,KACAmG,EAAAiO,OAAAtT,EAAA,GACAA,GAAA,EAIA,IAAA,IAAAqF,EAAAjL,OAAA,MAAA,SAGA,MAAAiL,GAAA,GAGA,QAAAiN,GAAA1Q,EAAAtD,GAEA,MADAA,GAAAA,GAAAlD,EAAA8F,KAAAU,EAAA,IACAtD,EAAAiG,OAAA,SAAAc,EAAA1M,GACA,GAAAyR,GAAAgJ,EAAAxR,EAAAjJ,EAEA,OADA4a,GAAAnJ,KAAA/E,EAAA1M,GAAAyR,GACA/E,OAjFA,GAAAjK,GAAAtB,EAAA,WAEAiZ,EAAA,YAEAQ,GACAC,UAAApY,EAAAA,WACA2P,QAAA3P,EAAA4P,OACAA,OAAA5P,EAAA4P,OACA7B,KAAA/N,EAAA+N,KACAsK,OAAA,SAAA3S,GAAA,MAAA,KAAAA,EAAA,KAAAA,IAGAuS,GACAG,UAAA,SAAA1S,GAAA,MAAA,SAAAA,GAAA,UAAAA,GAAA1F,EAAA8X,UAAApS,IACAiK,QAAA,SAAAjK,GAAA,MAAAuS,GAAArI,OAAAlK,KAAAA,GAAAA,OAAAA,GACAkK,OAAA,SAAAlK,GAAA,OAAA4S,OAAA5S,KAAA1F,EAAA4X,OAAAlS,IACAqI,KAAA,SAAArI,GAAA,OAAA4S,MAAAC,KAAA9Y,MAAAiG,KAqEAsJ,GAAAoI,WAAAA,EACApI,EAAAtE,IAAAqN,EACA/I,EAAAgJ,MAAAA,EACAhJ,EAAAkI,SAAAA,EACAlI,EAAAgI,QAAAmB,EACA1a,EAAAD,QAAAwR,IjBwuCGpH,UAAU,KAAK4Q,IAAI,SAAS9Z,EAAQjB,EAAOD,GkBl0C9C,GAAAwC,GAAAtB,EAAA,UAEA+Z,GACA5D,KAAAnW,EAAA,iBACAmY,KAAAnY,EAAA,iBACAsQ,KAAAtQ,EAAA,iBACAwN,KAAAxN,EAAA,eACAgQ,KAAAhQ,EAAA,oBAAAgQ,KACAxK,QAAAxF,EAAA,uBACAmQ,UAAAnQ,EAAA,oBAAAmQ,UACA6J,MAAAha,EAAA,WACAia,SAAAja,EAAA,cACAka,UAAAla,EAAA,gBAGAsB,GAAA2J,OAAA8O,EAAAzY,GACAA,EAAA2J,OAAA8O,EAAA/Z,EAAA,eACAsB,EAAA2J,OAAA8O,EAAA/Z,EAAA,YACAsB,EAAA2J,OAAA8O,EAAA/Z,EAAA,qBAEAjB,EAAAD,QAAAib,IlBo0CGI,sBAAsB,EAAEC,cAAc,EAAEC,mBAAmB,EAAEC,aAAa,GAAGC,gBAAgB,GAAGC,gBAAgB,GAAGC,mBAAmB,GAAGC,gBAAgB,GAAGC,UAAU,GAAGC,UAAU,GAAGC,aAAa,GAAGC,eAAe,GAAGC,SAAS,KAAKC,IAAI,SAAShb,EAAQjB,EAAOD,GmBlxCrQ,QAAAmc,GAAAC,GACA,OACA,aAAAA,EAAAvO,MACA,aAAAuO,EAAAxO,QACA,aAAAwO,EAAA7O,SACA,aAAA6O,EAAAnR,IACA,aAAAmR,EAAAlR,IACA,aAAAkR,EAAA/N,OACA,aAAA+N,EAAArO,KACA,aAAAqO,EAAAjO,MACA,aAAAiO,EAAA5N,UACAiF,KAAA,MAGA,QAAA4I,GAAAD,GACA,GAAAE,IACA,aAAAF,EAAAvO,MACA,aAAAuO,EAAAxO,QACA,aAAAwO,EAAA7O,SACA,gBAEAvM,EAAAob,EAAArK,OACAwK,EAAA/Z,EAAA8F,KAAAtH,GACA8L,KAAA,SAAA7L,EAAA8L,GAAA,MAAA/L,GAAA+L,GAAA/L,EAAAC,KACAmM,MAAA,EAAA,GACAvG,IAAA,SAAAP,GAAA,MAAA,KAAAA,EAAA,MAAAtF,EAAAsF,GAAA,KACA,OAAAgW,GAAAzQ,OAAA0Q,GAAA9I,KAAA,MAhGA,GAAAjR,GAAAtB,EAAA,UACAsQ,EAAAtQ,EAAA,iBACAsJ,EAAAtJ,EAAA,WACAia,EAAAja,EAAA,cAEAsb,GACAjM,KAAA,4BACA6B,OAAA,gBACAD,QAAA,eAGAsK,GACArK,OAAA,OACAD,QAAA,OAGAlS,GAAAD,QAAA0V,MAAA,SAAA1M,EAAA2F,GACAA,EAAAnM,EAAA2J,QAAAuQ,UAAA,IAAAC,SAAA,EAAAC,SAAA,IAAAjO,EACA,IAAAjJ,GAAAiJ,EAAAjJ,QAAAlD,EAAA8F,KAAAU,EAAA,IACAyD,EAAA+E,EAAAtE,IAAAlE,EAEA,IAAA2F,EAAAmB,OAAAnB,EAAAkO,MAAA,CACA,GAAA5b,GAAA0N,EAAAmB,OAAA,EACA/C,EAAA4B,EAAAkO,MAAA5b,EAAA0N,EAAAkO,MAAA7T,EAAAxH,MACAwH,GAAAA,EAAAoE,MAAAnM,EAAA8L,GAIA,GAAA+P,GAAApX,EAAAmB,IAAA,SAAA9B,GACA,GAAAwO,GAAAiJ,EAAA/P,EAAA1H,KAAA,GACApE,EAAAwa,EAAA,KAAApW,EAAAwO,EAAA,MACAjS,EAAAkJ,EAAAU,IAAAlC,EAAA,SAAAd,GAAA,MAAAvH,GAAAuH,GAAA1G,QAEA,OADAF,GAAA8N,KAAAlE,IAAAkE,KAAAnE,IAAAlG,EAAAvD,OAAAmN,EAAAgO,UAAArb,GACAqN,EAAAiO,SAAA,EAAAxN,KAAAnE,IAAA3J,EAAAqN,EAAAiO,UAAAtb,IAIAyb,EAAArX,EAAAmB,IAAA,SAAA9B,EAAA5D,GACA,MAAAqB,GAAAwa,SAAAxa,EAAAya,IAAAlY,EAAA+X,EAAA3b,GAAA,UAAA2b,EAAA3b,MACAsS,KAAA9E,EAAA+N,WAGAQ,EAAA/B,EAAAzV,EAAAmB,IAAA,SAAA9B,EAAA5D,GACA,MAAA,KACA4D,GACAyX,EAAA/P,EAAA1H,KAAA,KACA,QAAA+X,EAAA3b,GAAA,IAAAsb,EAAAhQ,EAAA1H,KAAA,UACA,aAAA+X,EAAA3b,IACA,OACAsS,KAAA9E,EAAA+N,WAGA,OAAAK,GAAA,KAAA/T,EAAAnC,IAAAqW,GAAAzJ,KAAA,OAGAxT,EAAAD,QAAAmd,QAAA,SAAArc,GACAA,EAAAA,EAAAA,EAAAsc,YAAAtc,EAAA0J,EAAA2S,QAAArc,GAAAN,IACA,IAAAW,GAAAP,EAAAgM,IACA,KAAAzL,EAAA,EAAAP,EAAAE,EAAAU,OAAAZ,EAAAO,IAAAA,EACAyL,EAAA7I,KAAA,MAAAjD,EAAAK,GAAAkc,MAAA,OAEAzQ,EAAA7I,KADA,WAAAjD,EAAAK,GAAAqQ,MAAA1Q,EAAAK,GAAAoM,SAAA,GACA8O,EAAAvb,EAAAK,IAEAgb,EAAArb,EAAAK,KAEAyL,EAAA7I,KAAA,GAEA,OAAA6I,GAAA6G,KAAA,SnBw3CGmI,gBAAgB,GAAGE,UAAU,GAAGC,aAAa,GAAGE,SAAS,KAAKqB,IAAI,SAASpc,EAAQjB,EAAOD,GoB37C7F,GAAAwC,GAAAtB,EAAA,UACAsQ,EAAAtQ,EAAA,iBACA0Q,EAAA1Q,EAAA,cACAsJ,IAMAA,GAAAuH,OAAA,SAAA5H,EAAApK,EAAAwd,GACAxd,EAAAyC,EAAAiE,EAAA1G,GACAwd,EAAAA,KACA,IAAAjX,GAAAnF,EAAAP,EAAAI,IACA,KAAAG,EAAA,EAAAP,EAAAuJ,EAAA3I,OAAAZ,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAmF,IAAAtF,GACAA,EAAAsF,IAAA,GAEAtF,EAAAsF,GAAA,EACAiX,EAAAxZ,KAAAuC,GAIA,OADAiX,GAAAtL,OAAAjR,EACAuc,GAIA/S,EAAA7C,MAAA,SAAAwC,GACA,MAAAA,IAAAA,EAAA3I,QAAA,GAIAgJ,EAAA7C,MAAAkG,MAAA,SAAA1D,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAuG,GAAAnF,EAAAP,EAAAiN,EAAA,CACA,KAAA1M,EAAA,EAAAP,EAAAuJ,EAAA3I,OAAAZ,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,KAAAuH,GAAA,EAEA,OAAAA,IAIArD,EAAA7C,MAAAiG,QAAA,SAAAzD,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAuG,GAAAnF,EAAAP,EAAA+G,EAAA,CACA,KAAAxG,EAAA,EAAAP,EAAAuJ,EAAA3I,OAAAZ,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACA,MAAAmF,IAAAqB,GAAA,EAEA,OAAAA,IAKA6C,EAAA7C,MAAA4F,SAAA,SAAApD,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAuG,GAAAnF,EAAAP,EAAAI,KAAA2G,EAAA,CACA,KAAAxG,EAAA,EAAAP,EAAAuJ,EAAA3I,OAAAZ,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAmF,IAAAtF,KACAA,EAAAsF,GAAA,EACAqB,GAAA,EAEA,OAAAA,IAIA6C,EAAA6D,OAAA,SAAAlE,EAAApK,GAGA,MAFAA,KAAAoK,EAAAA,EAAAtD,IAAArE,EAAAiE,EAAA1G,KACAoK,EAAAA,EAAAqT,OAAAhb,EAAAgL,SAAAV,KAAAtK,EAAA4N,KACA5F,EAAAiT,SAAAtT,EAAA,KAIAK,EAAAW,SAAA,SAAAhB,EAAApK,GACAA,IAAAoK,EAAAA,EAAAtD,IAAArE,EAAAiE,EAAA1G,KACAoK,EAAAA,EAAAqT,OAAAhb,EAAAgL,SAAAV,KAAAtK,EAAA4N,IACA,IAAAsN,GAAAlT,EAAAiT,QACA,QAAAC,EAAAvT,EAAA,KAAAuT,EAAAvT,EAAA,IAAAuT,EAAAvT,EAAA,OAKAK,EAAAiT,SAAA,SAAAtT,EAAApK,EAAAqc,GACAzO,SAAAyO,IAAAA,EAAArc,EAAAA,EAAAyC,EAAA0G,UACAnJ,EAAAyC,EAAAiE,EAAA1G,EACA,IAAA4d,IAAAxT,EAAA3I,OAAA,GAAA4a,EAAA,EACAzK,EAAAvC,KAAAS,MAAA8N,GACArX,GAAAvG,EAAAoK,EAAAwH,EAAA,IACAjR,EAAAid,EAAAhM,CACA,OAAAjR,GAAA4F,EAAA5F,GAAAX,EAAAoK,EAAAwH,IAAArL,GAAAA,GAIAkE,EAAAsD,IAAA,SAAA3D,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,KAAA,GAAAuG,GAAAwH,EAAA,EAAA3M,EAAA,EAAAP,EAAAuJ,EAAA3I,OAAAZ,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,KAAAwH,GAAAxH,EAEA,OAAAwH,IAIAtD,EAAAuD,KAAA,SAAA5D,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAA6d,GAAAzc,EAAAP,EAAAoR,EAAA1L,EAAAyH,EAAA,CACA,KAAA5M,EAAA,EAAA6Q,EAAA,EAAApR,EAAAuJ,EAAA3I,OAAAZ,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,KACAsX,EAAAtX,EAAAyH,EACAA,GAAA6P,IAAA5L,EAGA,OAAAjE,IAIAvD,EAAAyD,SAAA,SAAA9D,EAAApK,GAEA,GADAA,EAAAyC,EAAAiE,EAAA1G,IACAyC,EAAAmD,QAAAwE,IAAA,IAAAA,EAAA3I,OAAA,MAAA,EACA,IAAAoc,GAAAzc,EAAA6Q,EAAA1L,EAAAyH,EAAA,EAAA8P,EAAA,CACA,KAAA1c,EAAA,EAAA6Q,EAAA,EAAA7Q,EAAAgJ,EAAA3I,SAAAL,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,KACAsX,EAAAtX,EAAAyH,EACAA,GAAA6P,IAAA5L,EACA6L,GAAAD,GAAAtX,EAAAyH,GAIA,OADA8P,IAAA7L,EAAA,GAKAxH,EAAA2D,MAAA,SAAAhE,EAAApK,GACA,MAAAqP,MAAAgE,KAAA5I,EAAAyD,SAAA9D,EAAApK,KAIAyK,EAAAgE,SAAA,SAAArE,EAAApK,GACA,GAAA+d,GAAAtT,EAAAuD,KAAA5D,EAAApK,GACAge,EAAAvT,EAAA6D,OAAAlE,EAAApK,GACAie,EAAAxT,EAAA2D,MAAAhE,EAAApK,EACA,OAAA,KAAAie,EAAA,GAAAF,EAAAC,GAAAC,GAIAxT,EAAAS,IAAA,SAAAd,EAAApK,GACA,MAAAyK,GAAAM,OAAAX,EAAApK,GAAA,IAIAyK,EAAAU,IAAA,SAAAf,EAAApK,GACA,MAAAyK,GAAAM,OAAAX,EAAApK,GAAA,IAIAyK,EAAAM,OAAA,SAAAX,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAkB,GAAA8L,EAAAzG,EAAAnF,EAAAP,EAAAuJ,EAAA3I,MACA,KAAAL,EAAA,EAAAP,EAAAO,IAAAA,EAEA,GADAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,GAAA,CAAArF,EAAA8L,EAAAzG,CAAA,OAEA,KAAA1F,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,KACArF,EAAAqF,IAAArF,EAAAqF,GACAA,EAAAyG,IAAAA,EAAAzG,GAGA,QAAArF,EAAA8L,IAIAvC,EAAAM,OAAAE,MAAA,SAAAb,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAkB,GAAA8L,EAAA7E,EAAAiL,EAAA7M,EAAAnF,EAAAP,EAAAuJ,EAAA3I,MACA,KAAAL,EAAA,EAAAP,EAAAO,IAAAA,EAEA,GADAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,GAAA,CAAArF,EAAA8L,EAAAzG,EAAA4B,EAAAiL,EAAAhS,CAAA,OAEA,KAAAP,EAAAO,IAAAA,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GACAqB,EAAAgL,QAAAlH,KACArF,EAAAqF,IAAArF,EAAAqF,EAAA4B,EAAA/G,GACAmF,EAAAyG,IAAAA,EAAAzG,EAAA6M,EAAAhS,GAGA,QAAA+G,EAAAiL,IAIA3I,EAAAyT,IAAA,SAAA9T,EAAAlJ,EAAA8L,GACA,GAAA5L,GAAAmF,EAAAwH,EAAA,CACA,IAAAf,EAWA,IAFA9L,EAAAuB,EAAAiE,EAAAxF,GACA8L,EAAAvK,EAAAiE,EAAAsG,GACA5L,EAAA,EAAAA,EAAAgJ,EAAA3I,SAAAL,EACAmF,EAAArF,EAAAkJ,EAAAhJ,IAAA4L,EAAA5C,EAAAhJ,IACA+c,OAAApD,MAAAxU,KAAAwH,GAAAxH,OAbA,CACA,GAAA6D,EAAA3I,SAAAP,EAAAO,OACA,KAAAJ,OAAA,4BAEA,KAAAD,EAAA,EAAAA,EAAAgJ,EAAA3I,SAAAL,EACAmF,EAAA6D,EAAAhJ,GAAAF,EAAAE,GACA+c,OAAApD,MAAAxU,KAAAwH,GAAAxH,GAUA,MAAAwH,IAKAtD,EAAA2T,KAAA,SAAAhU,EAAApK,GACAA,EAAAyC,EAAAiE,EAAA1G,IAAAyC,EAAA0G,QACA,IAOA/H,GAAAmF,EAAA8X,EAPAnd,EAAAkJ,EAAAtD,IAAA,SAAAP,EAAAnF,GACA,OAAAkL,IAAAlL,EAAAuR,IAAA3S,EAAAuG,MAEAwG,KAAAtK,EAAA0P,WAAA,QAEAtR,EAAAuJ,EAAA3I,OACAX,EAAAuH,MAAAxH,GACAyd,EAAA,GAAAjC,IAEA,KAAAjb,EAAA,EAAAP,EAAAO,IAAAA,EAAA,CAEA,GADAmF,EAAArF,EAAAE,GAAAuR,IACA,EAAA2L,GAAAjC,IAAA9V,EACA+X,EAAAld,EAAA,MACA,IAAAkd,EAAA,IAAAjC,IAAA9V,EAAA,CAEA,IADA8X,EAAA,GAAAjd,EAAA,EAAAkd,GAAA,EACAld,EAAAkd,IAAAA,EAAAxd,EAAAI,EAAAod,GAAAhS,KAAA+R,CACAC,GAAA,GAEAxd,EAAAI,EAAAE,GAAAkL,KAAAlL,EAAA,EACAib,EAAA9V,EAGA,GAAA+X,EAAA,GAEA,IADAD,EAAA,GAAAxd,EAAA,EAAAyd,GAAA,EACAzd,EAAAyd,IAAAA,EAAAxd,EAAAI,EAAAod,GAAAhS,KAAA+R,CAGA,OAAAvd,IAIA2J,EAAA8T,IAAA,SAAAnU,EAAAlJ,EAAA8L,GACA,GAAAwR,GAAAxR,CACAA,GAAAwR,EAAApU,EAAAtD,IAAArE,EAAAiE,EAAAsG,IAAA9L,EACAA,EAAAsd,EAAApU,EAAAtD,IAAArE,EAAAiE,EAAAxF,IAAAkJ,CAEA,IAAA8T,GAAAzT,EAAAyT,IAAAhd,EAAA8L,GACAyR,EAAAhU,EAAAuD,KAAA9M,GACAwd,EAAAjU,EAAAuD,KAAAhB,GACA2R,EAAAlU,EAAA2D,MAAAlN,GACA0d,EAAAnU,EAAA2D,MAAApB,GACAnM,EAAAuJ,EAAA3I,MAEA,QAAAyc,EAAArd,EAAA4d,EAAAC,KAAA7d,EAAA,GAAA8d,EAAAC,IAIAnU,EAAA8T,IAAAH,KAAA,SAAAhU,EAAAlJ,EAAA8L,GACA,GAEA5L,GAAAL,EAAAgG,EAFA8X,EAAA7R,EAAAvC,EAAA2T,KAAAhU,EAAA3H,EAAAiE,EAAAxF,IAAAuJ,EAAA2T,KAAAhU,GACA0U,EAAA9R,EAAAvC,EAAA2T,KAAAhU,EAAA3H,EAAAiE,EAAAsG,IAAAvC,EAAA2T,KAAAld,GACAL,EAAAuJ,EAAA3I,MAEA,KAAAL,EAAA,EAAAL,EAAA,EAAAF,EAAAO,IAAAA,EACA2F,EAAA8X,EAAAzd,GAAA0d,EAAA1d,GACAL,GAAAgG,EAAAA,CAGA,OAAA,GAAA,EAAAhG,GAAAF,GAAAA,EAAAA,EAAA,KAKA4J,EAAA8T,IAAAQ,KAAA,SAAA3U,EAAAlJ,EAAA8L,GACA,GAMA5L,GAAA4d,EAAAC,EAAAC,EANAC,EAAAnS,EAAA5C,EAAAtD,IAAArE,EAAAiE,EAAAxF,IAAAkJ,EACAgV,EAAApS,EAAA5C,EAAAtD,IAAArE,EAAAiE,EAAAsG,IAAA9L,EAEAme,EAAA5U,EAAAsU,KAAAO,IAAAH,GACAI,EAAA9U,EAAAsU,KAAAO,IAAAF,GACAve,EAAAwe,EAAA5d,MAGA,KAAAL,EAAA,EAAA4d,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAre,EAAAO,IAAAA,EACA4d,GAAAK,EAAAje,GAAAie,EAAAje,GACA6d,GAAAM,EAAAne,GAAAme,EAAAne,GACA8d,GAAAG,EAAAje,GAAAme,EAAAne,EAGA,OAAAiO,MAAAgE,KAAA6L,EAAA7P,KAAAgE,KAAA2L,EAAAC,KAKAxU,EAAAsU,KAAA,SAAA3U,EAAAlJ,EAAA8L,EAAAwS,GACA,GAKAzY,GAAA3F,EALApB,EAAAyC,EAAAyE,WAAA8F,IAAAvK,EAAAuE,SAAAgG,GACAmS,EAAA/U,EACAgV,EAAApf,EAAAoK,EAAAlJ,EACAP,EAAAX,EAAAwf,EAAAxS,EACAyS,EAAA,IAAA9e,GAAA,MAAAA,EACAE,EAAAuJ,EAAA3I,OAAAV,EAAA,CAKA,KAJAf,IACAkB,EAAAuB,EAAAiE,EAAAxF,GACA8L,EAAAvK,EAAAiE,EAAAsG,IAEA5L,EAAA,EAAAP,EAAAO,IAAAA,EACA2F,EAAA/G,EAAAkB,EAAAie,EAAA/d,IAAA4L,EAAAoS,EAAAhe,IAAA+d,EAAA/d,GAAAge,EAAAhe,GACAL,GAAA0e,EAAA1Y,EAAAA,EAAAsI,KAAAO,IAAAP,KAAAqQ,IAAA3Y,GAAApG,EAEA,OAAA8e,GAAApQ,KAAAgE,KAAAtS,GAAAsO,KAAAO,IAAA7O,EAAA,EAAAJ,IAIA8J,EAAAsU,KAAAO,IAAA,SAAAH,GACA,GAIA5Y,GAAAnF,EAAAiG,EAJAxG,EAAAse,EAAA1d,OACA2F,EAAAvG,EAAAA,EACAwe,EAAAhX,MAAAjB,GACAuY,EAAA9N,EAAAe,MAAA/R,GACA+e,EAAA,CAEA,KAAAxe,EAAA,EAAAP,EAAAO,IAAAA,EAEA,IADAie,EAAAje,EAAAP,EAAAO,GAAA,EACAiG,EAAAjG,EAAA,EAAAP,EAAAwG,IAAAA,EACAgY,EAAAje,EAAAP,EAAAwG,GAAAd,EAAA8I,KAAAqQ,IAAAP,EAAA/d,GAAA+d,EAAA9X,IACAgY,EAAAhY,EAAAxG,EAAAO,GAAAmF,EACAoZ,EAAAve,IAAAmF,EACAoZ,EAAAtY,IAAAd,CAIA,KAAAnF,EAAA,EAAAP,EAAAO,IAAAA,EACAwe,GAAAD,EAAAve,GACAue,EAAAve,IAAAP,CAIA,KAFA+e,GAAAxY,EAEAhG,EAAA,EAAAP,EAAAO,IAAAA,EACA,IAAAiG,EAAAjG,EAAAP,EAAAwG,IAAAA,EACAgY,EAAAje,EAAAP,EAAAwG,IAAAuY,EAAAD,EAAAve,GAAAue,EAAAtY,GACAgY,EAAAhY,EAAAxG,EAAAO,GAAAie,EAAAje,EAAAP,EAAAwG,EAIA,OAAAgY,IAIA5U,EAAAoV,QAAA,SAAA3N,EAAAlS,GACAA,EAAAyC,EAAAiE,EAAA1G,EACA,IAAAoB,GAAAib,EAAAtb,EAAA,EAAA6c,EAAA,EAAA/c,EAAAqR,EAAAzQ,MACA,KAAAL,EAAA,EAAAP,EAAAO,IAAAA,EACAL,GAAAf,EAAAA,EAAAkS,EAAA9Q,IAAA8Q,EAAA9Q,EAEA,IAAA,IAAAL,EAAA,MAAA,EACA,KAAAK,EAAA,EAAAP,EAAAO,IAAAA,EACAib,GAAArc,EAAAA,EAAAkS,EAAA9Q,IAAA8Q,EAAA9Q,IAAAL,EACAsb,IAAAuB,GAAAvB,EAAAhN,KAAAC,IAAA+M,GAEA,QAAAuB,EAAAvO,KAAAyQ,KAOArV,EAAAsV,OAAA,SAAA3V,EAAAlJ,EAAA8L,EAAAkF,GACA,GAOAmK,GAAAzb,EAAAQ,EAPA+G,EAAA+J,EAAA9H,EAAAtD,IAAArE,EAAAiE,EAAAxF,IAAAkJ,EACAgJ,EAAAlB,EAAA9H,EAAAtD,IAAArE,EAAAiE,EAAAsG,IAAA9L,EACA8e,EAAA9N,EAAA9H,EAAAtD,IAAArE,EAAAiE,EAAAwL,IAAAlF,EAEAiT,KACAC,KACArf,EAAAmf,EAAAve,OACAV,EAAA,EAAAof,EAAA,EAAAvC,EAAA,CAEA,KAAAxc,EAAA,EAAAP,EAAAO,IAAAA,EACA6e,EAAA9X,EAAA/G,IAAA,EACA8e,EAAA9M,EAAAhS,IAAA,CAGA,KAAAA,EAAA,EAAAP,EAAAO,IAAAA,EACA6e,EAAA9X,EAAA/G,KAAA4e,EAAA5e,GACA8e,EAAA9M,EAAAhS,KAAA4e,EAAA5e,GACAL,GAAAif,EAAA5e,EAIA,KADAR,EAAA,GAAAG,EAAAsO,KAAAyQ,KACA1e,EAAA,EAAAP,EAAAO,IAAAA,EACA,IAAA4e,EAAA5e,KACAib,EAAAtb,EAAAif,EAAA5e,IAAA6e,EAAA9X,EAAA/G,IAAA8e,EAAA9M,EAAAhS,KACA+e,GAAAH,EAAA5e,GAAAR,EAAAyO,KAAAC,IAAA+M,GACAuB,GAAAoC,EAAA5e,GAAAR,EAAAyO,KAAAC,IAAA0Q,EAAA5e,GAAAL,GAGA,QAAAof,EAAA,EAAAA,EAAAvC,IAIAnT,EAAAsV,OAAAK,KAAA,SAAAhW,EAAAlJ,EAAA8L,EAAAkF,GACA,MAAAzH,GAAAsV,OAAA3V,EAAAlJ,EAAA8L,EAAAkF,GAAA,IAKAzH,EAAAsV,OAAAhB,KAAA,SAAA3U,EAAAlJ,EAAA8L,EAAAkF,GACA,MAAAzH,GAAAsV,OAAA3V,EAAAlJ,EAAA8L,EAAAkF,GAAA,IAIAzH,EAAA4V,QAAA,SAAAjW,EAAApK,GACA,GAQA6d,GAAAyC,EAAAlf,EAAAmF,EAAA4B,EARA6F,EAAA,EACAF,EAAA,EACAD,EAAA,EACAL,EAAA,EACAtC,EAAA,KACAC,EAAA,KACA2S,EAAA,EACAhR,KACA7L,IAGA,KAAAG,EAAA,EAAAA,EAAAgJ,EAAA3I,SAAAL,EACAmF,EAAAvG,EAAAA,EAAAoK,EAAAhJ,IAAAgJ,EAAAhJ,GAGAH,EAAAsF,GAAAA,IAAAtF,GAAAA,EAAAsF,GAAA,GAAAiH,GAAA,EAAA,GAEA,MAAAjH,IACAsH,EACApL,EAAAgL,QAAAlH,KAEA4B,EAAA,gBAAA5B,GAAAA,EAAA9E,OAAA8E,GACA,OAAA2E,GAAAA,EAAA/C,KAAA+C,EAAA/C,IACA,OAAAgD,GAAAhD,EAAAgD,KAAAA,EAAAhD,GACA0V,EAAA1V,EAAA6F,EACAA,GAAA6P,IAAA/P,EACAgQ,GAAAD,GAAA1V,EAAA6F,GACAlB,EAAA9I,KAAAmE,GASA,OANA2V,IAAAhQ,EAAA,EACAwS,EAAAjR,KAAAgE,KAAAyK,GAGAhR,EAAAC,KAAAtK,EAAA4N,MAGAoB,KAAAA,EAAArH,EAAApK,GACAgS,OAAA/Q,EACA2G,MAAAwC,EAAA3I,OACAqM,MAAAA,EACAD,QAAAA,EACAL,SAAAA,EACAtC,IAAAA,EACAC,IAAAA,EACA6C,KAAAA,EACAI,MAAAkS,EACAhS,OAAA/H,EAAAkE,EAAAiT,SAAA5Q,EAAA,IACAxB,GAAAb,EAAAiT,SAAA5Q,EAAA,KACAtB,GAAAf,EAAAiT,SAAA5Q,EAAA,KACA2B,SAAA,IAAA6R,EAAA,GAAAtS,EAAAzH,GAAA+Z,IAKA7V,EAAA2S,QAAA,SAAAnU,EAAAtD,GACAA,EAAAA,GAAAlD,EAAA8F,KAAAU,EAAA,GACA,IAAAlI,GAAA4E,EAAAmB,IAAA,SAAA9G,GACA,GAAAqc,GAAA5R,EAAA4V,QAAApX,EAAAxG,EAAAiE,EAAA1G,GACA,OAAAqc,GAAAiB,MAAAtd,EAAAqc,GAEA,OAAAtb,GAAAsc,aAAA,EAAAtc,GAGAb,EAAAD,QAAAwK,IpB67CGgR,aAAa,GAAGI,gBAAgB,GAAGK,SAAS,KAAKqE,IAAI,SAASpf,EAAQjB,EAAOD,IAChF,SAAWM,GqBt5DX,QAAA6a,GAAAoF,GACA,GAAAC,GAAAC,EAAAF,EAAA,IACAC,GAAA,mBAAAA,EAAA,GAEA,KAEA,MAAA,IAAAnT,UAAA,IAAAmT,GAAAE,KAAAC,GACA,MAAAjgB,GAEA,KADAA,GAAA+f,OAAAD,EACA9f,GAaA,QAAA+f,GAAAF,EAAAK,GACAA,EAAAA,GAAA,KACA,IAAA5V,GAAA,EACAwV,EAAA,IACAK,EAAAC,CAkBA,OAfAP,GAAAQ,QAAAF,EAAA,SAAAG,EAAAC,EAAAC,GAaA,MAZAV,IAAAD,EACAnT,MAAApC,EAAAkW,GACAH,QAAAI,EAAAC,GACApW,EAAAkW,EAAAF,EAAAxf,OAEAyf,IACAT,GAAA,cACAa,EAAAJ,EAAAL,GACA,wBAIAI,IAEAR,EAAA,IAGA,QAAAa,GAAAd,EAAAK,GAKA,QAAAU,GAAA/C,GAQA,MAPAA,GAAAA,GAAA,GACAgD,GACAA,GAAA,EACAf,EAAA,UAAAA,EAAA,IAAAjC,GAEAiC,GAAAjC,EAEAiC,EAGA,QAAAjQ,KACA,MAAA,WAAAiQ,EAAA,wBAAAA,EAAA,KAAAA,EAAA,IAhBA,GAAAgB,GAAAjB,EAAAkB,MAAA,KACAC,EAAAF,EAAAG,QAAAC,OACAL,GAAA,EAiBAf,EAAAhe,EAAA6a,MAAAqE,GAAA7a,IAAArE,EAAAoK,KAAA6G,KAAA,KACA+M,GAAAI,EAAA,IAAAJ,EAAA,GAEA,KAAA,GAAArf,GAAA,EAAAA,EAAAqgB,EAAAhgB,SAAAL,EAAA,CACA,GAAA0gB,GAAA5gB,EAAA8L,EAAAhN,EAAAyhB,EAAArgB,GAAAuK,EAAA,IASA,SAPAmW,EAAA9hB,EAAA0X,QAAA,MAAA,IACA1X,EAAAA,EAAAqN,MAAA,EAAAyU,GACAnW,EAAA8V,EAAArgB,GAAAiM,MAAAyU,EAAA,GAAAJ,MAAA,KACA5a,IAAA,SAAA/F,GAAA,MAAAA,GAAA8gB,UAEA7hB,EAAAA,EAAA6hB,QAGA,IAAA,SACAN,EAAA,UACA,MACA,KAAA,QACAA,EAAA,iBACA,MACA,KAAA,QACAA,EAAA,iBACA,MACA,KAAA,eACAA,EAAA,uBACA,MACA,KAAA,eACAA,EAAA,uBACA,MACA,KAAA,OACAA,EAAA,UACA,MACA,KAAA,OACArgB,EAAAuB,EAAA4P,OAAA1G,EAAA,IACA4V,EAAA,YAAArgB,EAAA,IACA,MACA,KAAA,QACAA,EAAAuB,EAAA4P,OAAA1G,EAAA,IACA4V,EAAA,WAAArgB,EAAA,IACA,MACA,KAAA,MACAA,EAAAuB,EAAA4P,OAAA1G,EAAA,IACAqB,EAAA9L,EAAAuB,EAAA4P,OAAA1G,EAAA,IACA4V,EAAA,WAAArgB,EAAA,IAAA8L,EAAA,IACA,MACA,KAAA,QACA9L,EAAAuB,EAAA4P,OAAA1G,EAAA,IACA4V,EAAA,UAAArgB,GACAyK,EAAAlK,OAAA,EAAA,IAAAgB,EAAA4P,OAAA1G,EAAA,IAAA,IACA,IACA,MACA,KAAA,WACAzK,EAAAuB,EAAA4P,OAAA1G,EAAA,IACAqB,EAAArB,EAAA,GACAqB,EAAA,SAAAA,GAAA,WAAAA,GAAA,WAAAA,EAAA,QAAAA,EACAyT,EAAA,iBAAAc,IAAA,IAAArgB,EAAA,KAAA8L,EAAA,IACA,MACA,KAAA,MACA9L,EAAAuB,EAAA4P,OAAA1G,EAAA,IACAqB,EAAArB,EAAA,GACAqB,EAAA,SAAAA,GAAA,WAAAA,GAAA,WAAAA,EAAA,QAAAA,EACAyT,EAAA,YAAAc,IAAA,IAAArgB,EAAA,KAAA8L,EAAA,IACA,MACA,KAAA,SACA9L,EAAA6gB,EAAApW,EAAA,GAAAiI,EAAAJ,QACAgO,GAAA,EACAf,EAAA,gBAAAvf,EAAA,KAAAuf,EAAA,GACA,MACA,KAAA,OACAvf,EAAA6gB,EAAApW,EAAA,GAAAiI,EAAAoO,KAAAxO,QACAgO,GAAA,EACAf,EAAA,gBAAAvf,EAAA,KAAAsP,IAAA,GACA,MACA,SACA,KAAAnP,OAAA,iCAAArB,IAIA,MAAAygB,GAkBA,QAAAY,GAAAJ,GACA,MAAA,KAAAgB,EAAAhB,GAGA,QAAAc,GAAAG,EAAApO,GACA,KAAA,MAAAoO,EAAA,IAAA,MAAAA,EAAAA,EAAAzgB,OAAA,IACA,MAAAygB,EAAA,IAAA,MAAAA,EAAAA,EAAAzgB,OAAA,IAGA,KAAAJ,OAAA,kCAAA6gB,EAEA,IAJAA,EAAAA,EAAA7U,MAAA,EAAA,KAIAuT,EAAAuB,WAAAD,GAAA,CACA,GAAAliB,GAAA8T,EAAAoO,GACA9gB,EAAAwf,EAAArH,QAAA9X,MACAmf,GAAArH,QAAAvV,KAAAhE,GACA4gB,EAAAuB,WAAAD,GAAA9gB,EAEA,MAAAwf,GAAAuB,WAAAD,GA9LA,GAAAzf,GAAAtB,EAAA,UACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KAEAgN,GACArH,WACA4I,cACAlF,SAAAxa,EAAAwa,SACAC,IAAAza,EAAAya,IAgBAhd,GAAAD,QAAAmb,EAIAA,EAAAgH,iBAAA,WACAxB,EAAArH,WACAqH,EAAAuB,cAiIA,IAAApB,GAAA,mBAIAkB,GACAI,IAAA,IACAC,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAtB,EAAA,8BrBu7DG5f,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4b,SAAS,KAAKyG,IAAI,SAASxhB,EAAQjB,EAAOD,GsB9kE7C,QAAAqa,GAAAvT,GAAA,MAAA,gBAAAA,GAtBA,GAAA6b,KACA,QAAA,IACA,OAAA,IACA,OAAA,IACA,QAAA,IACA,OAAA,IACA,OAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,KAAA,IACA,KAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,KAAA,IACA,IAAA,IACA,IAAA,IAKAC,IAEApR,KAAA,SACA1C,QAAA,EACAyE,OAAA,wBACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAA,IAAAjU,IAEAkJ,KAAA,SAAAlJ,GACA,OAAAA,EAAA,OAIA0K,KAAA,SACA1C,QAAA,EACAyE,OAAA,kBACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAA,IAAAjU,IAEAkJ,KAAA,SAAAlJ,GACA,UAAAA,EAAA,QAIA0K,KAAA,OACA1C,QAAA,EACAyE,OAAA,kBACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAA,KAAAjU,IAEAkJ,KAAA,SAAAlJ,GACA,UAAAA,EAAA,SAIA0K,KAAA,MACA1C,QAAA,EACAF,MAAA,EAAA,GACA2E,OAAA,YACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAA,MAAAjU,IAEAkJ,KAAA,SAAAlJ,GACA,UAAAA,EAAA,UAIA0K,KAAA,QACA1C,QAAA,EACAF,MAAA,EAAA,EAAA,GACA2E,OAAA,QACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,OAAA/b,EAAA,IAAAA,EAAA,GAAA,KAEAkJ,KAAA,SAAAlJ,GAEA,MADAuT,GAAAvT,KAAAA,EAAA,GAAAiU,MAAAjU,IACA,GAAAA,EAAAgc,iBAAAhc,EAAAic,iBAIAvR,KAAA,OACA1C,QAAA,EACAyE,OAAA,KACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,IAAA/b,EAAA,EAAA,KAEAkJ,KAAA,SAAAlJ,GACA,OAAAuT,EAAAvT,GAAA,GAAAiU,MAAAjU,GAAAA,GAAAgc,oBAKAE,GACAxR,KAAA,eACAvG,IAAA,EACAC,IAAA,GACA4D,QAAA,EACAyE,OAAA,KACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,IAAA,KAAA,EAAA,EAAA,EAAA/b,KAEAkJ,KAAA,SAAAlJ,GACA,OAAAuT,EAAAvT,GAAA,GAAAiU,MAAAjU,GAAAA,GAAAmc,kBAIAC,GACA1R,KAAA,YACAvG,IAAA,EACAC,IAAA,GACA4D,QAAA,EACAyE,OAAA,KACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,IAAA,KAAA,EAAA,EAAA/b,KAEAkJ,KAAA,SAAAlJ,GACA,OAAAuT,EAAAvT,GAAA,GAAAiU,MAAAjU,GAAAA,GAAAqc,gBAIAC,GACA5R,KAAA,YACAvG,IAAA,EACAC,IAAA,EACA0D,MAAA,GACA2E,OAAA,KACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,IAAA,KAAA,EAAA,EAAA/b,KAEAkJ,KAAA,SAAAlJ,GACA,OAAAuT,EAAAvT,GAAA,GAAAiU,MAAAjU,GAAAA,GAAAuc,cAIAC,GACA9R,KAAA,aACAvG,IAAA,EACAC,IAAA,GACA0D,MAAA,GACA2E,OAAA,MACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,IAAA,KAAA,EAAA/b,KAEAkJ,KAAA,SAAAlJ,GACA,OAAAuT,EAAAvT,GAAA,GAAAiU,MAAAjU,GAAAA,GAAAyc,eAIAC,GACAhS,KAAA,cACAvG,IAAA,EACAC,IAAA,GACA0D,MAAA,GACA2E,OAAA,KACAhD,KAAA,SAAAzJ,GACA,MAAA,IAAAiU,MAAAA,KAAA8H,IAAA,KAAA/b,EAAA,GAAA,KAEAkJ,KAAA,SAAAlJ,GACA,OAAAuT,EAAAvT,GAAA,GAAAiU,MAAAjU,GAAAA,GAAAic,gBAIAtS,GACAgT,OAAAb,EAAA,GACAc,OAAAd,EAAA,GACAe,KAAAf,EAAA,GACAgB,IAAAhB,EAAA,GACAiB,MAAAjB,EAAA,GACAkB,KAAAlB,EAAA,GACAI,aAAAA,EACAE,UAAAA;AACAE,UAAAA,EACAE,WAAAA,EACAE,YAAAA,EACAO,UAAAnB,EAGAnS,GAAAK,KAAA,SAAAvB,EAAAqB,EAAA3B,GACA,GAAA9N,GAAAsC,EAAAiL,EAAAE,EAAA+T,EAAA,EAEA,KAAAxhB,EAAA,EAAAsC,EAAAkf,EAAAnhB,OAAAiC,EAAAtC,IAAAA,EAEA,GADAyN,EAAA+T,EAAAxhB,GACAoO,EAAAX,EAAA,GAAA,CAEA,GADAF,EAAAa,EAAAX,EAAA,GACAF,EAAAO,EACA,MAAA2T,GAAAD,EAAAxhB,EAAA,GAAA,GAEA,IAAAuN,GAAAkC,EACA,MAAAgS,GAAAhU,EAAA,IAIA,MAAAgU,GAAAD,EAAAA,EAAAnhB,OAAA,GAAA,KAGAvB,EAAAD,QAAAyQ,OtBumEMuT,IAAI,SAAS9iB,EAAQjB,EAAOD,IAClC,SAAW4D,GuBxqEX,QAAAqgB,GAAA/b,GACA,MAAAA,GAAA6Y,QAAAmD,EAAA,SAiJA,QAAAC,GAAAvjB,EAAAgM,GACA,GAAAzL,GAAAL,EAAA,EACA,KAAAK,EAAA,EAAAP,EAAAO,IAAAA,EAAAL,GAAA8L,CACA,OAAA9L,GAsBA,QAAAsjB,GAAAtjB,EAAA2C,EAAA4gB,GACA,GAAAC,GAAA,EAAAC,EAAAzjB,EAAA2gB,MAAA+C,EAQA,OANA1jB,GADAujB,GACAE,EAAAA,EAAAE,WACAjH,OAAA,SAAAkH,GAAA,MAAAJ,IAAAI,EAAAljB,OAAAiC,GAAA6gB,IACAG,UAEAF,EAAA/G,OAAA,SAAAkH,GAAA,MAAAJ,IAAAI,EAAAljB,OAAAiC,GAAA6gB,IAEAxjB,EAAAU,OAAAV,EAAA2S,KAAA,IAAAmO,OAAA2C,EAAA,GAAAnX,MAAA,EAAA3J,GA3TA,GAAAkhB,GAAAzjB,EAAA,UAAAyjB,OACAlU,EAAAvP,EAAA,gBACAF,EAAAf,EAAAD,UAIAgB,GAAAqV,OAAA,mBAAAzS,IACA,mBAAAA,GAAAghB,MAIA,IAAAC,GAAA,UAEA7jB,GAAA8jB,UAAA,SAAA/f,EAAAhF,GAAA,MAAAA,GAAA8kB,GAAA9f,EAAAhF,GAEAiB,EAAA+D,KAAA,SAAAhF,GAAA,MAAA,OAAAA,EAAA,KAAAA,EAAA8kB,IAEA7jB,EAAAkI,SAAA,SAAAhB,GAAA,MAAAA,IAEAlH,EAAAA,QAAAA,EAAA8jB,UAAA,OAAA,WAAA,OAAA,IAEA9jB,EAAAA,SAAAA,EAAA8jB,UAAA,QAAA,WAAA,OAAA,IAEA9jB,EAAA2Y,UAAA,SAAA5E,GACA,MAAAH,MAAA3S,MAAA2S,KAAAmQ,UAAAhQ,KAGA/T,EAAAgkB,MAAA,SAAA/jB,EAAA8L,GACA,MAAA6H,MAAAmQ,UAAA9jB,KAAA2T,KAAAmQ,UAAAhY,IAGA/L,EAAAmL,OAAA,SAAA4I,GACA,IAAA,GAAA7M,GAAAnD,EAAA5D,EAAA,EAAAsC,EAAAmI,UAAApK,OAAAiC,EAAAtC,IAAAA,EAAA,CACA+G,EAAA0D,UAAAzK,EACA,KAAA4D,IAAAmD,GAAA6M,EAAAhQ,GAAAmD,EAAAnD,GAEA,MAAAgQ,IAGA/T,EAAAQ,OAAA,SAAA0G,GACA,MAAA,OAAAA,GAAA,MAAAA,EAAA1G,OAAA0G,EAAA1G,OAAA,MAGAR,EAAAsH,KAAA,SAAAJ,GACA,GAAAC,GAAAG,IACA,KAAAH,IAAAD,GAAAI,EAAAvE,KAAAoE,EACA,OAAAG,IAGAtH,EAAA6L,KAAA,SAAA3E,GACA,GAAAC,GAAA0E,IACA,KAAA1E,IAAAD,GAAA2E,EAAA9I,KAAAmE,EAAAC,GACA,OAAA0E,IAGA7L,EAAA2J,MAAA,SAAA2R,EAAAvc,GACA,OAAAA,EAAAiB,EAAAyF,EAAA1G,IACAuc,EAAA3Q,OAAA,SAAAoJ,EAAA7M,GAAA,MAAA6M,GAAAhV,EAAAmI,IAAA,EAAA6M,OACAuH,EAAA3Q,OAAA,SAAAoJ,EAAA7M,GAAA,MAAA6M,GAAA7M,GAAA,EAAA6M,QAGA/T,EAAAqH,OAAA,SAAA8B,GAEA,GAAAvJ,GAAAuJ,EAAA3I,MACA,KAAAZ,EAAA,MAAA,EACA,KAAA,GAAAE,GAAAmkB,OAAA9a,EAAA,IAAAhJ,EAAA,EAAAP,EAAAO,IAAAA,EACAL,GAAA,IAAAmkB,OAAA9a,EAAAhJ,GAEA,OAAAL,GAKA,IAAAokB,GAAAC,OAAA/e,UAAA8e,QAEAlkB,GAAA0T,SAAA,SAAAK,GACA,MAAAA,KAAAoQ,OAAApQ,IAGA/T,EAAAiG,WAAA,SAAA8N,GACA,MAAA,sBAAAmQ,EAAA3jB,KAAAwT,IAGA/T,EAAA+F,SAAA,SAAAgO,GACA,MAAA,gBAAAjN,QAAA,oBAAAod,EAAA3jB,KAAAwT,IAGA/T,EAAA2E,QAAAyC,MAAAzC,SAAA,SAAAoP,GACA,MAAA,mBAAAmQ,EAAA3jB,KAAAwT,IAGA/T,EAAAqZ,SAAA,SAAAtF,GACA,MAAA,gBAAAA,IAAA,oBAAAmQ,EAAA3jB,KAAAwT,IAGA/T,EAAAsZ,UAAA,SAAAvF,GACA,MAAAA,MAAA,GAAAA,KAAA,GAAA,oBAAAmQ,EAAA3jB,KAAAwT,IAGA/T,EAAAoZ,OAAA,SAAArF,GACA,MAAA,kBAAAmQ,EAAA3jB,KAAAwT,IAGA/T,EAAAwM,QAAA,SAAAuH,GACA,MAAA,OAAAA,IAAAmJ,OAAApD,MAAA/F,IAGA/T,EAAA2T,SAAAgQ,GAAAA,EAAAhQ,UAAA3T,EAAAA,SAIAA,EAAAoR,OAAA,SAAAtR,GACA,MAAA,OAAAA,GAAA,KAAAA,EAAA,MAAAA,GAGAE,EAAAA,WAAA,SAAAF,GACA,MAAA,OAAAA,GAAA,KAAAA,EAAA,KAAA,UAAAA,GAAA,IAAAA,GAGAE,EAAAuP,KAAA,SAAAzP,GACA,MAAA,OAAAA,GAAA,KAAAA,EAAA,KAAAia,KAAA9Y,MAAAnB,IAGAE,EAAA6E,MAAA,SAAAqC,GACA,MAAA,OAAAA,EAAAlH,EAAA2E,QAAAuC,GAAAA,GAAAA,OAGAlH,EAAA4L,IAAA,SAAA1E,GACA,MAAAlH,GAAA2E,QAAAuC,GAAA,IAAAA,EAAArB,IAAA7F,EAAA4L,KAAA,IACA5L,EAAA0T,SAAAxM,GAAA0M,KAAAmQ,UAAA7c,GACAlH,EAAA+F,SAAAmB,GAAA,IAAA+b,EAAA/b,GAAA,IAAAA,EAGA,IAAAgc,GAAA,aAQAljB,GAAAqc,MAAA,SAAAtd,GACA,MAAAklB,QAAAllB,GAAA0hB,MAAA,OACA5a,IAAA,SAAAC,GAAA,MAAAA,GAAA2a,MAAA,OACA9V,OAAA,SAAA1K,EAAA8L,GAGA,MAFA9L,GAAAO,SAAAP,EAAAA,EAAAO,OAAA,IAAA,IAAAuL,EAAA4U,SACA1gB,EAAA8C,KAAAqhB,MAAAnkB,EAAA8L,GACA9L,QAIAD,EAAAgM,SAAA,SAAAjN,GACA,GAAAe,EACA,OAAA,OAAAf,GAAAiB,EAAAiG,WAAAlH,GAAAA,EACAiB,EAAA8jB,UAAA/kB,GAAAe,EAAAE,EAAAqc,MAAAtd,IAAAyB,OAAA,EACA,SAAA0G,GAAA,MAAApH,GAAA6K,OAAA,SAAAzD,EAAAnI,GAAA,MAAAmI,GAAAnI,IAAAmI,IACA,SAAAA,GAAA,MAAAA,GAAAnI,MAIAiB,EAAAyF,EAAAzF,EAAAgM,SAEAhM,EAAAiM,QAAA,SAAAlN,GACA,GAAAe,EACA,OAAAE,GAAA+F,SAAAhH,KAAAe,EAAAE,EAAAqc,MAAAtd,IAAAyB,OAAA,EACA,SAAA0G,EAAA5B,GACA,IAAA,GAAAnF,GAAA,EAAAA,EAAAL,EAAAU,OAAA,IAAAL,EAAA+G,EAAAA,EAAApH,EAAAK,GACA+G,GAAApH,EAAAK,IAAAmF,GAEA,SAAA4B,EAAA5B,GAAA4B,EAAAnI,GAAAuG,IAGAtF,EAAAoQ,MAAA,SAAArM,EAAAsC,GACA,MAAA,UAAAtH,GACAA,EAAAiB,EAAAyF,EAAA1G,IAAAiB,EAAAkI,QACA,IAAAtI,GAAAmE,GAAA/D,EAAA+D,KAAAhF,GAAA,IAAAiB,EAAA+D,KAAAhF,GAAA,GACA,OAAAiB,GAAA8jB,UAAAlkB,EAAA,SAAAkG,GAAA,MAAAO,GAAAtH,EAAA+G,QAIA9F,EAAAqkB,OAAArkB,EAAAoQ,MAAA,QAAApQ,EAAAwM,SACAxM,EAAAskB,QAAAtkB,EAAAoQ,MAAA,SAAApQ,EAAAQ,QACAR,EAAAukB,MAAAvkB,EAAAoQ,MAAA,OAAAX,EAAAqT,KAAA9T,MACAhP,EAAAwkB,OAAAxkB,EAAAoQ,MAAA,QAAAX,EAAA+S,YAAAxT,MACAhP,EAAAykB,MAAAzkB,EAAAoQ,MAAA,OAAAX,EAAA6S,WAAAtT,MACAhP,EAAA0kB,KAAA1kB,EAAAoQ,MAAA,MAAAX,EAAA2S,UAAApT,MACAhP,EAAA2kB,MAAA3kB,EAAAoQ,MAAA,OAAAX,EAAAyS,UAAAlT,MACAhP,EAAA4kB,QAAA5kB,EAAAoQ,MAAA,SAAAX,EAAAuS,aAAAhT,MAEAhP,EAAA6kB,IAAA,SAAA9lB,EAAAoK,GACApK,EAAAiB,EAAAyF,EAAA1G,EACA,IAAA8G,GAAA7F,EAAA2E,QAAAwE,GAAAnJ,EAAA2J,MAAAR,GAAAA,CACA,OAAA,UAAArD,GAAA,QAAAD,EAAA9G,EAAA+G,MAKA9F,EAAAkR,WAAA,SAAApF,GACA,GAAAgZ,KASA,OARAnY,UAAAb,IAAAA,MACAA,EAAA9L,EAAA6E,MAAAiH,GAAAjG,IAAA,SAAA9G,GACA,GAAAe,GAAA,CAIA,OAHA,MAAAf,EAAA,IAAAe,EAAA,GAAAf,EAAAA,EAAAqN,MAAA,IACA,MAAArN,EAAA,KAAAe,EAAA,EAAAf,EAAAA,EAAAqN,MAAA,IACA0Y,EAAA/hB,KAAAjD,GACAE,EAAAgM,SAAAjN,KAEA,SAAAkB,EAAA8L,GACA,GAAA5L,GAAAP,EAAAb,EAAAmI,EAAAiL,CACA,KAAAhS,EAAA,EAAAP,EAAAkM,EAAAtL,OAAAZ,EAAAO,IAAAA,EAAA,CAEA,GADApB,EAAA+M,EAAA3L,GAAA+G,EAAAnI,EAAAkB,GAAAkS,EAAApT,EAAAgN,GACAoG,EAAAjL,EAAA,MAAA,GAAA4d,EAAA3kB,EACA,IAAA+G,EAAAiL,EAAA,MAAA2S,GAAA3kB,GAEA,MAAA,KAIAH,EAAAoP,IAAA,SAAAnP,EAAA8L,GACA,MAAAA,GAAA9L,EACA,GACAA,EAAA8L,EACA,EACA9L,GAAA8L,EACA,EACA,OAAA9L,GAAA,OAAA8L,EACA,EACA,OAAA9L,EACA,GACA,OAAA8L,EACA,EAEAgZ,EAAAA,GAGA/kB,EAAAglB,OAAA,SAAA/kB,EAAA8L,GAAA,MAAA9L,GAAA8L,GAEA/L,EAAAilB,WAAA,SAAApgB,EAAAqgB,EAAAC,GACA,GAAAC,GAAAvgB,EAAA8F,OAAA,SAAAU,EAAA/F,EAAAnF,GACA,MAAAkL,GAAA8Z,EAAA7f,IAAAnF,EAAAkL,MAUA,OAPAxG,GAAAiH,KAAA,SAAA7L,EAAA8L,GACA,GAAAsZ,GAAAH,EAAAjlB,GACAqlB,EAAAJ,EAAAnZ,EACA,OAAAuZ,GAAAD,EAAA,GAAAA,EAAAC,EAAA,EACAF,EAAAD,EAAAllB,IAAAmlB,EAAAD,EAAApZ,MAGAlH,GAQA7E,EAAAoV,WAAA6O,OAAA7e,UAAAgQ,WACA,SAAAyE,EAAA0L,GACA,MAAA1L,GAAAzE,WAAAmQ,IAEA,SAAA1L,EAAA0L,GACA,MAAA,KAAA1L,EAAAzD,YAAAmP,EAAA,IAGAvlB,EAAAic,IAAA,SAAAnc,EAAAU,EAAAglB,EAAAC,GACAA,EAAAA,GAAA,GACA,IAAA3f,GAAAtF,EAAAV,EAAAU,MACA,IAAA,GAAAsF,EAAA,MAAAhG,EACA,QAAA0lB,GACA,IAAA,OACA,MAAArC,GAAArd,EAAA2f,GAAA3lB,CACA,KAAA,SACA,IAAA,SACA,MAAAqjB,GAAA/U,KAAAS,MAAA/I,EAAA,GAAA2f,GACA3lB,EAAAqjB,EAAA/U,KAAAM,KAAA5I,EAAA,GAAA2f,EACA,SACA,MAAA3lB,GAAAqjB,EAAArd,EAAA2f,KAUAzlB,EAAAgc,SAAA,SAAAlc,EAAAU,EAAAglB,EAAAE,EAAAC,GACA,GAAAljB,GAAA3C,EAAAU,MACA,IAAAA,GAAAiC,EAAA,MAAA3C,EACA6lB,GAAAhZ,SAAAgZ,EAAA1B,OAAA0B,GAAA,GACA,IAAArlB,GAAA8N,KAAAlE,IAAA,EAAA1J,EAAAmlB,EAAAnlB,OAEA,QAAAglB,GACA,IAAA,OACA,MAAAG,IAAAD,EAAAtC,EAAAtjB,EAAAQ,EAAA,GAAAR,EAAAsM,MAAA3J,EAAAnC,GACA,KAAA,SACA,IAAA,SACA,GAAAslB,GAAAxX,KAAAM,KAAApO,EAAA,GAAAulB,EAAAzX,KAAAS,MAAAvO,EAAA,EACA,QAAAolB,EAAAtC,EAAAtjB,EAAA8lB,GAAA9lB,EAAAsM,MAAA,EAAAwZ,IACAD,GAAAD,EAAAtC,EAAAtjB,EAAA+lB,EAAA,GAAA/lB,EAAAsM,MAAA3J,EAAAojB,GACA,SACA,OAAAH,EAAAtC,EAAAtjB,EAAAQ,GAAAR,EAAAsM,MAAA,EAAA9L,IAAAqlB,GAgBA,IAAAnC,GAAA,qKvBkzEGjjB,KAAKf,KAAKU,EAAQ,eAElB8a,eAAe,GAAG8K,SAAW,EAAEC,OAAS,IAAIC,IAAI,SAAS9lB,EAAQjB,EAAOD,GwBlnF3EC,EAAAD,QAAAkB,EAAA,gBxBqnFG+lB,aAAa,KAAKC,IAAI,SAAShmB,EAAQjB,EAAOD,IyBpnFjD,WACA,GAAAmnB,GAAAC,EAAAvX,EAAAwX,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzc,EAAA0c,EAAAC,EAAAC,EAAAC,EAAAC,CAEAlY,GAAAT,KAAAS,MAAA5E,EAAAmE,KAAAnE,IAOAmc,EAAA,SAAAlf,EAAAiL,GACA,MAAAA,GAAAjL,EACA,GAEAA,EAAAiL,EACA,EAEA,GAaAuU,EAAA,SAAAzmB,EAAAiH,EAAA+H,EAAAC,EAAAE,GACA,GAAAD,EAOA,IANA,MAAAF,IACAA,EAAA,GAEA,MAAAG,IACAA,EAAAgX,GAEA,EAAAnX,EACA,KAAA,IAAA7O,OAAA,0BAKA,KAHA,MAAA8O,IACAA,EAAAjP,EAAAO,QAEA0O,EAAAD,GACAE,EAAAN,GAAAI,EAAAC,GAAA,GACAE,EAAAlI,EAAAjH,EAAAkP,IAAA,EACAD,EAAAC,EAEAF,EAAAE,EAAA,CAGA,UAAAuK,OAAA0K,MAAAnkB,GAAAgP,EAAAA,EAAAA,GAAApE,OAAA3D,IAAAA,GAQAqf,EAAA,SAAA1hB,EAAAmiB,EAAA5X,GAKA,MAJA,OAAAA,IACAA,EAAAgX,GAEAvhB,EAAA9B,KAAAikB,GACAF,EAAAjiB,EAAA,EAAAA,EAAArE,OAAA,EAAA4O,IAQAkX,EAAA,SAAAzhB,EAAAuK,GACA,GAAA6X,GAAAC,CAYA,OAXA,OAAA9X,IACAA,EAAAgX,GAEAa,EAAApiB,EAAAsiB,MACAtiB,EAAArE,QACA0mB,EAAAriB,EAAA,GACAA,EAAA,GAAAoiB,EACAF,EAAAliB,EAAA,EAAAuK,IAEA8X,EAAAD,EAEAC,GAeAT,EAAA,SAAA5hB,EAAAmiB,EAAA5X,GACA,GAAA8X,EAOA,OANA,OAAA9X,IACAA,EAAAgX,GAEAc,EAAAriB,EAAA,GACAA,EAAA,GAAAmiB,EACAD,EAAAliB,EAAA,EAAAuK,GACA8X,GAQAV,EAAA,SAAA3hB,EAAAmiB,EAAA5X,GACA,GAAAgY,EAQA,OAPA,OAAAhY,IACAA,EAAAgX,GAEAvhB,EAAArE,QAAA4O,EAAAvK,EAAA,GAAAmiB,GAAA,IACAI,GAAAviB,EAAA,GAAAmiB,GAAAA,EAAAI,EAAA,GAAAviB,EAAA,GAAAuiB,EAAA,GACAL,EAAAliB,EAAA,EAAAuK,IAEA4X,GAQAX,EAAA,SAAAxhB,EAAAuK,GACA,GAAAjP,GAAAknB,EAAAC,EAAAC,EAAAC,EAAAC,CAUA,KATA,MAAArY,IACAA,EAAAgX,GAEAmB,EAAA,WACAE,IACA,KAAA,GAAAC,GAAA,EAAAN,EAAAvY,EAAAhK,EAAArE,OAAA,GAAA4mB,GAAA,EAAAA,EAAAM,EAAAA,EAAAN,EAAAA,GAAA,EAAAM,IAAAA,IAAAD,EAAA1kB,KAAA2kB,EACA,OAAAD,IACArD,MAAA5kB,MAAAikB,UACA+D,KACAH,EAAA,EAAAC,EAAAC,EAAA/mB,OAAA8mB,EAAAD,EAAAA,IACAlnB,EAAAonB,EAAAF,GACAG,EAAAzkB,KAAAgkB,EAAAliB,EAAA1E,EAAAiP,GAEA,OAAAoY,IASAX,EAAA,SAAAhiB,EAAAmiB,EAAA5X,GACA,GAAAoW,EAKA,OAJA,OAAApW,IACAA,EAAAgX,GAEAZ,EAAA3gB,EAAA4R,QAAAuQ,GACA,KAAAxB,GAGAsB,EAAAjiB,EAAA,EAAA2gB,EAAApW,GACA2X,EAAAliB,EAAA2gB,EAAApW,IAJA,QAYAuX,EAAA,SAAA9hB,EAAAjF,EAAAwP,GACA,GAAAuY,GAAAlf,EAAA4e,EAAAC,EAAAF,CAKA,IAJA,MAAAhY,IACAA,EAAAgX,GAEA3d,EAAA5D,EAAAuH,MAAA,EAAAxM,IACA6I,EAAAjI,OACA,MAAAiI,EAIA,KAFA4d,EAAA5d,EAAA2G,GACAgY,EAAAviB,EAAAuH,MAAAxM,GACAynB,EAAA,EAAAC,EAAAF,EAAA5mB,OAAA8mB,EAAAD,EAAAA,IACAM,EAAAP,EAAAC,GACAb,EAAA/d,EAAAkf,EAAAvY,EAEA,OAAA3G,GAAAqD,KAAAsD,GAAAqU,WAQAmD,EAAA,SAAA/hB,EAAAjF,EAAAwP,GACA,GAAAuY,GAAAxnB,EAAAynB,EAAAnf,EAAA4e,EAAAK,EAAAJ,EAAAF,EAAAG,EAAAC,CAIA,IAHA,MAAApY,IACAA,EAAAgX,GAEA,GAAAxmB,GAAAiF,EAAArE,OAAA,CAEA,GADAiI,EAAA5D,EAAAuH,MAAA,EAAAxM,GAAAkM,KAAAsD,IACA3G,EAAAjI,OACA,MAAAiI,EAIA,KAFAmf,EAAAnf,EAAAA,EAAAjI,OAAA,GACA4mB,EAAAviB,EAAAuH,MAAAxM,GACAynB,EAAA,EAAAC,EAAAF,EAAA5mB,OAAA8mB,EAAAD,EAAAA,IACAM,EAAAP,EAAAC,GACAjY,EAAAuY,EAAAC,GAAA,IACAlB,EAAAje,EAAAkf,EAAA,EAAA,KAAAvY,GACA3G,EAAA0e,MACAS,EAAAnf,EAAAA,EAAAjI,OAAA,GAGA,OAAAiI,GAIA,IAFA4d,EAAAxhB,EAAAuK,GACAoY,KACArnB,EAAAunB,EAAA,EAAAH,EAAAtd,EAAArK,EAAAiF,EAAArE,QAAA+mB,GAAA,EAAAA,EAAAG,EAAAA,EAAAH,EAAApnB,EAAAonB,GAAA,IAAAG,IAAAA,EACAF,EAAAzkB,KAAAujB,EAAAzhB,EAAAuK,GAEA,OAAAoY,IAGAV,EAAA,SAAAjiB,EAAAgjB,EAAArC,EAAApW,GACA,GAAA0Y,GAAAC,EAAAC,CAKA,KAJA,MAAA5Y,IACAA,EAAAgX,GAEA0B,EAAAjjB,EAAA2gB,GACAA,EAAAqC,IACAG,EAAAxC,EAAA,GAAA,EACAuC,EAAAljB,EAAAmjB,GACA5Y,EAAA0Y,EAAAC,GAAA,IACAljB,EAAA2gB,GAAAuC,EACAvC,EAAAwC,CAKA,OAAAnjB,GAAA2gB,GAAAsC,GAGAf,EAAA,SAAAliB,EAAA2gB,EAAApW,GACA,GAAA6Y,GAAAC,EAAAJ,EAAAK,EAAAN,CAQA,KAPA,MAAAzY,IACAA,EAAAgX,GAEA8B,EAAArjB,EAAArE,OACAqnB,EAAArC,EACAsC,EAAAjjB,EAAA2gB,GACAyC,EAAA,EAAAzC,EAAA,EACA0C,EAAAD,GACAE,EAAAF,EAAA,EACAC,EAAAC,KAAA/Y,EAAAvK,EAAAojB,GAAApjB,EAAAsjB,IAAA,KACAF,EAAAE,GAEAtjB,EAAA2gB,GAAA3gB,EAAAojB,GACAzC,EAAAyC,EACAA,EAAA,EAAAzC,EAAA,CAGA,OADA3gB,GAAA2gB,GAAAsC,EACAhB,EAAAjiB,EAAAgjB,EAAArC,EAAApW,IAGA+W,EAAA,WAiBA,QAAAA,GAAA/W,GACA5P,KAAA4P,IAAA,MAAAA,EAAAA,EAAAgX,EACA5mB,KAAA4oB,SAoEA,MAtFAjC,GAAApjB,KAAAwjB,EAEAJ,EAAAgB,IAAAb,EAEAH,EAAApG,QAAA0G,EAEAN,EAAAkC,QAAA7B,EAEAL,EAAAE,QAAAA,EAEAF,EAAAU,WAAAA,EAEAV,EAAAQ,SAAAA,EAEAR,EAAAS,UAAAA,EAOAT,EAAA/gB,UAAArC,KAAA,SAAAmE,GACA,MAAAqf,GAAA/mB,KAAA4oB,MAAAlhB,EAAA1H,KAAA4P,MAGA+W,EAAA/gB,UAAA+hB,IAAA,WACA,MAAAb,GAAA9mB,KAAA4oB,MAAA5oB,KAAA4P,MAGA+W,EAAA/gB,UAAAkjB,KAAA,WACA,MAAA9oB,MAAA4oB,MAAA,IAGAjC,EAAA/gB,UAAAmjB,SAAA,SAAArhB,GACA,MAAA,KAAA1H,KAAA4oB,MAAA3R,QAAAvP,IAGAif,EAAA/gB,UAAA2a,QAAA,SAAA7Y,GACA,MAAAuf,GAAAjnB,KAAA4oB,MAAAlhB,EAAA1H,KAAA4P,MAGA+W,EAAA/gB,UAAAijB,QAAA,SAAAnhB,GACA,MAAAsf,GAAAhnB,KAAA4oB,MAAAlhB,EAAA1H,KAAA4P,MAGA+W,EAAA/gB,UAAAihB,QAAA,WACA,MAAAA,GAAA7mB,KAAA4oB,MAAA5oB,KAAA4P,MAGA+W,EAAA/gB,UAAAyhB,WAAA,SAAA3f,GACA,MAAA2f,GAAArnB,KAAA4oB,MAAAlhB,EAAA1H,KAAA4P,MAGA+W,EAAA/gB,UAAA4B,MAAA,WACA,MAAAxH,MAAA4oB,UAGAjC,EAAA/gB,UAAAojB,MAAA,WACA,MAAA,KAAAhpB,KAAA4oB,MAAA5nB,QAGA2lB,EAAA/gB,UAAAqjB,KAAA,WACA,MAAAjpB,MAAA4oB,MAAA5nB,QAGA2lB,EAAA/gB,UAAAsjB,MAAA,WACA,GAAAC,EAGA,OAFAA,GAAA,GAAAxC,GACAwC,EAAAP,MAAA5oB,KAAA4oB,MAAAhc,MAAA,GACAuc,GAGAxC,EAAA/gB,UAAAwjB,QAAA,WACA,MAAAppB,MAAA4oB,MAAAhc,MAAA,IAGA+Z,EAAA/gB,UAAA4D,OAAAmd,EAAA/gB,UAAArC,KAEAojB,EAAA/gB,UAAAmW,IAAA4K,EAAA/gB,UAAAkjB,KAEAnC,EAAA/gB,UAAAyjB,MAAA1C,EAAA/gB,UAAAkjB,KAEAnC,EAAA/gB,UAAA0jB,IAAA3C,EAAA/gB,UAAAmjB,SAEApC,EAAA/gB,UAAA2jB,KAAA5C,EAAA/gB,UAAAsjB,MAEAvC,KAIA,SAAA7R,EAAA0U,GACA,MAAA,kBAAA9pB,IAAAA,EAAAC,IACAD,KAAA8pB,GACA,gBAAAhqB,GACAC,EAAAD,QAAAgqB,IAEA1U,EAAA6R,KAAA6C,KAEAxpB,KAAA,WACA,MAAA2mB,OAGA5lB,KAAAf,WzBwnFMypB,IAAI,SAAS/oB,EAAQjB,EAAOD,G0B9+FlC,GAAAkqB,GAAA,SAAAnd,GACAvM,KAAAwH,QACA+E,GAAAvM,KAAA2pB,MAAApd,IAGA3G,EAAA8jB,EAAA9jB,SAEAA,GAAA4B,MAAA,WAKA,MAJAxH,MAAA4pB,IAAAlM,OAAAmM,UACA7pB,KAAA8pB,IAAApM,OAAAmM,UACA7pB,KAAA+pB,IAAArM,OAAAmM,UACA7pB,KAAAgqB,IAAAtM,OAAAmM,UACA7pB,MAGA4F,EAAAsD,IAAA,SAAA0gB,EAAAE,EAAAC,EAAAC,GAKA,MAJAhqB,MAAA4pB,GAAAA,EACA5pB,KAAA8pB,GAAAA,EACA9pB,KAAA+pB,GAAAA,EACA/pB,KAAAgqB,GAAAA,EACAhqB,MAGA4F,EAAAgD,IAAA,SAAAlB,EAAAiL,GAKA,MAJAjL,GAAA1H,KAAA4pB,KAAA5pB,KAAA4pB,GAAAliB,GACAiL,EAAA3S,KAAA8pB,KAAA9pB,KAAA8pB,GAAAnX,GACAjL,EAAA1H,KAAA+pB,KAAA/pB,KAAA+pB,GAAAriB,GACAiL,EAAA3S,KAAAgqB,KAAAhqB,KAAAgqB,GAAArX,GACA3S,MAGA4F,EAAAqkB,OAAA,SAAA3jB,GAKA,MAJAtG,MAAA4pB,IAAAtjB,EACAtG,KAAA8pB,IAAAxjB,EACAtG,KAAA+pB,IAAAzjB,EACAtG,KAAAgqB,IAAA1jB,EACAtG,MAGA4F,EAAAwJ,MAAA,WAKA,MAJApP,MAAA4pB,GAAAhb,KAAAS,MAAArP,KAAA4pB,IACA5pB,KAAA8pB,GAAAlb,KAAAS,MAAArP,KAAA8pB,IACA9pB,KAAA+pB,GAAAnb,KAAAM,KAAAlP,KAAA+pB,IACA/pB,KAAAgqB,GAAApb,KAAAM,KAAAlP,KAAAgqB,IACAhqB,MAGA4F,EAAAskB,UAAA,SAAAC,EAAAC,GAKA,MAJApqB,MAAA4pB,IAAAO,EACAnqB,KAAA+pB,IAAAI,EACAnqB,KAAA8pB,IAAAM,EACApqB,KAAAgqB,IAAAI,EACApqB,MAGA4F,EAAAykB,OAAA,SAAAC,EAAA5iB,EAAAiL,GACA,GAAA4X,GAAA3b,KAAA2b,IAAAD,GACAE,EAAA5b,KAAA4b,IAAAF,GACAG,EAAA/iB,EAAAA,EAAA6iB,EAAA5X,EAAA6X,EACAE,EAAA/X,EAAAjL,EAAA8iB,EAAA7X,EAAA4X,EACAX,EAAA5pB,KAAA4pB,GAAAG,EAAA/pB,KAAA+pB,GACAD,EAAA9pB,KAAA8pB,GAAAE,EAAAhqB,KAAAgqB,EAEA,OAAAhqB,MAAAwH,QACAoB,IAAA2hB,EAAAX,EAAAY,EAAAV,EAAAW,EAAAD,EAAAZ,EAAAW,EAAAT,EAAAY,GACA9hB,IAAA2hB,EAAAX,EAAAY,EAAAR,EAAAS,EAAAD,EAAAZ,EAAAW,EAAAP,EAAAU,GACA9hB,IAAA2hB,EAAAR,EAAAS,EAAAV,EAAAW,EAAAD,EAAAT,EAAAQ,EAAAT,EAAAY,GACA9hB,IAAA2hB,EAAAR,EAAAS,EAAAR,EAAAS,EAAAD,EAAAT,EAAAQ,EAAAP,EAAAU,IAGA9kB,EAAA+jB,MAAA,SAAApd,GAKA,MAJAA,GAAAqd,GAAA5pB,KAAA4pB,KAAA5pB,KAAA4pB,GAAArd,EAAAqd,IACArd,EAAAud,GAAA9pB,KAAA8pB,KAAA9pB,KAAA8pB,GAAAvd,EAAAud,IACAvd,EAAAwd,GAAA/pB,KAAA+pB,KAAA/pB,KAAA+pB,GAAAxd,EAAAwd,IACAxd,EAAAyd,GAAAhqB,KAAAgqB,KAAAhqB,KAAAgqB,GAAAzd,EAAAyd,IACAhqB,MAGA4F,EAAA+kB,SAAA,SAAApe,GACA,MAAAA,IACAvM,KAAA4pB,IAAArd,EAAAqd,IACA5pB,KAAA+pB,IAAAxd,EAAAwd,IACA/pB,KAAA8pB,IAAAvd,EAAAud,IACA9pB,KAAAgqB,IAAAzd,EAAAyd,IAIApkB,EAAAglB,WAAA,SAAAre,GACA,MAAAA,MACAvM,KAAA+pB,GAAAxd,EAAAqd,IACA5pB,KAAA4pB,GAAArd,EAAAwd,IACA/pB,KAAAgqB,GAAAzd,EAAAud,IACA9pB,KAAA8pB,GAAAvd,EAAAyd,KAIApkB,EAAAmjB,SAAA,SAAArhB,EAAAiL,GACA,QACAjL,EAAA1H,KAAA4pB,IACAliB,EAAA1H,KAAA+pB,IACApX,EAAA3S,KAAA8pB,IACAnX,EAAA3S,KAAAgqB,KAIApkB,EAAAilB,MAAA,WACA,MAAA7qB,MAAA+pB,GAAA/pB,KAAA4pB,IAGAhkB,EAAAklB,OAAA,WACA,MAAA9qB,MAAAgqB,GAAAhqB,KAAA8pB,IAGArqB,EAAAD,QAAAkqB,O1Bg/FMqB,IAAI,SAASrqB,EAAQjB,EAAOD,IAClC,SAAWM,G2BlmGX,GAAA2a,GAAA/Z,EAAA,WACAsqB,EAAAtqB,EAAA,0BACAuqB,EAAAvqB,EAAA,gCACAS,EAAAT,EAAA,UAGAwqB,GAFAxqB,EAAA,iBAEA,SAAAmqB,EAAAC,EAAAK,GACAhqB,EAAAJ,KAAA,KAAA8pB,EAAAC,EAAAK,GACAnrB,KAAAorB,IAAA,OACAprB,KAAAqrB,MAAA,SACArrB,KAAAsrB,YAAAN,OAAAA,EAAAC,IAAAA,GACAjrB,KAAAurB,QAAA,OAGA3lB,EAAAslB,EAAAtlB,UAAA,GAAAzE,EAEAyE,GAAA4lB,SAAA,SAAAxa,GAEA,MADAA,KAAAhR,KAAAqrB,MAAAra,GACA7P,EAAAyE,UAAA4lB,SAAA5G,MAAA5kB,KAAAoL,YAGAxF,EAAAolB,OAAA,WACA,MAAAhrB,MAAAurB,SAGA3lB,EAAA6lB,YAAA,SAAA3U,GAGA,QAAA4U,KACA,IAAArrB,EAAAsrB,iBACAC,EAAAC,SACA/U,EAAA8U,EAAAL,UAEA/nB,WAAAkoB,EAAA,IAPA,GAAArrB,GAAAL,KAAA8rB,UAAAF,EAAA5rB,IAYAK,GAAAsrB,gBAAA,EAAAD,IAAA5U,EAAA9W,KAAAurB,UAGA3lB,EAAAqlB,IAAA,WACA,MAAA,QAAAjrB,KAAAqrB,MACArrB,KAAA8rB,UAAAb,MACA,MAGArlB,EAAAmmB,WAAA,WACA,GAAA7H,GAAAlkB,KAAAgsB,OACA7a,EAAAnR,KAAAisB,QACAxP,EAAAzc,KAAAksB,QAeA,OAbAlsB,MAAAmsB,YACAjI,EAAAlkB,KAAAmsB,UAAA,IAAA1P,EAAAA,EAAA2P,KAAA3P,EAAA4P,MAAA,GACAlb,EAAAnR,KAAAmsB,UAAA,IAAA1P,EAAAA,EAAAV,IAAAU,EAAA6P,OAAA,IAGAtsB,KAAA8rB,UAAA9rB,KAAA8rB,WAAA,GAAA9rB,MAAAusB,IAAAC,SAEA,QAAAxsB,KAAAqrB,MACArrB,KAAAysB,QAAAvI,EAAA/S,EAAAsL,GAEAzc,KAAA0sB,WAAAxI,EAAA/S,EAAAsL,GAGAzc,MAGA4F,EAAA8mB,WAAA,SAAAxI,EAAA/S,EAAAsL,GACA,GAAAkQ,GAAA,mBAAA9sB,QAAAA,OAAAmrB,OAAA,mBAAAlrB,GAAAA,EAAAkrB,OAAA,KACA4B,EAAA1I,EAAAzH,EAAA2P,KAAA3P,EAAA4P,MACAQ,EAAA1b,EAAAsL,EAAAV,IAAAU,EAAA6P,OACAtB,EAAAhrB,KAAAurB,QAAA9Q,EAAA5E,OAAA,GAAA8W,GAAAC,EAAAC,GAAAzW,SAAAC,cAAA,UACAyW,EAAA9B,EAAA+B,WAAA,KAEAtS,GAAA5E,SACAmV,EAAAgC,aAAA,QAAAJ,GACA5B,EAAAgC,aAAA,SAAAH,IAIAC,EAAAG,aAAA,EAAA,EAAA,EAAA,EAAAxQ,EAAA2P,KAAA3P,EAAAV,KAGA/b,KAAA8rB,UAAA3L,QAAA2M,GACA9sB,KAAA8rB,UAAAoB,OAAAhJ,EAAA/S,EAAAsL,IAGA7W,EAAA6mB,QAAA,SAAAvI,EAAA/S,EAAAsL,GAEAzc,KAAA8rB,UAAAC,WAAA/rB,KAAAorB,IAAAlH,EAAA/S,EAAAsL,IAGAhd,EAAAD,QAAA0rB,I3BqmGGnqB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHstB,yBAAyB,GAAGC,+BAA+B,GAAGC,gBAAgB,IAAIC,SAAS,GAAG3qB,QAAU,KAAK4qB,IAAI,SAAS7sB,EAAQjB,EAAOD,G4B9rG5I,QAAAguB,KACAxtB,KAAAytB,SACAztB,KAAA0tB,eACA1tB,KAAA2tB,OAAA,KAEA3tB,KAAA4tB,MAAA,KACA5tB,KAAA6tB,SAAA,KAEAtsB,EAAAqE,UAAAgG,KAAA7K,KAAAf,MAwBA,QAAA8tB,GAAAvpB,GACA,GAAAoC,GAAA3G,KAAA8tB,IACA,OAAArT,GAAAtV,QAAAZ,IACAA,EAAA4H,QAAA,SAAA/L,GAAA0tB,EAAA1tB,GAAAuG,EAAA+mB,YAAAttB,KACA0tB,GAFA9tB,KAAA0tB,YAAAnpB,GAxCA,GAAAhD,GAAAb,EAAA,qBACAc,EAAAd,EAAA,oBACAmB,EAAAnB,EAAA,yBACAW,EAAAX,EAAA,yBACA+Z,EAAA/Z,EAAA,WAaAiF,EAAA6nB,EAAA5nB,UAAA,GAAArE,EAEAoE,GAAAooB,KAAA,SAAAA,GACA,MAAA3iB,WAAApK,QACAhB,KAAAytB,MAAAM,EACA/tB,MAFAA,KAAAytB,OAKA9nB,EAAAsP,KAAA,WACA,MAAAjV,MAAA4tB,QAAA5tB,KAAA4tB,MAAA,GAAApsB,GAAAxB,QAGA2F,EAAA6C,KAAA,WACA,GAAAA,GAAAjH,EAAAqE,UAAA4C,KAAAoc,MAAA5kB,KAAAoL,UAKA,OAJAA,WAAApK,OAAA,GACAhB,KAAAiV,OAAAjR,YAAAwE,EAAAwlB,WAAA,IAGAxlB,GAUA7C,EAAAsoB,UAAA,SAAA1pB,EAAA0pB,GACA,MAAA,KAAA7iB,UAAApK,OAAA8sB,EAAA/sB,KAAAf,KAAAuE,GACAvE,KAAA0tB,YAAAnpB,GAAA0pB,GAGAtoB,EAAAmoB,WAAA,WAAA,MAAA9tB,MAAA0tB,aAEA/nB,EAAAhE,MAAA,SAAA6pB,GACA,IAAApgB,UAAApK,OAAA,MAAAhB,MAAA2tB,MACA3tB,MAAA6tB,UAAA7tB,KAAAiV,OAAA9Q,eAAAnE,KAAA6tB,SAAAK,cACAluB,KAAA6tB,SAAA,GAAAhsB,GAAA7B,KAAAA,KAAAytB,MAAAU,MAAAnuB,KAAA2tB,WACA3tB,KAAAiV,OAAAjR,YAAAhE,KAAA6tB,SAAAO,UACA,IAAAxS,GAAA5b,KAAA6tB,SAAAG,UAEA,OADApS,GAAAA,EAAA5a,OAAA,GAAAgD,YAAAwnB,GACAxrB,MAGA2F,EAAA3B,YAAA,SAAAlD,GAAAd,KAAAiV,OAAAjR,YAAAlD,IACA6E,EAAAxB,eAAA,SAAArD,GAAAd,KAAAiV,OAAA9Q,eAAArD,IAEA6E,EAAA0oB,KAAA,SAAAC,GACAA,IAAAA,EAAAjtB,EAAA4F,UACAjH,KAAAuuB,UAAAD,EAAAtuB,KAAAiV,SAGAxV,EAAAD,QAAAguB,I5BssGGgB,oBAAoB,GAAGC,mBAAmB,GAAGC,wBAAwB,GAAGC,wBAAwB,GAAGhsB,QAAU,KAAKisB,IAAI,SAASluB,EAAQjB,EAAOD,IACjJ,SAAWM,G6BluGX,QAAA+uB,GAAA7O,GACA,GACA8O,GAAA9uB,KAAA+uB,OAAAvmB,KAAAwX,GACAgP,EAAAF,EAAAd,WAAA,GACAiB,EAAAjvB,KAAAkvB,UACAZ,EAAAtuB,KAAAmvB,WACAC,IAEA,IAAA3U,EAAA3S,KAAAwmB,EAAAe,SAAAruB,OAAA,EACA,KAAA,kHAKA,OAAAhB,MAAAsvB,KAAAtP,GAAAhgB,KAAAsvB,KAAAtP,IAEAoP,EAAA5lB,OAAA,SAAA6C,GAIA,MAHAyiB,GAAAtlB,OAAAiR,EAAAtB,UAAA9M,IACA4iB,EAAAjrB,YAAAgrB,GACAV,EAAA9lB,KAAAsmB,EAAAvqB,QAAA,EACA6qB,GAGAA,EAAAG,OAAA,WAGA,MAFAN,GAAAjrB,YAAAgrB,GACAV,EAAA9lB,KAAAsmB,EAAAvqB,QAAA,EACAuqB,EAAAS,OAAA3K,MAAAkK,EAAA1jB,WAAAgkB,GAGAA,EAAA1lB,OAAA,WAGA,MAFAulB,GAAAjrB,YAAAgrB,GACAV,EAAA9lB,KAAAsmB,EAAAvqB,QAAA,EACAuqB,EAAAplB,OAAAkb,MAAAkK,EAAA1jB,WAAAgkB,GAGAA,EAAAzlB,OAAA,WAAA,MAAAmlB,GAAAnlB,UAEA3J,KAAAsvB,KAAAtP,GAAAoP,GAuLA,QAAAI,KACA,GAAA1pB,GAAA9F,IAyBA,OAxBA8F,GAAA2pB,YAAA,GAAAjuB,GAAAsE,EAAAipB,QACAW,QAAA,GAEA5pB,EAAA2pB,YAAAE,SAAA,SAAApmB,GACAqmB,EAAArmB,GAAA,aAEA,IAAAjJ,GAAAwF,EAAAipB,OAAAptB,OACA4H,GAAAsmB,MACAtmB,EAAAsmB,MAAAvgB,MAAA,SAAAwgB,GAAAhqB,EAAAgmB,UAAAD,OAAAvrB,EAAAwvB,KAEAhqB,EAAAgmB,UAAAD,OAAAvrB,EAIA,IAAAgG,GAAAwoB,CACA,KAAAxoB,IAAAiD,GAAAf,KACAsmB,EAAAhpB,EAAAipB,OAAAvmB,KAAAlC,GACAwoB,EAAAiB,WACA1uB,EAAA2uB,SAAAlB,EAAAmB,OAGA,OAAA1mB,IAGAzD,EAAAipB,OAAAptB,MAAAmE,EAAA2pB,cAAA,EAjSA,GAAAtc,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAsH,EAAA/Z,EAAA,WACAc,EAAAd,EAAA,oBACAwvB,EAAAxvB,EAAA,oBACAsqB,EAAAtqB,EAAA,0BACAuqB,EAAAvqB,EAAA,uBACAyvB,EAAAzvB,EAAA,oBACA0vB,EAAA1vB,EAAA,uBACAqB,EAAArB,EAAA,kBACAkvB,EAAAlvB,EAAA,iBACAW,EAAAX,EAAA,yBAEAS,EAAA,SAAAkvB,EAAAxF,EAAAC,EAAAK,GACAnrB,KAAAorB,IAAA,KACAprB,KAAA+uB,OAAA,KACA/uB,KAAAgsB,OAAAhsB,KAAAswB,QAAAzF,GAAA,IACA7qB,KAAAisB,QAAAjsB,KAAAuwB,SAAAzF,GAAA,IACA9qB,KAAAwwB,SAAA,EACAxwB,KAAAksB,UAAAnQ,IAAA,EAAAqQ,KAAA,EAAAE,OAAA,EAAAD,MAAA,GACArsB,KAAAmsB,UAAA,KACAnsB,KAAA8rB,UAAA,KACA9rB,KAAAywB,SAAA,KACAzwB,KAAAkvB,UAAA,KACAlvB,KAAAmvB,WAAA,KACAnvB,KAAAsrB,YAAAN,OAAAA,EAAAC,IAAAA,GACAjrB,KAAAusB,IAAAvB,EACAhrB,KAAAsvB,SAGA1pB,EAAAzE,EAAAyE,SAEAA,GAAAulB,MAAA,SAAAA,GACA,MAAA/f,WAAApK,QACAhB,KAAA+uB,SAAA5D,IACAnrB,KAAA+uB,OAAA5D,EACAnrB,KAAAkvB,UAAA,GAAA1tB,GAAA2pB,GACAnrB,KAAAmvB,WAAA9tB,EAAA4F,SACAjH,KAAAywB,UAAAzwB,KAAAywB,SAAAtF,MAAAA,IAEAnrB,MAPAA,KAAA+uB,QAmDAnpB,EAAA4C,KAAA,SAAAA,GACA,GAAA1C,GAAA9F,IACA,OAAAoL,WAAApK,OACAyZ,EAAAlU,SAAAiC,GAAAqmB,EAAA9tB,KAAA+E,EAAA0C,IACAiS,EAAAvG,SAAA1L,IACAiS,EAAA3S,KAAAU,GAAA2D,QAAA,SAAAxE,GACA,GAAAynB,GAAAP,EAAA9tB,KAAA+E,EAAA6B,EACAa,GAAAb,GAAAynB,KAGApvB,MARA8F,EAAAipB,OAAA2B,cAWA9qB,EAAA+qB,OAAA,SAAApsB,EAAA+C,GACA,GAAAX,GAAA3G,KAAA+uB,OACAT,EAAAtuB,KAAAmvB,WACAF,EAAAjvB,KAAAkvB,UACA0B,EAAArsB,CAEA,KAAA6G,UAAApK,OAAA,MAAA2F,GAAAkqB,cACA,IAAA,GAAAzlB,UAAApK,QAAAyZ,EAAAlU,SAAAhC,GAAA,MAAAoC,GAAAkqB,aAAAtsB,EAEA,IAAAkW,EAAA3S,KAAAwmB,EAAA9lB,MAAAxH,OAAA,EACA,KAAA,kHAeA,OAXA,IAAAoK,UAAApK,SACA4vB,KACAA,EAAArsB,GAAA+C,GAGAmT,EAAA3S,KAAA8oB,GAAAzkB,QAAA,SAAAxE,GACAsnB,EAAAjrB,YAAA2C,EAAAgqB,OAAAhpB,GAAAL,MAAAspB,EAAAjpB,KACA2mB,EAAAe,QAAA1nB,GAAA,EACA2mB,EAAAwC,QAAA,IAGA9wB,MAGA4F,EAAAilB,MAAA,SAAAA,GACA,MAAAzf,WAAApK,QACAhB,KAAAswB,UAAAzF,IACA7qB,KAAAgsB,OAAAhsB,KAAAswB,QAAAzF,EACA7qB,KAAA+rB,aACA/rB,KAAA+wB,UAAA/wB,KAAAwwB,SAAA,IAEAxwB,MANAA,KAAAswB,SASA1qB,EAAAklB,OAAA,SAAAA,GACA,MAAA1f,WAAApK,QACAhB,KAAAuwB,WAAAzF,IACA9qB,KAAAisB,QAAAjsB,KAAAuwB,SAAAzF,EACA9qB,KAAA+rB,aACA/rB,KAAA+wB,UAAA/wB,KAAAwwB,SAAA,IAEAxwB,MANAA,KAAAuwB,UASA3qB,EAAAorB,QAAA,SAAAvU,GACA,MAAArR,WAAApK,QACAhB,KAAAksB,WAAAzP,IACAhC,EAAAlU,SAAAkW,IACAzc,KAAAwwB,SAAA,EACAxwB,KAAAksB,UAAAnQ,IAAA,EAAAqQ,KAAA,EAAAE,OAAA,EAAAD,MAAA,GACArsB,KAAA+wB,QAAA,WAAAtU,IAEAzc,KAAAwwB,SAAA,EACAxwB,KAAAksB,SAAAzP,EACAzc,KAAA+wB,SAAA,GAEA/wB,KAAAorB,MACAprB,KAAA8rB,UAAAoB,OAAAltB,KAAAgsB,OAAAhsB,KAAAisB,QAAAxP,GACAzc,KAAAywB,UAAAzwB,KAAAywB,SAAAO,QAAAvU,KAGAzc,MAhBAA,KAAAksB,UAmBAtmB,EAAAqrB,QAAA,SAAA9iB,GACA,GAAAnO,KAAAwwB,SAAA,EAAA,MAAAxwB,KACAA,MAAAwwB,SAAA,CAEA,IAAA/T,GAAAzc,KAAAksB,SACA3f,EAAAvM,KAAAmrB,QAAAxpB,QAAA+nB,OACAwH,EAAAnvB,EAAAovB,aACArwB,EAAAyL,EAAAqd,GAAA,EAAAhb,KAAAM,MAAA3C,EAAAqd,IAAAsH,EAAA,EACA/wB,EAAAoM,EAAAud,GAAA,EAAAlb,KAAAM,MAAA3C,EAAAud,IAAAoH,EAAA,EACA7wB,EAAAkM,EAAAwd,GAAA/pB,KAAAgsB,OAAApd,KAAAM,MAAA3C,EAAAwd,GAAA/pB,KAAAgsB,QAAAkF,EAAA,EACA3kB,EAAAA,EAAAyd,GAAAhqB,KAAAisB,QAAArd,KAAAM,MAAA3C,EAAAyd,GAAAhqB,KAAAisB,SAAAiF,EAAA,CAeA,OAdAzU,IAAA2P,KAAAtrB,EAAAib,IAAA5b,EAAAksB,MAAAhsB,EAAAisB,OAAA/f,GAEAvM,KAAA+wB,SACA/wB,KAAAwwB,SAAA,EACAxwB,KAAAksB,SAAAzP,EACAzc,KAAAgsB,OAAApd,KAAAlE,IAAA,EAAA1K,KAAAswB,SAAAxvB,EAAAT,IACAL,KAAAisB,QAAArd,KAAAlE,IAAA,EAAA1K,KAAAuwB,UAAApwB,EAAAoM,IACAvM,KAAA+uB,OAAAlE,MAAA7qB,KAAAgsB,QACAhsB,KAAA+uB,OAAAjE,OAAA9qB,KAAAisB,SACAjsB,KAAA+rB,aACA/rB,KAAAuvB,UAEAvvB,KAAAgxB,QAAAvU,GAAA8S,OAAAphB,GAEAnO,MAGA4F,EAAAwrB,SAAA,SAAAnI,GACA,MAAA7d,WAAApK,QACAhB,KAAAmsB,YAAAlD,IACAjpB,KAAAmsB,UAAAlD,EACAjpB,KAAA+rB,cAEA/rB,MALAA,KAAAmsB,WAQAvmB,EAAA4lB,SAAA,SAAAxa,GACA,IAAA5F,UAAApK,OAAA,MAAAhB,MAAA8rB,SACA,IAAA9rB,KAAAsrB,WAAAta,GAAAA,EAAAhR,KAAAsrB,WAAAta,OACA,CAAA,GAAAyJ,EAAAlU,SAAAyK,GAAA,KAAA,IAAApQ,OAAA,qBAAAoQ,EACA,KAAAA,EAAA,KAAA,IAAApQ,OAAA,yBAQA,MANAZ,MAAAusB,MAAAvb,IACAhR,KAAAusB,IAAAvb,EACAhR,KAAA8rB,UAAA,KACA9rB,KAAA+rB,aACA/rB,KAAAqxB,QAAArxB,KAAA6rB,UAEA7rB,MAGA4F,EAAAmmB,WAAA,SAAAsE,GACA,GAAAiB,GAAAxrB,EAAA9F,KACAkkB,EAAApe,EAAAkmB,OAAA7a,EAAArL,EAAAmmB,QAAAxP,EAAA3W,EAAAomB,QAEA,OAAA9gB,WAAApK,QAAA,OAAAqvB,IACAA,EAAArwB,KAAAorB,IAAAprB,KAAAorB,IAAAmG,WAAA,OAKApe,EAAAqe,OAAAnB,GAAAmB,OAAA,YAAA9nB,SAGA1J,KAAAorB,IAAAiF,EAAAld,EAAAqe,OAAAnB,GACAoB,OAAA,OACAC,KAAA,QAAA,QACAC,MAAA,WAAA,YACA1c,OACAnP,EAAAqmB,WACAhZ,EAAAqe,OAAAnB,GACAsB,MAAA,SAAA7rB,EAAAqmB,UAAA,IAAAjI,GAAA,MACAyN,MAAA,UAAA7rB,EAAAqmB,UAAA,IAAAhb,GAAA,MACAwgB,MAAA,WAAA,QAIA7rB,EAAAgmB,WAAAhmB,EAAAgmB,WAAA,GAAA9rB,MAAAusB,IAAAC,UACAT,WAAAsE,EAAAnM,EAAA/S,EAAAsL,GAGA6U,EAAAxrB,EAAA2qB,SACA3qB,EAAA2qB,UAAA,GAAAzwB,MAAAusB,IAAAqF,SACA7F,WAAAsE,EAAA5T,EAAA3W,GACAqlB,MAAArlB,EAAAipB,QAEAuC,EACAA,EAAAO,WAAA1lB,QAAA,SAAAgF,GACArL,EAAA2qB,SAAA1sB,GAAAoN,EAAAH,KAAAG,EAAA2gB,WAIA5B,EAAAlwB,MAGAA,MAtCAA,MAsEA4F,EAAA2pB,OAAA,SAAAphB,GACAA,EAAAA,KACA,IAAArI,GAAA9F,KACA6vB,EAAA1hB,EAAA4jB,SACA,GAAA3B,GAAAjiB,EAAA4jB,SAAA5jB,EAAA6jB,MACA,KAEA1D,EAAAxoB,EAAAqpB,UAEA,IADAU,IAAAvB,EAAAuB,MAAAA,GACA1iB,SAAAgB,EAAA8jB,MAAA,CACA,GAAAxX,EAAA3S,KAAAwmB,EAAA9lB,MAAAxH,OAAA,EACA,KAAA,6HAIAstB,GAAAwC,QAAA,EACAxC,EAAAjX,QAAAlJ,EAAA8jB,MAoBA,MAjBAnsB,GAAAurB,OAAAvrB,EAAAurB,QAAA7B,EAAAzuB,KAAAf,MAKAmO,EAAA2hB,OACAK,EAAAZ,OAAAvvB,KAAA+uB,OAAA5gB,EAAA0hB,MAAA1hB,EAAA8jB,MAAA9jB,EAAA2hB,OACAhqB,EAAA2pB,YAAAE,SAAArB,IACAxoB,EAAAopB,UAAAgD,YAAAlxB,QACA8E,EAAAipB,OAAAR,UAAAD,EAAAxoB,EAAAopB,WACAppB,EAAAopB,UAAAhB,cAEApoB,EAAAipB,OAAAV,KAAAC,GAGAxoB,EAAAqpB,WAAA9tB,EAAA4F,SAEAnB,EAAAmrB,QAAA9iB,IAGAvI,EAAAimB,OAAA,SAAAiE,GAEA,MADA9vB,MAAA8rB,UAAAD,OAAA7rB,KAAA+uB,OAAAptB,QAAAmuB,GACA9vB,MAGA4F,EAAA7B,GAAA,WAEA,MADA/D,MAAAywB,SAAA1sB,GAAA6gB,MAAA5kB,KAAAywB,SAAArlB,WACApL,MAGA4F,EAAAusB,SAAA,SAAA5tB,EAAAutB,GAEA,MADA9xB,MAAA+uB,OAAA4B,OAAApsB,GAAAR,GAAA+tB,GACA9xB,MAGA4F,EAAA1B,IAAA,WAEA,MADAlE,MAAAywB,SAAAvsB,IAAA0gB,MAAA5kB,KAAAywB,SAAArlB,WACApL,MAGA4F,EAAAwsB,UAAA,SAAA7tB,EAAAutB,GAEA,MADA9xB,MAAA+uB,OAAA4B,OAAApsB,GAAAL,IAAA4tB,GACA9xB,MAGAmB,EAAAqoB,QAAA,SAAA2B,GACA,GAAAD,GAAAxqB,EAAA,iBACA,OAAA,UAAAyN,GACAA,EAAAA,KACA,IAAA4f,GAAA5C,EAAA4C,OACAjoB,GAAAqI,EAAAkiB,GAAA,GAAAlvB,GAAA,GAAA+pB,IACAC,MAAAA,GACAK,SAAArd,EAAAqd,UAAA,UACAX,MAAAkD,EAAAlD,OACAC,OAAAiD,EAAAjD,QACAkG,QAAAjD,EAAAiD,QAKA,QAHA7iB,EAAAkiB,KAAAliB,EAAAkiB,IAAAvqB,YAAAolB,KAAAplB,EAAAimB,WAAA5d,EAAAkiB,IACAliB,EAAA3F,MAAA1C,EAAA0C,KAAA2F,EAAA3F,MAEA1C,IAIArG,EAAAD,QAAA2B,I7BgxGGJ,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4uB,mBAAmB,GAAGC,wBAAwB,GAAG2D,mBAAmB,GAAGlF,yBAAyB,GAAGmF,sBAAsB,GAAGC,mBAAmB,GAAGC,sBAAsB,GAAGC,iBAAiB,IAAIpF,gBAAgB,IAAIqF,iBAAiB,GAAG/vB,QAAU,KAAKgwB,IAAI,SAASjyB,EAAQjB,EAAOD,G8BpoHtR,QAAA+F,GAAAqtB,GAGA,MAFApxB,GAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACA5yB,KAAA6yB,SACA7yB,KAAA0vB,QAAA,GACAoD,WAAA,GATA,GAAAtxB,GAAAd,EAAA,UACAW,EAAAX,EAAA,eACAkvB,EAAAlvB,EAAA,iBAUAiF,GATAjF,EAAA,qBASA6E,EAAAK,UAAA,GAAApE,GAEAmE,GAAA6C,KAAA,WAAA,MAAAxI,MAAA6yB,OAEAltB,EAAAgqB,SAAA,SAAApmB,GAGA,GAFAqmB,EAAArmB,GAAA,eAEAA,EAAAunB,OAGA,MAFAvnB,GAAAlI,EAAA4F,OAAAsC,GACAA,EAAAF,IAAArJ,KAAA6yB,MAAAjmB,QACArD,CAGA,IAAAA,EAAAT,IAAA9H,OAAA,CACA,GAAA+xB,GAAAxpB,EAAAT,IAAAqC,OAAA,SAAAxE,EAAAe,GAAA,MAAAf,GAAAe,EAAAsrB,KAAA,EAAArsB,MACA3G,MAAA6yB,MAAA7yB,KAAA6yB,MAAA7V,OAAA,SAAAtV,GAAA,MAAA,KAAAqrB,EAAArrB,EAAAsrB,OAWA,MARAzpB,GAAAX,IAAA5H,SACAhB,KAAA6yB,MAAA7yB,KAAA6yB,MAAA7xB,OAAAhB,KAAA6yB,MAAAxnB,OAAA9B,EAAAX,KAAAW,EAAAX,KAGAW,EAAA+C,MACAtM,KAAA6yB,MAAAvmB,KAAA/C,EAAA+C,MAGA/C,GAGA9J,EAAAD,QAAA+F,I9B2oHG0tB,oBAAoB,IAAI5F,gBAAgB,IAAI6F,SAAS,GAAGC,cAAc,KAAKC,IAAI,SAAS1yB,EAAQjB,EAAOD,G+B5qH1G,QAAA8B,GAAAsxB,EAAAruB,EAAA8uB,GACArzB,KAAAszB,OAAAV,EACA5yB,KAAAuzB,MAAAhvB,EACAvE,KAAA6yB,SACA7yB,KAAAwzB,QAAA,KACAxzB,KAAAyzB,OAAAJ,EACArzB,KAAA0zB,OAAAryB,EAAA4F,SACAjH,KAAA2zB,QAAA,KAEA3zB,KAAA4zB,UAAA,KACA5zB,KAAA6zB,WAAA,KACA7zB,KAAA8zB,UAAA,EA2DA,QAAAC,GAAAztB,GAAA6G,SAAA7G,EAAA0tB,QAAA1tB,EAAA0tB,MAAAC,EAAAC,UA9EA,GAAAzZ,GAAA/Z,EAAA,WACAW,EAAAX,EAAA,eACAyH,EAAAzH,EAAA,WACAc,EAAAd,EAAA,UACA6E,EAAA7E,EAAA,eACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAgBAiF,EAAArE,EAAAsE,SAEAD,GAAApB,KAAA,SAAAA,GACA,MAAA6G,WAAApK,QACAhB,KAAAuzB,MAAAhvB,EAAAvE,MADAA,KAAAuzB,OAIA5tB,EAAAsa,OAAA,SAAAD,GACA,MAAA5U,WAAApK,OACAhB,KAAAwzB,QAAAxzB,KAAAszB,OAAA9qB,KAAAwX,GADAhgB,KAAAwzB,SAIA7tB,EAAA6D,OAAA,SAAAlD,GACA,GAAA0C,GAAAhJ,KAAA8zB,SAAA,KAAA3mB,MAIA,OAFAnN,MAAA0zB,OAAA9qB,IAAA5I,KAAA0zB,OAAA9qB,IACAyC,OAAAoP,EAAApV,MAAAiB,GAAAD,IAAA,SAAAC,GAAA,MAAA6B,GAAAgsB,OAAA7tB,EAAA0C,MACAhJ,MAGA2F,EAAA+D,OAAA,SAAA0qB,GACA,GAAA9tB,GAAAtG,KAAA6yB,MAAA7V,OAAAoX,EAEA,OADAp0B,MAAA0zB,OAAA5qB,IAAA9I,KAAA0zB,OAAA5qB,IAAAuC,OAAA/E,GACAtG,MAGA2F,EAAA4pB,OAAA,SAAA6E,EAAAvX,EAAAwX,GACA,CAAA,GAAAhrB,GAAArJ,KAAA0zB,OAAArqB,IACA0pB,EAAA5qB,EAAAmsB,MAAAjrB,EACArJ,MAAA8zB,SAAA,KAAA3mB,OAcA,MAZAnN,MAAA0zB,OAAAxuB,OAAA2X,GAAA,EACA7c,KAAA6yB,MAAA7V,OAAAoX,GAAAjoB,QAAA,SAAAzE,GACA,GAAAsB,GAAAtB,EAAAmV,GACApK,EAAA4hB,EAAA3sB,EACAsB,KAAAyJ,IACAtK,EAAAe,IAAAxB,EAAAmV,EAAApK,GACA,IAAAsgB,EAAArrB,EAAAsrB,OACA3pB,EAAA9F,KAAAmE,GACAqrB,EAAArrB,EAAAsrB,KAAA,MAIAhzB,MAGA2F,EAAAgE,OAAA,SAAAnB,GACA,MAAA4C,WAAApK,QAIAhB,KAAA0zB,OAAA5qB,IAAA9I,KAAA6yB,MAAAjmB,QACApE,GAAAxI,KAAAwJ,OAAAhB,GACAxI,MALAA,KAAA6zB,WAAA7zB,KAAA6zB,WAAArrB,OAAAxI,KAAA6yB,OAUAltB,EAAAoqB,QAAA,SAAAnU,GACA,MAAAxQ,WAAApK,SAIAhB,KAAA8zB,UAAAlY,IACA5b,KAAA6yB,MAAA1mB,QAAA4nB,GACA/zB,KAAA0zB,OAAA9qB,IAAAuD,QAAA4nB,IAGA/zB,KAAA8zB,SAAA9zB,KAAA8zB,UAAAlY,EACA5b,MAVAA,KAAA8zB,UAaAnuB,EAAAsqB,KAAA,WAAA,MAAAjwB,MAAA2zB,SAEAhuB,EAAA0oB,KAAA,SAAA9kB,GACAA,IAAAvJ,KAAA0zB,OAAAnqB,GACAvJ,KAAAszB,OAAA/E,UAAAvuB,KAAA0zB,OAAA1zB,KAAA4zB,UAAA,KAGAjuB,EAAAqoB,SAAA,SAAAA,GACA,GAAAc,GAAA9uB,IACA,KAAAoL,UAAApK,OAAA,MAAAhB,MAAA4zB,SAEA5F,GAAAhtB,SAGA8tB,EAAA+E,WAAA,GAAAtuB,GAAAvF,KAAAszB,QACAtF,EAAAzqB,KAAAurB,EAAA+E,YACA/E,EAAAgF,SAAA9F,EAAArX,KAAA,SAAAiF,GAAA,MAAAA,GAAAmU,YAKA,IAAAxmB,GAAA,GAAA/H,GAAAxB,KAAAszB,QACA5D,QAAA,GACAoD,WAAA,EAEAvpB,GAAAomB,SAAA,SAAApmB,GACAqmB,EAAArmB,GAAA,QAAAulB,EAAAyE,OAEA,IAEAzqB,GAFAsU,EAAA0R,EAAA4E,OACAhoB,EAAArK,EAAA4F,OAAAsC,EA0BA,OAtBAkR,GAAA3S,KAAAsV,EAAAlY,QAAAiH,QAAA,SAAA5M,GAAAmM,EAAAxG,OAAA3F,GAAA,IAEAgK,EAAAunB,OACAplB,EAAArC,IAAAylB,EAAA+D,MAAAjmB,SAGAwQ,EAAAtU,IAAA9H,SACA8H,EAAAX,EAAAmsB,MAAAlX,EAAAtU,KACAgmB,EAAA+D,MAAA/D,EAAA+D,MACA7V,OAAA,SAAAtV,GAAA,MAAA,KAAAoB,EAAApB,EAAAsrB,QAGA5V,EAAAxU,IAAA5H,SAAA8tB,EAAA+D,MAAA/D,EAAA+D,MAAAxnB,OAAA+R,EAAAxU,MAGAkmB,EAAA4E,OAAAryB,EAAA4F,SAEAyE,EAAA9C,IAAAwU,EAAAxU,IACA8C,EAAArC,IAAA+T,EAAA/T,IACAqC,EAAA5C,IAAAsU,EAAAtU,KAGA4C,EAAA2nB,MAAAvE,EAAA2E,OAAA/nB,GAGAsiB,EAAAuG,QAAAhrB,EAKA,IAAAirB,GAAA,GAAAhzB,GAAAxB,KAAAszB,QACA5D,QAAA,GACAoD,WAAA,EAoBA,OAlBA0B,GAAA7E,SAAA,SAAApmB,GACAqmB,EAAArmB,GAAA,SAAAulB,EAAAyE,OACA,IAAAiB,GAAAnzB,EAAA4F,OAAAsC,GAAA,EASA,OAPAulB,GAAA2E,SACA3E,EAAA2E,OAAA9pB,OAAAmlB,EAAAnlB,SACAJ,EAAA8pB,MAAA,MAGAvE,EAAA6E,QAAApqB,EACAirB,EAAAhsB,KAAAsmB,EAAAyE,OAAA,EACAiB,GAGAxG,EAAAzqB,KAAAixB,GAEAx0B,KAAA4zB,UAAA5F,EACAhuB,KAAAszB,OAAAlF,QAAAU,EAAA8E,WACA5zB,MAGA2F,EAAAqpB,SAAA,WACA,GAAAluB,GAAA,GAAAU,GAAAxB,KAAAszB,QAAA5D,QAAA,GACA+E,EAAAz0B,KACAgJ,EAAAhJ,KAAA8zB,SAAA,KAAA3mB,MAqBA,OAnBArM,GAAA6uB,SAAA,SAAApmB,GACAkrB,EAAAC,QAAAD,EAAAC,WACA,IAAAruB,GAAAouB,EAAAC,QACAF,EAAAnzB,EAAA4F,OAAAsC,EAYA,OAVAirB,GAAA5rB,IAAAW,EAAAX,IAAAvC,IAAA,SAAAlG,GACA,MAAAkG,GAAAlG,EAAA6yB,KAAA7qB,EAAAwsB,OAAAx0B,EAAAgN,SAAAhN,EAAA6zB,MAAA7zB,EAAA6zB,MAAAhrB,KAEAwrB,EAAAnrB,IAAAE,EAAAF,IAAAhD,IAAA,SAAAlG,GAAA,MAAAkG,GAAAlG,EAAA6yB,OACAwB,EAAA1rB,IAAAS,EAAAT,IAAAzC,IAAA,SAAAlG,GACA,GAAAI,GAAA8F,EAAAlG,EAAA6yB,IAEA,OADA3sB,GAAAlG,EAAA6yB,KAAA,KACAzyB,IAGAk0B,EAAAf,OAAAc,GAGA1zB,EAAAkD,YAAAhE,KAAA4zB,UAAA,IACA9yB,GAGA6E,EAAA3B,YAAA,SAAAlD,GAQA,MAPAA,aAAAQ,GACAtB,KAAA6zB,WAAA7zB,KAAA6zB,WAAA7vB,YAAAlD,EAAAkuB,YACAhvB,KAAA4zB,UAAA,GAAA5vB,YAAAlD,EAAAkuB,YAEAhvB,KAAA4zB,UAAA5zB,KAAA4zB,UAAA5yB,OAAA,GAAAgD,YAAAlD,GAGAd,MAGA2F,EAAAxB,eAAA,SAAArD,GACAd,KAAA4zB,UAAA5zB,KAAA4zB,UAAA5yB,OAAA,GAAAmD,eAAArD,IAGA6E,EAAAusB,UAAA,SAAApD,GACA,MAAAA,GACA9uB,KAAA6zB,WAAA7zB,KAAA6zB,WAAA3B,YAAAlyB,KAAA4zB,UAAA,GAAA1B,YACAlyB,KAAA4zB,UAAA5zB,KAAA4zB,UAAA5yB,OAAA,GAAAkxB,aAGAzyB,EAAAD,QAAA8B,I/BsrHG2xB,oBAAoB,IAAI5F,gBAAgB,IAAIuH,cAAc,GAAG1B,SAAS,GAAGC,cAAc,GAAG0B,UAAU,GAAGlyB,QAAU,KAAKmyB,IAAI,SAASp0B,EAAQjB,EAAOD,GgCp5HrJ,QAAA+B,MA+BA,QAAAovB,GAAApsB,GACA,GAAAoC,GAAA3G,IACA,OAAAya,GAAAtV,QAAAZ,GACAA,EAAA8B,IAAA,SAAAjG,GAAAuG,EAAAouB,SAAA30B,KADAJ,KAAA+0B,SAAAxwB,GA+EA,QAAAywB,GAAAC,EAAAlX,GACA,GAAA9I,GAAA6d,EAAAnyB,EAAAsC,CACA,KAAAtC,EAAA,EAAAsC,EAAAgyB,EAAAj0B,OAAAiC,EAAAtC,IAAAA,EACAsU,EAAAggB,EAAAt0B,GACAsU,EAAA6d,cAAAA,EAAA7d,GACA8I,EAAA9I,EAAA6d,EAAAnyB,GA7HA,GAAA8Z,GAAA/Z,EAAA,WACAimB,EAAAjmB,EAAA,QACAY,EAAAZ,EAAA,gBACAw0B,EAAAx0B,EAAA,YAEAkvB,GADAlvB,EAAA,eACAA,EAAA,kBACAuzB,EAAAvzB,EAAA,qBAKAiF,EAAApE,EAAAqE,SAEAD,GAAAiG,KAAA,WACA5L,KAAAm1B,OAAA,EACAn1B,KAAAo1B,MAAA,EAEAp1B,KAAA6yB,SACA7yB,KAAA+0B,YAEA/0B,KAAAq1B,mBAGA1vB,EAAA6C,KAAA,SAAAjE,EAAAypB,EAAAqF,GACA,GAAAiC,GAAAt1B,KAAA6yB,KACA,OAAAznB,WAAApK,OACA,IAAAoK,UAAApK,OAAAs0B,EAAA/wB,GACA+wB,EAAA/wB,GAAA,GAAAjD,GAAAtB,KAAAuE,EAAA8uB,GAAArF,SAAAA,GAFAvT,EAAA3S,KAAAwtB,GAAAjvB,IAAA,SAAAC,GAAA,MAAAgvB,GAAAhvB,MAKAX,EAAA+qB,WAAA,SAAA6E,GACA,GAAA3C,GAAA5yB,IAEA,OADAoL,WAAApK,SAAAu0B,EAAA9a,EAAA3S,KAAA9H,KAAA6yB,QACApY,EAAAtV,QAAAowB,GACAA,EAAApqB,OAAA,SAAAmqB,EAAAl1B,GACA,MAAAk1B,GAAAl1B,GAAAwyB,EAAAC,MAAAzyB,GAAAuJ,SAAA2rB,OAFAt1B,KAAA6yB,MAAA0C,GAAA5rB,UAYAhE,EAAAgrB,OAAA,SAAApsB,EAAAqH,GAEA,MAAA,KAAAR,UAAApK,OAAA2vB,EAAA5vB,KAAAf,KAAAuE,GACAvE,KAAA+0B,SAAAxwB,GAAA,GAAA2wB,GAAAl1B,KAAAuE,EAAAqH,IAGAjG,EAAAkrB,aAAA,SAAA0E,GACA,GAAA3C,GAAA5yB,IAEA,OADAoL,WAAApK,SAAAu0B,EAAA9a,EAAA3S,KAAA9H,KAAA+0B,WACAta,EAAAtV,QAAAowB,GACAA,EAAApqB,OAAA,SAAAqqB,EAAAp1B,GACA,MAAAo1B,GAAAp1B,GAAAwyB,EAAAmC,SAAA30B,GAAAkH,QAAAkuB,OAFAx1B,KAAA+0B,SAAAQ,GAAAjuB,SAMA3B,EAAA8vB,UAAA,SAAAC,GACAjb,EAAAtV,QAAAuwB,KAAAA,EAAAjb,EAAAoC,MAAA6Y,GACA,IAAApuB,GAAAtH,KAAA2wB,OAAA+E,EAAAvU,SAAA7Z,OACA,IAAAouB,EAAA10B,OAAA,EAAA,CACA,GAAA+c,GAAAlR,SAAA,IAAA,YAAA6oB,EAAArvB,IAAAoU,EAAArO,KAAA6G,KAAA,MAAA,IACA3L,GAAAyW,EAAAhd,KAAA,KAAAuG,GAGA,MAAAA,GAGA,IAAAquB,GAAA,SAAAl1B,EAAA8L,GAGA,MAAA9L,GAAAkd,MAAApR,EAAAoR,KAAAld,EAAAm1B,MAAA9E,OAAA,EAAA,GACArwB,EAAAkd,KAAApR,EAAAoR,KAGAhY,GAAA4oB,UAAA,SAAAqH,EAAA3gB,GACA,GAAAnP,GAAAhF,EAAAV,EAAAwb,EAAAvb,EAAAM,EAAAsC,EAAA4yB,EAKAC,EAAA,GAAAnP,GAAAgP,EAEA,IAAAC,EAAAG,MAAA,KAAA,oCAKA,KAHAH,EAAAG,QAAA/1B,KAAAm1B,OACAW,EAAAvyB,MAAA0R,KAAAA,EAAA2gB,MAAAA,EAAAjY,KAAA1I,EAAA0I,SAEAmY,EAAA7M,OAAA,GAIA,GAHAnjB,EAAAgwB,EAAAnO,MAAAvnB,EAAA0F,EAAAmP,KAAA2G,EAAA9V,EAAA8vB,MAAAv1B,EAAAyF,EAAA6X,KAAA7c,EAAAV,EAAA41B,WACAH,EAAAja,EAAAkV,QAAA1wB,EAAA6vB,QAAArU,EAAAma,OAEAF,EAKA,GAAAx1B,GAAAD,EAAAud,QAUA,GAJA/B,EAAA5b,KAAA2vB,SAAA/T,EAAAxb,GAIAwb,IAAA5b,KAAAq1B,eACA,IAAA10B,EAAA,EAAAsC,EAAAnC,EAAAE,OAAAiC,EAAAtC,EAAAA,IACAm1B,EAAAvyB,MAAA0R,KAAAnU,EAAAH,GAAAi1B,MAAAha,EAAA+B,KAAA7c,EAAAH,GAAAy0B,YAXAxF,GAAAhU,GAAA,gBAAAvb,EAAAD,EAAAud,SACAmY,EAAAvyB,MAAA0R,KAAA7U,EAAAw1B,MAAAha,EAAA+B,KAAAvd,EAAAud,UA2BAhY,EAAAyoB,QAAA,SAAA6G,GACArF,MAAA,cACA,IAAAgD,GAAA5yB,IAsBA,OArBAg1B,GAAAC,EAAA,SAAA70B,EAAAoR,EAAA7Q,GACA,GAAA6H,GAAApI,EAAA61B,WAAAhC,EAAAiC,MACA7G,EAAAjvB,EAAA61B,WAAAhC,EAAAkC,QAEA3tB,GAAAxH,OAAA,GACAwH,EAAA2D,QAAA,SAAA7F,GACAssB,EAAApqB,KAAAlC,GACAypB,QAAA3vB,EAAA2vB,WACA/rB,YAAAwN,KAIA6d,EAAAruB,OAAA,GACAquB,EAAAljB,QAAA,SAAA7L,GAAAsyB,EAAAjC,OAAArwB,GAAA0D,YAAAwN,KAGA7Q,EAAA,GACAs0B,EAAAt0B,EAAA,GAAAqD,YAAAixB,EAAAt0B,MAIAs0B,GAGAtvB,EAAAuoB,WAAA,SAAA+G,GACArF,MAAA,iBACA,IAAAgD,GAAA5yB,IAiBA,OAfAg1B,GAAAC,EAAA,SAAA70B,EAAAoR,EAAA7Q,GACA,GAAA6H,GAAApI,EAAA61B,WAAAhC,EAAAiC,MACA7G,EAAAjvB,EAAA61B,WAAAhC,EAAAkC,QAEA3tB,GAAAxH,OAAA,GACAwH,EAAA2D,QAAA,SAAA7F,GAAAssB,EAAApqB,KAAAlC,GAAAnC,eAAAqN,KAGA6d,EAAAruB,OAAA,GACAquB,EAAAljB,QAAA,SAAA7L,GAAAsyB,EAAAjC,OAAArwB,GAAA6D,eAAAqN,KAGApR,EAAA8tB,eAGA+G,GAGAtvB,EAAAywB,WAAA,SAAAR,EAAA3gB,GACA,GAAA4gB,IAAAD,EAAA9E,QAAA8E,EAAA9E,QAAA7b,EAAAgb,QAAA2F,EAAAG,MACAM,IAAAT,EAAAhtB,IAAA5H,UAAA40B,EAAA9sB,IAAA9H,QAAAiU,EAAAya,QAEA,OADA2G,GAAAA,IAAAR,EACAQ,GAAAphB,EAAAmhB,WAAAR,IAGAjwB,EAAAgqB,SAAA,SAAAiG,EAAA3gB,GACA,MAAAjV,MAAAo2B,WAAAR,EAAA3gB,IACA2gB,EAAA3gB,EAAA0a,SAAAiG,GACA3gB,EAAAgb,KAAA2F,EAAAG,OACAH,GAHAA,GAMAn2B,EAAAD,QAAA+B,IhC85HG0xB,oBAAoB,IAAI5F,gBAAgB,IAAIiJ,eAAe,GAAGC,WAAW,GAAGpD,cAAc,GAAGxwB,QAAU,GAAGwmB,KAAO,KAAKqN,IAAI,SAAS91B,EAAQjB,EAAOD,GiCxlIrJ,QAAAgC,GAAAoxB,GAEA,MADAA,IAAA5yB,KAAA4L,KAAAgnB,GACA5yB,KARA,GAAAya,GAAA/Z,EAAA,WACAuzB,EAAAvzB,EAAA,qBACA+1B,GAAAxC,EAAAiC,KAAAjC,EAAAyC,OAAAzC,EAAA0C,OAAA1C,EAAAkC,SAEAS,EAAA,EAOAjxB,EAAAnE,EAAAoE,SAEAD,GAAAiG,KAAA,SAAAgnB,GAmBA,MAlBA5yB,MAAAgzB,IAAA4D,IACA52B,KAAAszB,OAAAV,EACA5yB,KAAAo1B,QAAAxC,EAAAwC,MACAp1B,KAAAm1B,OAAA,EAEAn1B,KAAAg2B,cACAh2B,KAAA62B,eAEA72B,KAAA82B,OACAtuB,QACAtD,UACA6xB,UACA1H,YAGArvB,KAAAg3B,WAAA,EACAh3B,KAAAi3B,cAAA,EACAj3B,KAAA8zB,UAAA,EACA9zB,MAGA2F,EAAAujB,MAAA,WACA,GAAA9oB,GAAA,GAAAoB,GAAAxB,KAAAszB,OAKA,OAJAlzB,GAAAuvB,SAAA3vB,KAAA2vB,SACAvvB,EAAA02B,MAAA92B,KAAA82B,MACA12B,EAAA42B,UAAAh3B,KAAAg3B,UACA52B,EAAA62B,aAAAj3B,KAAAi3B,aACA72B,GAGAuF,EAAAgY,KAAA,WAAA,MAAA3d,MAAAo1B,OAEAzvB,EAAAsqB,KAAA,SAAA8F,GACA,MAAA3qB,WAAApK,QACAhB,KAAAm1B,OAAAY,EACA/1B,MAFAA,KAAAm1B,QAKAxvB,EAAAswB,WAAA,SAAAjlB,EAAAkmB,GACA,GAAA5wB,GAAAtG,KAAA82B,MAAA9lB,EACA,IAAA,IAAA5F,UAAApK,OAAA,MAAAsF,EACA,IAAA,OAAA4wB,EACA,KAAA5wB,EAAAtF,OAAA,GAAAsF,EAAAqhB,WAEAlN,EAAAtV,QAAA+xB,IAAA5wB,EAAA2Q,QAAAigB,GAAA,EAAA5wB,EAAA/C,KAAA2zB,GACA5wB,EAAA/C,KAAAqhB,MAAAte,EAAAmU,EAAApV,MAAA6xB,GAEA,OAAAl3B,OAGA2F,EAAA+pB,OAAA,SAAAyH,GACA,MAAA/rB,WAAApK,QACAhB,KAAAg3B,YAAAG,EACAn3B,MAFAA,KAAAg3B,WAKArxB,EAAAmtB,UAAA,SAAAqE,GACA,MAAA/rB,WAAApK,QACAhB,KAAAi3B,eAAAE,EACAn3B,MAFAA,KAAAi3B,cAKAtxB,EAAAoqB,QAAA,SAAAoH,GACA,MAAA/rB,WAAApK,QACAhB,KAAA8zB,WAAAqD,EACAn3B,MAFAA,KAAA8zB,UAKAnuB,EAAAusB,UAAA,WACA,MAAAlyB,MAAAg2B,YAGArwB,EAAA3B,YAAA,SAAAlD,GACA,KAAAA,YAAAU,IAAA,KAAA,wBACA,IAAAxB,KAAA62B,YAAA/1B,EAAAkyB,KAAA,MAAAhzB,KAIA,IAFAA,KAAAg2B,WAAAzyB,KAAAzC,GACAd,KAAA62B,YAAA/1B,EAAAkyB,KAAA,EACAhzB,KAAAo1B,MAAAt0B,EAAAs0B,MAEA,IADA,GAAAlY,IAAApc,GACAoc,EAAAlc,QAAA,CACA,GAAAo2B,GAAAla,EAAAhD,OAAA,EAAA,GAAA,EACAkd,GAAAhC,QAAAp1B,KAAAszB,OAAA8B,MACAlY,EAAA3Z,KAAAqhB,MAAA1H,EAAAka,EAAApB,YAIA,MAAAh2B,OAGA2F,EAAAxB,eAAA,SAAArD,GAEA,IAAA,GADAu2B,IAAA,EACA12B,EAAA,EAAAsC,EAAAjD,KAAAg2B,WAAAh1B,OAAAiC,EAAAtC,IAAA02B,EAAA12B,IACAX,KAAAg2B,WAAAr1B,KAAAG,IACAd,KAAAg2B,WAAA9b,OAAAvZ,EAAA,GACAX,KAAA62B,YAAA/1B,EAAAkyB,KAAA,KACAqE,GAAA,EAIA,OAAAA,IAGA1xB,EAAAuoB,WAAA,WACAluB,KAAAg2B,cACAh2B,KAAA62B,gBAGAlxB,EAAAgqB,SAAA,SAAAiG,GAAA,MAAAA,IAEAjwB,EAAAywB,WAAA,SAAAR,GACA,GAAA3gB,GAAAjV,KAAAs3B,GAAA,CACA,OAAAb,GAAA9f,KAAA,SAAAuK,GAEA,MADAoW,GAAAA,GAAAriB,EAAA6hB,MAAA5V,GAAAvK,KAAA,SAAAhP,GAAA,QAAAiuB,EAAA1U,GAAAvZ,QAOAlI,EAAAD,QAAAgC,IjCgmIGyxB,oBAAoB,IAAItwB,QAAU,KAAK40B,IAAI,SAAS72B,EAAQjB,EAAOD,GkCnuItE,QAAA01B,GAAAtC,EAAAruB,EAAAqH,GAKA,MAJApK,GAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACA5yB,KAAAuzB,MAAAhvB,EACAvE,KAAAw3B,OAAA5rB,EACA5L,KAAAy3B,aACAz3B,KARA,GAAAwB,GAAAd,EAAA,UACAW,EAAAX,EAAA,eAUAiF,EAAAuvB,EAAAtvB,UAAA,GAAApE,EAEAmE,GAAApB,KAAA,WAAA,MAAAvE,MAAAuzB,OAEA5tB,EAAA2B,MAAA,SAAA4K,GACA,MAAA9G,WAAApK,QACAhB,KAAAw3B,OAAAtlB,EACAlS,MAFAA,KAAAw3B,QAKA7xB,EAAA0oB,KAAA,SAAAC,GACAA,IAAAA,EAAAjtB,EAAA4F,OAAA,MAAA,IACAqnB,EAAAe,QAAArvB,KAAAuzB,OAAA,EACAvzB,KAAAszB,OAAA/E,UAAAD,EAAAtuB,OAGA2F,EAAA5B,GAAA,SAAA+tB,GACA,GAAA0D,GAAAx1B,KACAiV,EAAA,GAAAzT,GAAAxB,KAAAszB,OAOA,OALAre,GAAA0a,SAAA,SAAApmB,GACA,MAAAuoB,GAAA0D,EAAAjxB,OAAAixB,EAAAluB,SAAAiC,GAGAvJ,KAAAy3B,UAAAl0B,MAAAuuB,QAAAA,EAAA7c,KAAAA,IACAjV,KAAAgE,YAAAiR,IAGAtP,EAAAzB,IAAA,SAAA4tB,GAEA,IAAA,GADA0D,GAAAx1B,KAAAmR,EAAAnR,KAAAy3B,UACA92B,EAAAwQ,EAAAnQ,SAAAL,GAAA,GACAmxB,GAAA3gB,EAAAxQ,GAAAmxB,UAAAA,GACA0D,EAAArxB,eAAAgN,EAAA+I,OAAAvZ,EAAA,GAAA,GAAAsU,KAGA,OAAAjV,OAGAP,EAAAD,QAAA01B,IlCwuIGhC,SAAS,GAAGC,cAAc,KAAKuE,IAAI,SAASh3B,EAAQjB,EAAOD,GmCtxI9D,QAAAyH,GAAAqnB,EAAAwC,GACA,GAAAplB,KASA,OARA6d,GAAA+E,EAAA5iB,GAEAA,EAAA9C,OACA8C,EAAArC,OACAqC,EAAA5C,OAEA4C,EAAAolB,OAAAA,EAEAplB,EAGA,QAAAisB,GAAAjwB,GACAA,EAAAssB,MAAA7mB,SAAAzF,EAAAssB,MAAA7mB,OAAA8mB,EAAAC,SAGA,QAAAlE,GAAA1B,GACA,IAAA3tB,EAAA,EAAAsC,IAAAqrB,EAAA1lB,IAAA5H,OAAAL,EAAAsC,MAAAtC,EAAAg3B,EAAArJ,EAAA1lB,IAAAjI,GACA,KAAAA,EAAA,EAAAsC,IAAAqrB,EAAAjlB,IAAArI,OAAAL,EAAAsC,MAAAtC,EAAAg3B,EAAArJ,EAAAjlB,IAAA1I,IAGA,QAAA4oB,GAAA9oB,EAAA8L,GACAA,EAAAwpB,MAAAt1B,EAAAA,EAAAs1B,MAAA,EACAxpB,EAAAD,KAAA7L,EAAAA,EAAA6L,KAAA,KACAC,EAAA8mB,MAAA5yB,EAAAA,EAAA4yB,MAAA,KACA9mB,EAAAsjB,MAAApvB,EAAAA,EAAAovB,MAAA,KACAtjB,EAAA8K,QAAA5W,EAAAA,EAAA4W,QAAA,KACAof,EAAAtqB,QAAA,SAAA7F,GAAAiG,EAAAjG,GAAA7F,EAAAA,EAAA6F,QA/BA,GAAA2tB,GAAAvzB,EAAA,qBACA+1B,GAAAxC,EAAAiC,KAAAjC,EAAAyC,OAAAzC,EAAA0C,OAAA1C,EAAAkC,QAiCA12B,GAAAD,SACAyH,OAAAA,EACAsiB,KAAAA,EACAyG,SAAAA,KnC4xIGiD,oBAAoB,MAAM2E,IAAI,SAASl3B,EAAQjB,EAAOD,GoC1zIzD,QAAA20B,GAAA0D,EAAA7uB,GAIA,MAHA6uB,GAAApd,EAAAvG,SAAA2jB,GAAAA,GAAArvB,KAAAqvB,GACAA,EAAA7E,IAAA8E,IACAD,EAAA7D,MAAA7mB,SAAAnE,EAAAA,GAAAirB,EAAAC,SAAA/mB,OACA0qB,EAGA,QAAAlD,GAAAkD,EAAA7uB,GACA,MAAAmrB,GAAAxP,OAAA1d,OAAA4wB,GAAA7uB,GAIA,QAAAE,GAAA/I,EAAAwH,EAAA7B,GACA,GAAAkD,GAAA7I,EAAAwH,EACAqB,KAAAlD,IACAiuB,EAAA5zB,EAAAwH,GACAxH,EAAAwH,GAAA7B,GAGA,QAAAiuB,GAAA5zB,EAAAwH,GACAwF,SAAAhN,EAAA6zB,QACA7zB,EAAA6zB,MAAA7zB,EAAA6zB,QAAAC,EAAAC,YAAA/zB,EAAA6zB,MACA7zB,EAAA6zB,MAAArsB,GAAAxH,EAAAwH,IAGA,QAAAowB,KAAAD,EAAA,EAEA,QAAAxD,GAAA7zB,GACA,MAAAA,GAAA0K,OAAA,SAAAxE,EAAAe,GACA,MAAAf,GAAAe,EAAAsrB,KAAA,EAAArsB,OApCA,GAAA8T,GAAA/Z,EAAA,WACAuzB,EAAAvzB,EAAA,qBACAo3B,EAAA,CAsCAr4B,GAAAD,SACA20B,OAAAA,EACAQ,OAAAA,EACAzrB,IAAAA,EACAF,KAAA+qB,EACAgE,MAAAA,EACAzD,MAAAA,KpCo0IGrB,oBAAoB,IAAItwB,QAAU,KAAKq1B,IAAI,SAASt3B,EAAQjB,EAAOD,GqCl3ItE,GAAAib,GAAA/Z,EAAA,UAEAjB,GAAAD,QAAA,SAAA2O,GAcA,QAAA8pB,GAAAC,GACA,GAAAC,IACApa,GAAAqa,EAAAF,GACA7I,QAAA5U,EAAA3S,KAAAunB,GACAnqB,OAAAuV,EAAA3S,KAAA5C,GAIA,OAFAmqB,MACAnqB,KACAizB,EAGA,QAAAC,GAAAF,GACA,GAAAA,YAAAzT,QAAA,MAAAyT,EACA,IAAAG,GAAAC,EAAAJ,EAAAlnB,KACA,IAAA,MAAAqnB,EACA,KAAA,IAAAz3B,OAAA,qBAAAs3B,EAAAlnB,KAEA,OAAAqnB,GAAAH,GA9BA/pB,EAAAA,KACA,IAAAoqB,GAAApqB,EAAAoqB,WAAA73B,EAAA,eACA83B,GAAArqB,EAAAqqB,WAAA93B,EAAA,gBAAA03B,GACAK,EAAAtqB,EAAAsqB,YAAAhe,EAAAtQ,MAAAgE,EAAAsqB,aAAA,KACAC,EAAAvqB,EAAAuqB,YAAAje,EAAAtQ,MAAAgE,EAAAuqB,aAAA,KACAC,EAAA,EAGAC,EAAA,QACAC,EAAA,MACAxJ,KACAnqB,KAsBAozB,GACAQ,QAAA,SAAA14B,GACA,MAAAA,GAAAmQ,KAEAwoB,WAAA,SAAA34B,GACA,GAAA44B,GAAA54B,EAAAmE,IACA,IAAAo0B,EAAA,EACA,MAAAK,EAEA,IAAAT,EAAAnuB,eAAA4uB,GACA,MAAAT,GAAAS,EAEA,IAAAP,EACA,MAAAA,GAAAruB,eAAA4uB,GACAA,GAEA3J,EAAA2J,GAAA,EACAH,EAAAG,EAGA,IAAAN,GAAAA,EAAAtuB,eAAA4uB,GACA,KAAA,IAAAp4B,OAAA,uBAAAo4B,EAEA,OAAAA,IAEAC,QAAA,SAAA74B,GACA,MAAAA,GAAAoY,KAAAnS,IAAA+xB,GAAAnlB,KAAA,OAEAimB,iBAAA,SAAA94B,GACA,GAAAkG,IAAAlG,EAAA+4B,SACA54B,EAAA63B,EAAAh4B,EAAAiH,OACAf,KAAAqyB,GAAA,EACA,IAAA/c,GAAAwc,EAAAh4B,EAAAiU,SAGA,OAFA9T,KAAAq4B,IAAA1zB,EAAA0W,GAAA,GACAtV,IAAAqyB,GAAA,GACAp4B,GAAA+F,EAAA,IAAAsV,EAAA,IAAAA,EAAA,MAEAwd,eAAA,SAAAh5B,GACA,GAAA,eAAAA,EAAAi5B,OAAAroB,KACA,KAAA,IAAApQ,OAAA,wBAAAR,EAAAi5B,OAAAroB,KAEA,IAAAqoB,GAAAj5B,EAAAi5B,OAAA90B,KACA2G,EAAA9K,EAAAgL,UACA2S,EAAAya,EAAApuB,eAAAivB,IAAAb,EAAAa,EACA,KAAAtb,EAAA,KAAA,IAAAnd,OAAA,0BAAAy4B,EACA,OAAAtb,aAAAlR,UACAkR,EAAA7S,GACA6S,EAAA,IAAA7S,EAAA7E,IAAA+xB,GAAAnlB,KAAA,KAAA,KAEAqmB,gBAAA,SAAAl5B,GACA,MAAA,IAAAA,EAAAm5B,SAAAlzB,IAAA+xB,GAAAnlB,KAAA,KAAA,KAEAumB,iBAAA,SAAAp5B,GACA,MAAA,IAAAg4B,EAAAh4B,EAAAgsB,MAAAhsB,EAAAq5B,SAAArB,EAAAh4B,EAAAisB,OAAA,KAEAqN,gBAAA,SAAAt5B,GACA,MAAA,IAAAA,EAAAq5B,SAAArB,EAAAh4B,EAAAu5B,UAAA,KAEAC,iBAAA,SAAAx5B,GACA,MAAA,KAAAy5B,OACAz5B,EAAAq5B,SAAArB,EAAAh4B,EAAAu5B,UACAvB,EAAAh4B,EAAAu5B,UAAAv5B,EAAAq5B,UACA,KAEAK,sBAAA,SAAA15B,GACA,MAAA,IAAAg4B,EAAAh4B,EAAAuV,MACA,IAAAyiB,EAAAh4B,EAAA25B,YACA,IAAA3B,EAAAh4B,EAAA45B,WACA;;EAEAC,kBAAA,SAAA75B,GACA,MAAA,IAAAg4B,EAAAh4B,EAAAgsB,MAAAhsB,EAAAq5B,SAAArB,EAAAh4B,EAAAisB,OAAA,KAEA6N,iBAAA,SAAA95B,GACA,MAAA,IAAAA,EAAA+5B,WAAA9zB,IAAA+xB,GAAAnlB,KAAA,KAAA,KAEAmnB,SAAA,SAAAh6B,GACAu4B,GAAA,CACA,IAAAhxB,GAAAywB,EAAAh4B,EAAA2F,IAEA,OADA4yB,IAAA,EACAhxB,EAAA,IAAAywB,EAAAh4B,EAAAkH,QAEA+yB,oBAAA,SAAAj6B,GACA,MAAAg4B,GAAAh4B,EAAAk6B,aAIA,OAAArC,MrCs3IGsC,cAAc,GAAGC,cAAc,GAAG73B,QAAU,KAAK83B,IAAI,SAAS/5B,EAAQjB,EAAOD,GsCj/IhFC,EAAAD,SACA+lB,IAAA,MACAmV,EAAA,SACArb,IAAA,WACAsb,KAAA,YACAC,MAAA,aACAC,OAAA,cACAC,GAAA,UACAC,QAAA,eACAC,MAAA,mBtCo/IMC,IAAI,SAASv6B,EAAQjB,EAAOD,GuC7/IlCkB,EAAA,UAEAjB,GAAAD,QAAA,SAAA44B,GAEA,QAAA8C,GAAA32B,EAAA2G,EAAAiwB,EAAAnqB,GACA,GAAAuD,GAAA6jB,EAAAltB,EAAA,GAKA,OAJAiwB,KACA5mB,EAAA4mB,EAAA,IAAA5mB,EAAA,IACAkG,GAAA7E,WAAAulB,EAAA,UAAA5mB,EAAA,IAAAA,EAAA,MAEAA,EAAA,IAAAhQ,GAAA,EAAAyM,EAAA,GAAA,IAAAA,EACA,KACA,IAAA9F,EAAA0B,MAAA,GAAAvG,IAAA+xB,GAAAnlB,KAAA,KAAA,KAGA,GAAAmoB,GAAA,WACAC,EAAA,SACAC,EAAA,QAEA,QAEAhhB,MAAA,QACAhJ,SAAA,WACA2N,IAAA,WACAsc,KAAA,YACAC,KAAA,YACAC,KAAA,YACAC,MAAA,aACAxsB,KAAA,YACAqb,IAAA,WACAxL,IAAA,WACA1P,MAAA,aACAR,IAAA,WACAnE,IAAA,WACAD,IAAA,WACA0E,IAAA,WACAkD,OAAA,cACAjD,MAAA,aACAob,IAAA,WACA5X,KAAA,YACA+oB,IAAA,WAGAC,IAAA,WACAC,SAAA,WACA9rB,KAAA,SAAA7E,GACA,MAAAgwB,GAAA,UAAAhwB,EAAAkwB,EAAA,IAEAhY,IAAA,SAAAlY,GACA,MAAAgwB,GAAA,SAAAhwB,EAAAkwB,EAAA,IAEA9X,KAAA,SAAApY,GACA,MAAAgwB,GAAA,cAAAhwB,EAAAkwB,EAAA,IAEA/X,MAAA,SAAAnY,GACA,MAAAgwB,GAAA,WAAAhwB,EAAAkwB,EAAA,IAEAU,MAAA,SAAA5wB,GACA,MAAAgwB,GAAA,WAAAhwB,EAAAkwB,EAAA,IAEAW,QAAA,SAAA7wB,GACA,MAAAgwB,GAAA,aAAAhwB,EAAAkwB,EAAA,IAEAY,QAAA,SAAA9wB,GACA,MAAAgwB,GAAA,aAAAhwB,EAAAkwB,EAAA,IAEAa,aAAA,SAAA/wB,GACA,MAAAgwB,GAAA,kBAAAhwB,EAAAkwB,EAAA,IAEA7Z,KAAA,SAAArW,GACA,MAAAgwB,GAAA,UAAAhwB,EAAAkwB,EAAA,IAEAc,eAAA,SAAAhxB,GACA,MAAAgwB,GAAA,oBAAAhwB,EAAAkwB,EAAA,IAEAe,QAAA,SAAAjxB,GACA,MAAAgwB,GAAA,aAAAhwB,EAAAkwB,EAAA,IAEAgB,OAAA,SAAAlxB,GACA,MAAAgwB,GAAA,YAAAhwB,EAAAkwB,EAAA,IAEAiB,QAAA,SAAAnxB,GACA,MAAAgwB,GAAA,iBAAAhwB,EAAAkwB,EAAA,IAEAkB,SAAA,SAAApxB,GACA,MAAAgwB,GAAA,cAAAhwB,EAAAkwB,EAAA,IAEAmB,SAAA,SAAArxB,GACA,MAAAgwB,GAAA,cAAAhwB,EAAAkwB,EAAA,IAEAoB,WAAA,SAAAtxB,GACA,MAAAgwB,GAAA,gBAAAhwB,EAAAkwB,EAAA,IAEAqB,WAAA,SAAAvxB,GACA,MAAAgwB,GAAA,gBAAAhwB,EAAAkwB,EAAA,IAEAsB,gBAAA,SAAAxxB,GACA,MAAAgwB,GAAA,qBAAAhwB,EAAAkwB,EAAA,IAIAp6B,OAAA,SAAAkK,GACA,MAAAgwB,GAAA,SAAAhwB,EAAA,KAAA,KAEAyxB,QAAA,SAAAzxB,GACA,MAAAgwB,GAAA,UAAAhwB,EAAA,OAEA0xB,YAAA,SAAA1xB,GACA,MAAAgwB,GAAA,cAAAhwB,EAAA,OAIA2xB,WAAA,aACAC,SAAA,WACAC,MAAA,SAAA7xB,GACA,MAAAgwB,GAAA,cAAAhwB,EAAAmwB,EAAA,IAEA2B,MAAA,SAAA9xB,GACA,MAAAgwB,GAAA,cAAAhwB,EAAAmwB,EAAA,IAEAzuB,MAAA,SAAA1B,GACA,MAAAgwB,GAAA,QAAAhwB,EAAAmwB,IAEA4B,UAAA,SAAA/xB,GACA,MAAAgwB,GAAA,YAAAhwB,EAAAmwB,IAIA1lB,KAAA,SAAAzK,GACA,MAAAgwB,GAAA,OAAAhwB,EAAAowB,IAIA4B,KAAA,SAAAhyB,GACA,GAAAA,EAAAlK,OAAA,EACA,KAAA,IAAAJ,OAAA,oCACA,IAAAsK,EAAAlK,OAAA,EACA,KAAA,IAAAJ,OAAA,qCACA,IAAAH,GAAAyK,EAAA7E,IAAA+xB,EACA,OAAA33B,GAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,QvCkgJGkC,QAAU,KAAKw6B,IAAI,SAASz8B,EAAQjB,EAAOD,GwC7oJ9C,GAAA49B,GAAA18B,EAAA,YACA03B,EAAA13B,EAAA,YAEAjB,GAAAD,SACAiC,MAAA,SAAA8H,EAAA4E,GAAA,MAAAivB,GAAA37B,MAAA,IAAA8H,EAAA,IAAA4E,IACAtN,KAAA,SAAAsN,GAAA,MAAAiqB,GAAAjqB,OxCipJGkvB,YAAY,GAAGC,WAAW,KAAKC,IAAI,SAAS78B,EAAQjB,EAAOD,GyCnnJ9DC,EAAAD,QAAA,WACA,YAiHA,SAAAg+B,GAAAC,EAAAC,GACA,IAAAD,EACA,KAAA,IAAA78B,OAAA,WAAA88B,GAIA,QAAAC,GAAAC,GACA,MAAAA,IAAA,IAAA,IAAAA,EAGA,QAAAC,GAAAD,GACA,MAAA,yBAAA3mB,QAAA2mB,IAAA,EAGA,QAAAE,GAAAF,GACA,MAAA,WAAA3mB,QAAA2mB,IAAA,EAKA,QAAAG,GAAAH,GACA,MAAA,MAAAA,GAAA,IAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GACAA,GAAA,OAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MAAA,OAAA3mB,QAAA2mB,IAAA,EAKA,QAAAI,GAAAJ,GACA,MAAA,MAAAA,GAAA,KAAAA,GAAA,OAAAA,GAAA,OAAAA,EAKA,QAAAK,GAAAL,GACA,MAAA,MAAAA,GAAA,KAAAA,GACAA,GAAA,IAAA,IAAAA,GACAA,GAAA,IAAA,KAAAA,GACA,KAAAA,GACAA,GAAA,KAAAM,GAAAC,wBAAAxoB,KAAA8O,OAAA2Z,aAAAR,IAGA,QAAAS,GAAAT,GACA,MAAA,MAAAA,GAAA,KAAAA,GACAA,GAAA,IAAA,IAAAA,GACAA,GAAA,IAAA,KAAAA,GACAA,GAAA,IAAA,IAAAA,GACA,KAAAA,GACAA,GAAA,KAAAM,GAAAI,uBAAA3oB,KAAA8O,OAAA2Z,aAAAR,IAKA,QAAAW,GAAAvF,GACA,OAAAA,GACA,IAAA,QACA,IAAA,OACA,IAAA,SACA,IAAA,UACA,IAAA,SACA,IAAA,QACA,OAAA,CACA,SACA,OAAA,GAIA,QAAAwF,GAAAxF,GACA,OAAAA,GACA,IAAA,aACA,IAAA,YACA,IAAA,UACA,IAAA,UACA,IAAA,YACA,IAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,MACA,OAAA,CACA,SACA,OAAA,GAMA,QAAAyF,GAAAzF,GACA,GAAA0F,IAAAF,EAAAxF,GACA,OAAA,CAOA,QAAAA,EAAAh4B,QACA,IAAA,GACA,MAAA,OAAAg4B,GAAA,OAAAA,GAAA,OAAAA,CACA,KAAA,GACA,MAAA,QAAAA,GAAA,QAAAA,GAAA,QAAAA,GACA,QAAAA,GAAA,QAAAA,CACA,KAAA,GACA,MAAA,SAAAA,GAAA,SAAAA,GAAA,SAAAA,GACA,SAAAA,GAAA,SAAAA,GAAA,SAAAA,CACA,KAAA,GACA,MAAA,UAAAA,GAAA,UAAAA,GAAA,UAAAA,GACA,UAAAA,GAAA,UAAAA,GAAA,UAAAA,GACA,UAAAA,GAAA,UAAAA,CACA,KAAA,GACA,MAAA,WAAAA,GAAA,WAAAA,GAAA,WAAAA,GACA,WAAAA,GAAA,WAAAA,GAAA,WAAAA,CACA,KAAA,GACA,MAAA,YAAAA,GAAA,YAAAA,GAAA,YAAAA,CACA,KAAA,GACA,MAAA,aAAAA,GAAA,aAAAA,GAAA,aAAAA,CACA,KAAA,IACA,MAAA,eAAAA,CACA,SACA,OAAA,GAIA,QAAA2F,KACA,GAAAf,GAAAtuB,CAGA,KADAA,EAAA,IAAA9E,GACAxJ,GAAAwJ,IAGA,GAFAozB,EAAA3d,GAAA2e,WAAAp0B,IAEAuzB,EAAAH,KACApzB,OACA,CAAA,IAAAwzB,EAAAJ,GASA,QARApzB,GACA,KAAAozB,GAAA,KAAA3d,GAAA2e,WAAAp0B,OACAA,KAEAq0B,GACAC,GAAAt0B,GACA8E,GAAA,GAOA,QAAAyvB,GAAAlF,GACA,GAAAl5B,GAAAsC,EAAA26B,EAAA/8B,EAAA,CAGA,KADAoC,EAAA,MAAA42B,EAAA,EAAA,EACAl5B,EAAA,EAAAsC,EAAAtC,IAAAA,EAAA,CACA,KAAAK,GAAAwJ,IAAAqzB,EAAA5d,GAAAzV,MAIA,MAAA,EAHAozB,GAAA3d,GAAAzV,MACA3J,EAAA,GAAAA,EAAA,mBAAAoW,QAAA2mB,EAAApnB,eAKA,MAAAiO,QAAA2Z,aAAAv9B,GAGA,QAAAm+B,KACA,GAAApB,GAAA/8B,EAAAo+B,EAAAC,CAUA,KARAtB,EAAA3d,GAAAzV,IACA3J,EAAA,EAGA,MAAA+8B,GACAuB,KAAAC,GAAAC,gBAAA,WAGAr+B,GAAAwJ,KACAozB,EAAA3d,GAAAzV,MACAqzB,EAAAD,KAGA/8B,EAAA,GAAAA,EAAA,mBAAAoW,QAAA2mB,EAAApnB,cAQA,QALA3V,EAAA,SAAA,MAAA+8B,IACAuB,KAAAC,GAAAC,gBAAA,WAIA,OAAAx+B,EACA4jB,OAAA2Z,aAAAv9B,IAEAo+B,GAAAp+B,EAAA,OAAA,IAAA,MACAq+B,GAAAr+B,EAAA,MAAA,MAAA,MACA4jB,OAAA2Z,aAAAa,EAAAC,IAGA,QAAAI,KACA,GAAA1B,GAAA5E,CAkBA,KAhBA4E,EAAA3d,GAAA2e,WAAAp0B,MACAwuB,EAAAvU,OAAA2Z,aAAAR,GAGA,KAAAA,IACA,MAAA3d,GAAA2e,WAAAp0B,KACA20B,KAAAC,GAAAC,gBAAA,aAEA70B,GACAozB,EAAAmB,EAAA,KACAnB,GAAA,OAAAA,GAAAK,EAAAL,EAAAgB,WAAA,KACAO,KAAAC,GAAAC,gBAAA,WAEArG,EAAA4E,GAGA58B,GAAAwJ,KACAozB,EAAA3d,GAAA2e,WAAAp0B,IACA6zB,EAAAT,OAGApzB,GACAwuB,GAAAvU,OAAA2Z,aAAAR,GAGA,KAAAA,IACA5E,EAAAA,EAAAuG,OAAA,EAAAvG,EAAAh4B,OAAA,GACA,MAAAif,GAAA2e,WAAAp0B,KACA20B,KAAAC,GAAAC,gBAAA,aAEA70B,GACAozB,EAAAmB,EAAA,KACAnB,GAAA,OAAAA,GAAAS,EAAAT,EAAAgB,WAAA,KACAO,KAAAC,GAAAC,gBAAA,WAEArG,GAAA4E,EAIA,OAAA5E,GAGA,QAAAwG,KACA,GAAAlwB,GAAAsuB,CAGA,KADAtuB,EAAA9E,KACAxJ,GAAAwJ,IAAA,CAEA,GADAozB,EAAA3d,GAAA2e,WAAAp0B,IACA,KAAAozB,EAGA,MADApzB,IAAA8E,EACAgwB,GAEA,KAAAjB,EAAAT,GAGA,QAFApzB,GAMA,MAAAyV,IAAArT,MAAA0C,EAAA9E,IAGA,QAAAi1B,KACA,GAAAnwB,GAAA0pB,EAAAhoB,CAqBA,OAnBA1B,GAAA9E,GAGAwuB,EAAA,KAAA/Y,GAAA2e,WAAAp0B,IAAA80B,IAAAE,IAKAxuB,EADA,IAAAgoB,EAAAh4B,OACA0+B,GAAA3G,WACA0F,EAAAzF,GACA0G,GAAAC,QACA,SAAA3G,EACA0G,GAAAE,YACA,SAAA5G,GAAA,UAAAA,EACA0G,GAAAG,eAEAH,GAAA3G,YAIA/nB,KAAAA,EACA1J,MAAA0xB,EACA6F,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,IAMA,QAAAu1B,KACA,GAEAC,GAEAC,EACAC,EACAC,EANA7wB,EAAA9E,GACA3J,EAAAof,GAAA2e,WAAAp0B,IAEA41B,EAAAngB,GAAAzV,GAKA,QAAA3J,GAGA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KASA,QARA2J,GACA61B,GAAAC,WACA,KAAAz/B,EACAw/B,GAAAE,eAAAF,GAAAG,OAAAx/B,OACA,MAAAH,IACAw/B,GAAAI,eAAAJ,GAAAG,OAAAx/B,UAIAgQ,KAAA0uB,GAAAgB,WACAp5B,MAAAmd,OAAA2Z,aAAAv9B,GACAg+B,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,GAGA,SAIA,GAHAw1B,EAAA/f,GAAA2e,WAAAp0B,GAAA,GAGA,KAAAw1B,EACA,OAAAn/B,GACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,IAAA,IAEA,MADA2J,KAAA,GAEAwG,KAAA0uB,GAAAgB,WACAp5B,MAAAmd,OAAA2Z,aAAAv9B,GAAA4jB,OAAA2Z,aAAA4B,GACAnB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,GAGA,KAAA,IACA,IAAA,IAOA,MANAA,KAAA,EAGA,KAAAyV,GAAA2e,WAAAp0B,OACAA,IAGAwG,KAAA0uB,GAAAgB,WACAp5B,MAAA2Y,GAAArT,MAAA0C,EAAA9E,IACAq0B,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,KAUA,MAFA21B,GAAAlgB,GAAAsf,OAAA/0B,GAAA,GAEA,SAAA21B,GACA31B,IAAA,GAEAwG,KAAA0uB,GAAAgB,WACAp5B,MAAA64B,EACAtB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,MAMA01B,EAAAC,EAAAZ,OAAA,EAAA,GAEA,QAAAW,GAAA,QAAAA,GAAA,QAAAA,GACA11B,IAAA,GAEAwG,KAAA0uB,GAAAgB,WACAp5B,MAAA44B,EACArB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,MAKAy1B,EAAAC,EAAAX,OAAA,EAAA,GAEAa,IAAAH,EAAA,IAAA,SAAAhpB,QAAAmpB,IAAA,GAAA,OAAAH,GACAz1B,IAAA,GAEAwG,KAAA0uB,GAAAgB,WACAp5B,MAAA24B,EACApB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,KAMA,eAAAyM,QAAAmpB,IAAA,KACA51B,IAEAwG,KAAA0uB,GAAAgB,WACAp5B,MAAA84B,EACAvB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,SAIA20B,MAAAC,GAAAC,gBAAA,aAKA,QAAAsB,GAAArxB,GAGA,IAFA,GAAAsC,GAAA,GAEA5Q,GAAAwJ,IACAqzB,EAAA5d,GAAAzV,MAGAoH,GAAAqO,GAAAzV,KAWA,OARA,KAAAoH,EAAA5Q,QACAm+B,KAAAC,GAAAC,gBAAA,WAGApB,EAAAhe,GAAA2e,WAAAp0B,MACA20B,KAAAC,GAAAC,gBAAA,YAIAruB,KAAA0uB,GAAAkB,eACAt5B,MAAAw1B,SAAA,KAAAlrB,EAAA,IACAitB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,IAIA,QAAAq2B,GAAAvxB,GAEA,IADA,GAAAsC,GAAA,IAAAqO,GAAAzV,MACAxJ,GAAAwJ,IACAszB,EAAA7d,GAAAzV,MAGAoH,GAAAqO,GAAAzV,KAOA,QAJAyzB,EAAAhe,GAAA2e,WAAAp0B,MAAAmzB,EAAA1d,GAAA2e,WAAAp0B,OACA20B,KAAAC,GAAAC,gBAAA,YAIAruB,KAAA0uB,GAAAkB,eACAt5B,MAAAw1B,SAAAlrB,EAAA,GACAkvB,OAAA,EACAjC,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,IAIA,QAAAu2B,KACA,GAAAnvB,GAAAtC,EAAAsuB,CAQA,IANAA,EAAA3d,GAAAzV,IACAgzB,EAAAG,EAAAC,EAAAgB,WAAA,KAAA,MAAAhB,EACA,sEAEAtuB,EAAA9E,GACAoH,EAAA,GACA,MAAAgsB,EAAA,CAMA,GALAhsB,EAAAqO,GAAAzV,MACAozB,EAAA3d,GAAAzV,IAIA,MAAAoH,EAAA,CACA,GAAA,MAAAgsB,GAAA,MAAAA,EAEA,QADApzB,GACAm2B,EAAArxB,EAEA,IAAAwuB,EAAAF,GACA,MAAAiD,GAAAvxB,EAIAsuB,IAAAD,EAAAC,EAAAgB,WAAA,KACAO,KAAAC,GAAAC,gBAAA,WAIA,KAAA1B,EAAA1d,GAAA2e,WAAAp0B,MACAoH,GAAAqO,GAAAzV,KAEAozB,GAAA3d,GAAAzV,IAGA,GAAA,MAAAozB,EAAA,CAEA,IADAhsB,GAAAqO,GAAAzV,MACAmzB,EAAA1d,GAAA2e,WAAAp0B,MACAoH,GAAAqO,GAAAzV,KAEAozB,GAAA3d,GAAAzV,IAGA,GAAA,MAAAozB,GAAA,MAAAA,EAOA,GANAhsB,GAAAqO,GAAAzV,MAEAozB,EAAA3d,GAAAzV,KACA,MAAAozB,GAAA,MAAAA,KACAhsB,GAAAqO,GAAAzV,OAEAmzB,EAAA1d,GAAA2e,WAAAp0B,KACA,KAAAmzB,EAAA1d,GAAA2e,WAAAp0B,MACAoH,GAAAqO,GAAAzV,UAGA20B,MAAAC,GAAAC,gBAAA,UAQA,OAJApB,GAAAhe,GAAA2e,WAAAp0B,MACA20B,KAAAC,GAAAC,gBAAA,YAIAruB,KAAA0uB,GAAAkB,eACAt5B,MAAAu1B,WAAAjrB,GACAitB,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,IAMA,QAAAw2B,KACA,GAAAC,GAAA3xB,EAAAsuB,EAAA/8B,EAAAqgC,EAAAC,EAAAC,EAAAC,EAAAj1B,EAAA,GAAA00B,GAAA,CAWA,KAVAM,EAAAvC,GACAwC,EAAAvC,GAEAmC,EAAAhhB,GAAAzV,IACAgzB,EAAA,MAAAyD,GAAA,MAAAA,EACA,2CAEA3xB,EAAA9E,KACAA,GAEAxJ,GAAAwJ,IAAA,CAGA,GAFAozB,EAAA3d,GAAAzV,MAEAozB,IAAAqD,EAAA,CACAA,EAAA,EACA,OACA,GAAA,OAAArD,EAEA,GADAA,EAAA3d,GAAAzV,MACAozB,GAAAI,EAAAJ,EAAAgB,WAAA,MAiEAC,GACA,OAAAjB,GAAA,OAAA3d,GAAAzV,OACAA,GAEAs0B,GAAAt0B,OApEA,QAAAozB,GACA,IAAA,IACA,IAAA,IACA,MAAA3d,GAAAzV,OACAA,GACA4B,GAAA4yB,MAEAmC,EAAA32B,GACA02B,EAAAnC,EAAAnB,GACAsD,EACA90B,GAAA80B,GAEA12B,GAAA22B,EACA/0B,GAAAwxB,GAGA,MACA,KAAA,IACAxxB,GAAA,IACA,MACA,KAAA,IACAA,GAAA,IACA,MACA,KAAA,IACAA,GAAA,GACA,MACA,KAAA,IACAA,GAAA,IACA,MACA,KAAA,IACAA,GAAA,IACA,MACA,KAAA,IACAA,GAAA,GACA,MAEA,SACA0xB,EAAAF,IACA/8B,EAAA,WAAAoW,QAAA2mB,GAGA,IAAA/8B,IACAigC,GAAA,GAGA9/B,GAAAwJ,IAAAszB,EAAA7d,GAAAzV,OACAs2B,GAAA,EACAjgC,EAAA,EAAAA,EAAA,WAAAoW,QAAAgJ,GAAAzV,OAIA,OAAAyM,QAAA2mB,IAAA,GACA58B,GAAAwJ,IACAszB,EAAA7d,GAAAzV,OACA3J,EAAA,EAAAA,EAAA,WAAAoW,QAAAgJ,GAAAzV,SAGA4B,GAAAqY,OAAA2Z,aAAAv9B,IAEAuL,GAAAwxB,MAWA,CAAA,GAAAI,EAAAJ,EAAAgB,WAAA,IACA,KAEAxyB,IAAAwxB,GAQA,MAJA,KAAAqD,GACA9B,KAAAC,GAAAC,gBAAA,YAIAruB,KAAA0uB,GAAA4B,cACAh6B,MAAA8E,EACA00B,MAAAA,EACAM,gBAAAA,EACAC,eAAAA,EACAxC,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,IAIA,QAAA+2B,GAAA9f,EAAA+f,GACA,GACAl6B,GADAm6B,EAAAhgB,CAGA+f,GAAAvqB,QAAA,MAAA,IASAwqB,EAAAA,EACAlhB,QAAA,yBAAA,SAAAmhB,EAAAC,GACA,MAAA7E,UAAA6E,EAAA,KAAA,QACA,QAEAxC,MAAAC,GAAAwC,iBAEArhB,QAAA,kCAAA,KAIA,KACAjZ,EAAA,GAAAu6B,QAAAJ,GACA,MAAAvhC,GACAi/B,KAAAC,GAAAwC,eAMA,IACA,MAAA,IAAAC,QAAApgB,EAAA+f,GACA,MAAAM,GACA,MAAA,OAIA,QAAAC,KACA,GAAAnE,GAAAxxB,EAAA41B,EAAAC,EAAAzpB,CAQA,KANAolB,EAAA3d,GAAAzV,IACAgzB,EAAA,MAAAI,EAAA,sDACAxxB,EAAA6T,GAAAzV,MAEAw3B,GAAA,EACAC,GAAA,EACAjhC,GAAAwJ,IAGA,GAFAozB,EAAA3d,GAAAzV,MACA4B,GAAAwxB,EACA,OAAAA,EACAA,EAAA3d,GAAAzV,MAEAwzB,EAAAJ,EAAAgB,WAAA,KACAO,KAAAC,GAAA8C,oBAEA91B,GAAAwxB,MACA,IAAAI,EAAAJ,EAAAgB,WAAA,IACAO,KAAAC,GAAA8C,wBACA,IAAAF,EACA,MAAApE,IACAoE,GAAA,OAEA,CACA,GAAA,MAAApE,EAAA,CACAqE,GAAA,CACA,OACA,MAAArE,IACAoE,GAAA,GAWA,MANAC,IACA9C,KAAAC,GAAA8C,oBAIA1pB,EAAApM,EAAAmzB,OAAA,EAAAnzB,EAAApL,OAAA,IAEAsG,MAAAkR,EACA2pB,QAAA/1B,GAIA,QAAAg2B,KACA,GAAAxE,GAAAxxB,EAAAo1B,EAAAL,CAIA,KAFA/0B,EAAA,GACAo1B,EAAA,GACAxgC,GAAAwJ,KACAozB,EAAA3d,GAAAzV,IACA6zB,EAAAT,EAAAgB,WAAA,MAKA,KADAp0B,GACA,OAAAozB,GAAA58B,GAAAwJ,GAEA,GADAozB,EAAA3d,GAAAzV,IACA,MAAAozB,EAAA,CAIA,KAHApzB,GACA22B,EAAA32B,GACAozB,EAAAmB,EAAA,KAGA,IADAyC,GAAA5D,EACAxxB,GAAA,MAAA5B,GAAA22B,IAAAA,EACA/0B,GAAA6T,GAAAkhB,OAGA32B,IAAA22B,EACAK,GAAA,IACAp1B,GAAA,KAEAi2B,MAAAjD,GAAAC,gBAAA,eAEAjzB,IAAA,KACAi2B,KAAAjD,GAAAC,gBAAA,eAGAmC,IAAA5D,EACAxxB,GAAAwxB,CAIA,QACAt2B,MAAAk6B,EACAW,QAAA/1B,GAIA,QAAAk2B,KACA,GAAAhzB,GAAAkJ,EAAAgpB,EAAAl6B,CAUA,OARAi7B,IAAA,KACA5D,IACArvB,EAAA9E,GAEAgO,EAAAupB,IACAP,EAAAY,IACA96B,EAAAi6B,EAAA/oB,EAAAlR,MAAAk6B,EAAAl6B,OAEA+4B,GAAAC,UAEAtvB,KAAA0uB,GAAA8C,kBACAl7B,MAAAA,EACA+Y,OACAoB,QAAAjJ,EAAAlR,MACAk6B,MAAAA,EAAAl6B,OAEAu3B,WAAAA,GACAC,UAAAA,GACAxvB,MAAAA,EACAwwB,IAAAt1B,KAKA23B,QAAA3pB,EAAA2pB,QAAAX,EAAAW,QACA76B,MAAAA,EACA+Y,OACAoB,QAAAjJ,EAAAlR,MACAk6B,MAAAA,EAAAl6B,OAEAgI,MAAAA,EACAwwB,IAAAt1B,IAIA,QAAAi4B,KACA,GAAAzc,GAAA0c,EAAAriB,EAAAsiB,CAuCA,OArCAhE,KAEA3Y,EAAAxb,GACAk4B,GACApzB,OACAszB,KAAA/D,GACAgE,OAAAr4B,GAAAs0B,KAIAze,EAAAiiB,IAEAI,EAAA5C,KACA8C,KAAA/D,GACAgE,OAAAr4B,GAAAs0B,IAGAuB,GAAAC,WAEAD,GAAAG,OAAAx/B,OAAA,IACA2hC,EAAAtC,GAAAG,OAAAH,GAAAG,OAAAx/B,OAAA,GACA2hC,EAAAtxB,MAAA,KAAA2U,GAAA,eAAA2c,EAAA3xB,OACA,MAAA2xB,EAAAr7B,OAAA,OAAAq7B,EAAAr7B,QACA+4B,GAAAG,OAAA7Y,OAKA0Y,GAAAG,OAAAj9B,MACAyN,KAAA,oBACA1J,MAAA+Y,EAAA8hB,QACA9hB,MAAAA,EAAAA,MACAhP,OAAA2U,EAAAxb,IACAk4B,IAAAA,KAIAriB,EAGA,QAAAyiB,GAAAH,GACA,MAAAA,GAAA3xB,OAAA0uB,GAAA3G,YACA4J,EAAA3xB,OAAA0uB,GAAAC,SACAgD,EAAA3xB,OAAA0uB,GAAAG,gBACA8C,EAAA3xB,OAAA0uB,GAAAE,YAGA,QAAAmD,KACA,GAAAC,GACAC,CAIA,IADAD,EAAA3C,GAAAG,OAAAH,GAAAG,OAAAx/B,OAAA,IACAgiC,EAEA,MAAAP,IAEA,IAAA,eAAAO,EAAAhyB,KAAA,CACA,GAAA,MAAAgyB,EAAA17B,MACA,MAAAy4B,IAEA,IAAA,MAAAiD,EAAA17B,MAEA,MADA27B,GAAA5C,GAAAG,OAAAH,GAAAE,eAAA,IACA0C,GACA,YAAAA,EAAAjyB,MACA,OAAAiyB,EAAA37B,OACA,UAAA27B,EAAA37B,OACA,QAAA27B,EAAA37B,OACA,SAAA27B,EAAA37B,MAGAy4B,IAFA0C,GAIA,IAAA,MAAAO,EAAA17B,MAAA,CAGA,GAAA+4B,GAAAG,OAAAH,GAAAI,eAAA,IACA,YAAAJ,GAAAG,OAAAH,GAAAI,eAAA,GAAAzvB,MAGA,GADAiyB,EAAA5C,GAAAG,OAAAH,GAAAI,eAAA,IACAwC,EACA,MAAAlD,SAEA,CAAA,IAAAM,GAAAG,OAAAH,GAAAI,eAAA,IACA,YAAAJ,GAAAG,OAAAH,GAAAI,eAAA,GAAAzvB,KAOA,MAAA+uB,IAJA,IADAkD,EAAA5C,GAAAG,OAAAH,GAAAI,eAAA,IACAwC,EACA,MAAAR,KAKA,MAAA1C,KAEA,MAAA0C,KAEA,MAAA,YAAAO,EAAAhyB,MAAA,SAAAgyB,EAAA17B,MACAm7B,IAEA1C,IAGA,QAAAmD,KACA,GAAAtF,EAIA,OAFAe,KAEAn0B,IAAAxJ,IAEAgQ,KAAA0uB,GAAAyD,IACAtE,WAAAA,GACAC,UAAAA,GACAxvB,MAAA9E,GACAs1B,IAAAt1B,KAIAozB,EAAA3d,GAAA2e,WAAAp0B,IAEAyzB,EAAAL,GACA6B,IAIA,KAAA7B,GAAA,KAAAA,GAAA,KAAAA,EACAmC,IAIA,KAAAnC,GAAA,KAAAA,EACAoD,IAMA,KAAApD,EACAD,EAAA1d,GAAA2e,WAAAp0B,GAAA,IACAu2B,IAEAhB,IAGApC,EAAAC,GACAmD,IAIAV,GAAAC,UAAA,KAAA1C,EACAmF,IAGAhD,KAGA,QAAAqD,KACA,GAAAV,GAAAC,EAAAr7B,EAAA+7B,CAiCA,OA/BA1E,KACA+D,GACApzB,OACAszB,KAAA/D,GACAgE,OAAAr4B,GAAAs0B,KAIA6D,EAAAO,IACAR,EAAA5C,KACA8C,KAAA/D,GACAgE,OAAAr4B,GAAAs0B,IAGA6D,EAAA3xB,OAAA0uB,GAAAyD,MACA77B,EAAA2Y,GAAArT,MAAA+1B,EAAArzB,MAAAqzB,EAAA7C,KACAuD,GACAryB,KAAAsyB,GAAAX,EAAA3xB,MACA1J,MAAAA,EACA+J,OAAAsxB,EAAArzB,MAAAqzB,EAAA7C,KACA4C,IAAAA,GAEAC,EAAAtiB,QACAgjB,EAAAhjB,OACAoB,QAAAkhB,EAAAtiB,MAAAoB,QACA+f,MAAAmB,EAAAtiB,MAAAmhB,QAGAnB,GAAAG,OAAAj9B,KAAA8/B,IAGAV,EAGA,QAAAY,KACA,GAAAZ,EAaA,OAXAA,GAAAJ,GACA/3B,GAAAm4B,EAAA7C,IACAjB,GAAA8D,EAAA9D,WACAC,GAAA6D,EAAA7D,UAEAyD,GAAA,mBAAAlC,IAAAG,OAAA4C,IAAAF,IAEA14B,GAAAm4B,EAAA7C,IACAjB,GAAA8D,EAAA9D,WACAC,GAAA6D,EAAA7D,UAEA6D,EAGA,QAAA7Z,KACA,GAAA9C,GAAA4c,EAAAtzB,CAEA0W,GAAAxb,GACAo4B,EAAA/D,GACAvvB,EAAAwvB,GACAyD,GAAA,mBAAAlC,IAAAG,OAAA4C,IAAAF,IACA14B,GAAAwb,EACA6Y,GAAA+D,EACA9D,GAAAxvB,EAGA,QAAAk0B,KACAxjC,KAAA4iC,KAAA/D,GACA7+B,KAAA6iC,OAAAr4B,GAAAs0B,GAGA,QAAA2E,KACAzjC,KAAAsP,MAAA,GAAAk0B,GACAxjC,KAAA8/B,IAAA,KAGA,QAAA4D,GAAAC,GAEA3jC,KAAAsP,MADAq0B,EAAA3yB,OAAA0uB,GAAA4B,eAEAsB,KAAAe,EAAAvC,gBACAyB,OAAAc,EAAAr0B,MAAAq0B,EAAAtC,iBAIAuB,KAAAe,EAAA9E,WACAgE,OAAAc,EAAAr0B,MAAAq0B,EAAA7E,WAGA9+B,KAAA8/B,IAAA,KAGA,QAAAt+B,KAEAgJ,GAAA+3B,GAAAjzB,MACAizB,GAAAvxB,OAAA0uB,GAAA4B,eACAzC,GAAA0D,GAAAnB,gBACAtC,GAAAyD,GAAAlB,iBAEAxC,GAAA0D,GAAA1D,WACAC,GAAAyD,GAAAzD,WAEAuB,GAAAhvB,QACArR,KAAAqR,OAAA7G,GAAA,IAEA61B,GAAAqC,MACA1iC,KAAA0iC,IAAA,GAAAe,IAIA,QAAAG,GAAAD,GACAtD,GAAAhvB,QACArR,KAAAqR,OAAAsyB,EAAAr0B,MAAA,IAEA+wB,GAAAqC,MACA1iC,KAAA0iC,IAAA,GAAAgB,GAAAC,IAoIA,QAAAE,KACA,GAAA7d,GAAA4c,EAAAtzB,EAAAw0B,CAWA,OATA9d,GAAAxb,GACAo4B,EAAA/D,GACAvvB,EAAAwvB,GACAH,IACAmF,EAAAjF,KAAA+D,EACAp4B,GAAAwb,EACA6Y,GAAA+D,EACA9D,GAAAxvB,EAEAw0B,EAKA,QAAA3E,GAAAwD,EAAAoB,GACA,GAAAhtB,GACA7L,EAAAtD,MAAAhC,UAAAgH,MAAA7L,KAAAqK,UAAA,GACA44B,EAAAD,EAAAxjB,QACA,SACA,SAAA0jB,EAAAz5B,GAEA,MADAgzB,GAAAhzB,EAAAU,EAAAlK,OAAA,sCACAkK,EAAAV,IAiBA,MAbA,gBAAAm4B,GAAA9D,YACA9nB,EAAA,GAAAnW,OAAA,QAAA+hC,EAAA9D,WAAA,KAAAmF,GACAjtB,EAAAvM,MAAAm4B,EAAArzB,MACAyH,EAAA8nB,WAAA8D,EAAA9D,WACA9nB,EAAA8rB,OAAAF,EAAArzB,MAAAwvB,GAAA,IAEA/nB,EAAA,GAAAnW,OAAA,QAAAi+B,GAAA,KAAAmF,GACAjtB,EAAAvM,MAAAA,GACAuM,EAAA8nB,WAAAA,GACA9nB,EAAA8rB,OAAAr4B,GAAAs0B,GAAA,GAGA/nB,EAAAmtB,YAAAF,EACAjtB,EAGA,QAAAsrB,KACA,IACAlD,EAAAva,MAAA,KAAAxZ,WACA,MAAAlL,GACA,IAAAmgC,GAAA8D,OAGA,KAAAjkC,EAFAmgC,IAAA8D,OAAA5gC,KAAArD,IAUA,QAAAkkC,GAAAzB,GAiBA,GAhBAA,EAAA3xB,OAAA0uB,GAAAyD,KACAhE,EAAAwD,EAAAvD,GAAAiF,eAGA1B,EAAA3xB,OAAA0uB,GAAAkB,gBACAzB,EAAAwD,EAAAvD,GAAAkF,kBAGA3B,EAAA3xB,OAAA0uB,GAAA4B,eACAnC,EAAAwD,EAAAvD,GAAAmF,kBAGA5B,EAAA3xB,OAAA0uB,GAAA3G,YACAoG,EAAAwD,EAAAvD,GAAAoF,sBAGA7B,EAAA3xB,OAAA0uB,GAAAC,QAAA,CACA,GAAApB,EAAAoE,EAAAr7B,OACA63B,EAAAwD,EAAAvD,GAAAqF,wBACA,IAAA/F,IAAAF,EAAAmE,EAAAr7B,OAEA,WADA+6B,GAAAM,EAAAvD,GAAAsF,mBAGAvF,GAAAwD,EAAAvD,GAAAC,gBAAAsD,EAAAr7B,OAIA63B,EAAAwD,EAAAvD,GAAAC,gBAAAsD,EAAAr7B,OAMA,QAAAq9B,GAAAr9B,GACA,GAAAq7B,GAAAY,KACAZ,EAAA3xB,OAAA0uB,GAAAgB,YAAAiC,EAAAr7B,QAAAA,IACA88B,EAAAzB,GAWA,QAAAiC,GAAAt9B,GACA,GAAA+4B,GAAA8D,OAAA,CACA,GAAAxB,GAAAJ,EACAI,GAAA3xB,OAAA0uB,GAAAgB,YAAAiC,EAAAr7B,QAAAA,EACA+6B,EAAAM,EAAAvD,GAAAC,gBAAAsD,EAAAr7B,OAEAi8B,QAGAoB,GAAAr9B,GAgBA,QAAAkZ,GAAAlZ,GACA,MAAAi7B,IAAAvxB,OAAA0uB,GAAAgB,YAAA6B,GAAAj7B,QAAAA,EAKA,QAAAu9B,GAAAC,GACA,MAAAvC,IAAAvxB,OAAA0uB,GAAAC,SAAA4C,GAAAj7B,QAAAw9B,EAGA,QAAAC,KACA,GAAAnC,EAGA,OAAA,MAAA3iB,GAAA2e,WAAAp0B,KAAAgW,EAAA,SACA+iB,MAIAX,EAAA/D,GACAF,SACAE,KAAA+D,IAIAL,GAAAvxB,OAAA0uB,GAAAyD,KAAA3iB,EAAA,MACA4jB,EAAA7B,OAYA,QAAAyC,KACA,GAAAzL,MAAAtkB,EAAA,GAAAzT,EAIA,KAFAmjC,EAAA,MAEAnkB,EAAA,MACAA,EAAA,MACA+iB,IACAhK,EAAAh2B,KAAA,QAEAg2B,EAAAh2B,KAAA0hC,MAEAzkB,EAAA,MACAmkB,EAAA,KAOA,OAFApB,KAEAtuB,EAAAiwB,sBAAA3L,GAKA,QAAA4L,KACA,GAAAxC,GAAA1tB,EAAA,GAAAzT,EAOA,OALAmhC,GAAAY,IAKAZ,EAAA3xB,OAAA0uB,GAAA4B,eAAAqB,EAAA3xB,OAAA0uB,GAAAkB,gBACAlC,IAAAiE,EAAA7B,OACAuB,EAAAM,EAAAvD,GAAAgG,oBAEAnwB,EAAAowB,cAAA1C,IAGA1tB,EAAAqwB,iBAAA3C,EAAAr7B,OAGA,QAAAi+B,KACA,GAAA5C,GAAA58B,EAAAizB,EAAA1xB,EAAA2N,EAAA,GAAAzT,EAIA,OAFAmhC,GAAAJ,GAEAI,EAAA3xB,OAAA0uB,GAAA3G,YACAC,EAAAmM,IACAR,EAAA,KACAr9B,EAAA29B,KACAhwB,EAAAuwB,eAAA,OAAAxM,EAAA1xB,IAEAq7B,EAAA3xB,OAAA0uB,GAAAyD,KAAAR,EAAA3xB,OAAA0uB,GAAAgB,YAGA36B,EAAAo/B,IACAR,EAAA,KACAr9B,EAAA29B,KACAhwB,EAAAuwB,eAAA,OAAAz/B,EAAAuB,QALA88B,GAAAzB,GASA,QAAA8C,KACA,GAAApxB,GAAA9P,EAAAwB,EAAA2/B,EAAAvL,KAAA9zB,KAAAqe,EAAAD,OAAAxP,EAAA,GAAAzT,EAIA,KAFAmjC,EAAA,MAEAnkB,EAAA,MACAnM,EAAAkxB,IAGAhhC,EADA8P,EAAAtO,IAAAiL,OAAA20B,GAAA5M,WACA1kB,EAAAtO,IAAAxB,KAEAmgB,EAAArQ,EAAAtO,IAAAuB,OAEAo+B,EAAA,SAAArxB,EAAAqxB,KAAAE,GAAAC,KAAA,QAAAxxB,EAAAqxB,KAAAE,GAAAE,IAAAF,GAAAG,IAEAhgC,EAAA,IAAAxB,EACAogB,OAAA/e,UAAAwE,eAAArJ,KAAAsF,EAAAN,IACAM,EAAAN,KAAA6/B,GAAAC,KACAnH,IAAAgH,IAAAE,GAAAC,KACAxD,KAAAjD,GAAA4G,yBACAN,IAAAE,GAAAC,MACAxD,KAAAjD,GAAA6G,sBAGAP,IAAAE,GAAAC,KACAxD,KAAAjD,GAAA6G,sBACA5/B,EAAAN,GAAA2/B,GACArD,KAAAjD,GAAA8G,gBAGA7/B,EAAAN,IAAA2/B,GAEAr/B,EAAAN,GAAA2/B,EAGAvL,EAAA52B,KAAA8Q,GAEAmM,EAAA,MACAokB,EAAA,IAMA,OAFAD,GAAA,KAEA1vB,EAAAkxB,uBAAAhM,GAKA,QAAAiM,KACA,GAAAC,EAUA,OARA1B,GAAA,OAEA2B,GAAAC,iBAEAF,EAAAG,KAEA7B,EAAA,KAEA0B,EAQA,QAAAI,KACA,GAAAz1B,GAAA2xB,EAAA0D,EAAApxB,CAEA,IAAAuL,EAAA,KACA,MAAA4lB,IAGA,IAAA5lB,EAAA,KACA,MAAAwkB,IAGA,IAAAxkB,EAAA,KACA,MAAAilB,IAMA,IAHAz0B,EAAAuxB,GAAAvxB,KACAiE,EAAA,GAAAzT,GAEAwP,IAAA0uB,GAAA3G,YAAA2N,GAAAnE,GAAAj7B,OACA++B,EAAApxB,EAAAqwB,iBAAA/B,IAAAj8B,WACA,IAAA0J,IAAA0uB,GAAA4B,eAAAtwB,IAAA0uB,GAAAkB,eACAlC,IAAA6D,GAAAzB,OACAuB,EAAAE,GAAAnD,GAAAgG,oBAEAiB,EAAApxB,EAAAowB,cAAA9B,SACA,CAAA,GAAAvyB,IAAA0uB,GAAAC,QACA,KAAA,IAAA/+B,OAAA,YACAoQ,KAAA0uB,GAAAG,gBACA8C,EAAAY,IACAZ,EAAAr7B,MAAA,SAAAq7B,EAAAr7B,MACA++B,EAAApxB,EAAAowB,cAAA1C,IACA3xB,IAAA0uB,GAAAE,aACA+C,EAAAY,IACAZ,EAAAr7B,MAAA,KACA++B,EAAApxB,EAAAowB,cAAA1C,IACAniB,EAAA,MAAAA,EAAA,OAEA6lB,EAAApxB,EAAAowB,cADA,mBAAAhF,IAAAG,OACAiC,IAEAH,KAEAxZ,KAEAsb,EAAAb,KAGA,MAAA8C,GAKA,QAAAM,KACA,GAAAz7B,KAIA,IAFAy5B,EAAA,MAEAnkB,EAAA,KACA,KAAAxf,GAAAwJ,KACAU,EAAA3H,KAAA0hC,OACAzkB,EAAA,OAGAokB,EAAA,IAMA,OAFAD,GAAA,KAEAz5B,EAGA,QAAA07B,MACA,GAAAjE,GAAA1tB,EAAA,GAAAzT,EAQA,OANAmhC,GAAAY,IAEAT,EAAAH,IACAyB,EAAAzB,GAGA1tB,EAAAqwB,iBAAA3C,EAAAr7B,OAGA,QAAAu/B,MAGA,MAFAlC,GAAA,KAEAiC,KAGA,QAAAE,MACA,GAAAT,EAQA,OANA1B,GAAA,KAEA0B,EAAAG,KAEA7B,EAAA,KAEA0B,EAGA,QAAAU,MACA,GAAAV,GAAAn7B,EAAAmJ,EAAAsvB,EAAAqD,EAAAV,GAAAW,OAMA,KAJAtD,EAAApB,GACA+D,GAAAW,SAAA,EACAZ,EAAAI,MAGA,GAAAjmB,EAAA,KACAnM,EAAAwyB,KACAR,EAAA,GAAAzC,GAAAD,GAAAuD,uBAAA,IAAAb,EAAAhyB,OACA,IAAAmM,EAAA,KACAtV,EAAAy7B,IACAN,EAAA,GAAAzC,GAAAD,GAAAwD,qBAAAd,EAAAn7B,OACA,CAAA,IAAAsV,EAAA,KAIA,KAHAnM,GAAAyyB,KACAT,EAAA,GAAAzC,GAAAD,GAAAuD,uBAAA,IAAAb,EAAAhyB,GAOA,MAFAiyB,IAAAW,QAAAD,EAEAX,EA0BA,QAAAe,MACA,GAAAf,EAIA,IAFAA,EAAAU,KAEAxE,GAAAvxB,OAAA0uB,GAAAgB,aACAlgB,EAAA,OAAAA,EAAA,SAAAqjB,IACA,KAAA,IAAAjjC,OAAA,YAIA,OAAAylC,GAKA,QAAAgB,MACA,GAAA1E,GAAA0D,EAAA1C,CAEA,IAAApB,GAAAvxB,OAAA0uB,GAAAgB,YAAA6B,GAAAvxB,OAAA0uB,GAAAC,QACA0G,EAAAe,SACA,CAAA,GAAA5mB,EAAA,OAAAA,EAAA,MACA,KAAA,IAAA5f,OAAA,YACA,IAAA4f,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,KACAmjB,EAAApB,GACAI,EAAAY,IACA8C,EAAAgB,KACAhB,EAAA,GAAAzC,GAAAD,GAAA2D,sBAAA3E,EAAAr7B,MAAA++B,OACA,CAAA,GAAAxB,EAAA,WAAAA,EAAA,SAAAA,EAAA,UACA,KAAA,IAAAjkC,OAAA,YAEAylC,GAAAe,MAGA,MAAAf,GAGA,QAAAkB,IAAA5E,EAAAsE,GACA,GAAAO,GAAA,CAEA,IAAA7E,EAAA3xB,OAAA0uB,GAAAgB,YAAAiC,EAAA3xB,OAAA0uB,GAAAC,QACA,MAAA,EAGA,QAAAgD,EAAAr7B,OACA,IAAA,KACAkgC,EAAA,CACA,MAEA,KAAA,KACAA,EAAA,CACA,MAEA,KAAA,IACAA,EAAA,CACA,MAEA,KAAA,IACAA,EAAA,CACA,MAEA,KAAA,IACAA,EAAA,CACA,MAEA,KAAA,KACA,IAAA,KACA,IAAA,MACA,IAAA,MACAA,EAAA,CACA,MAEA,KAAA,IACA,IAAA,IACA,IAAA,KACA,IAAA,KACA,IAAA,aACAA,EAAA,CACA,MAEA,KAAA,KACAA,EAAAP,EAAA,EAAA,CACA,MAEA,KAAA,KACA,IAAA,KACA,IAAA,MACAO,EAAA,CACA,MAEA,KAAA,IACA,IAAA,IACAA,EAAA,CACA,MAEA,KAAA,IACA,IAAA,IACA,IAAA,IACAA,EAAA,GAOA,MAAAA,GAWA,QAAAC,MACA,GAAAC,GAAAC,EAAAtB,EAAA1D,EAAA6E,EAAAI,EAAAvb,EAAAoN,EAAArN,EAAAzrB,CAOA,IALA+mC,EAAAnF,GACAnW,EAAAib,KAEA1E,EAAAJ,GACAiF,EAAAD,GAAA5E,EAAA2D,GAAAW,SACA,IAAAO,EACA,MAAApb,EAUA,KARAuW,EAAA6E,KAAAA,EACAjE,IAEAoE,GAAAD,EAAAnF,IACAlW,EAAAgb,KAEAO,GAAAxb,EAAAuW,EAAAtW,IAEAmb,EAAAD,GAAAhF,GAAA+D,GAAAW,UAAA,GAAA,CAGA,KAAAW,EAAA5mC,OAAA,GAAAwmC,GAAAI,EAAAA,EAAA5mC,OAAA,GAAAwmC,MACAnb,EAAAub,EAAAjgB,MACA8R,EAAAmO,EAAAjgB,MAAArgB,MACA8kB,EAAAwb,EAAAjgB,MACAggB,EAAAhgB,MACA0e,EAAA,GAAAzC,GAAA+D,EAAAA,EAAA3mC,OAAA,IAAA6mC,uBAAApO,EAAArN,EAAAC,GACAub,EAAArkC,KAAA8iC,EAIA1D,GAAAY,IACAZ,EAAA6E,KAAAA,EACAI,EAAArkC,KAAAo/B,GACAgF,EAAApkC,KAAAg/B,IACA8D,EAAAgB,KACAO,EAAArkC,KAAA8iC,GAOA,IAHA1lC,EAAAinC,EAAA5mC,OAAA,EACAqlC,EAAAuB,EAAAjnC,GACAgnC,EAAAhgB,MACAhnB,EAAA,GACA0lC,EAAA,GAAAzC,GAAA+D,EAAAhgB,OAAAkgB,uBAAAD,EAAAjnC,EAAA,GAAA2G,MAAAsgC,EAAAjnC,EAAA,GAAA0lC,GACA1lC,GAAA,CAGA,OAAA0lC,GAKA,QAAAyB,MACA,GAAAzB,GAAAW,EAAAjN,EAAAC,EAAA2J,CAkBA,OAhBAA,GAAApB,GAEA8D,EAAAoB,KAEAjnB,EAAA,OACA+iB,IACAyD,EAAAV,GAAAW,QACAX,GAAAW,SAAA,EACAlN,EAAAkL,KACAqB,GAAAW,QAAAD,EACArC,EAAA,KACA3K,EAAAiL,KAEAoB,EAAA,GAAAzC,GAAAD,GAAAoE,4BAAA1B,EAAAtM,EAAAC,IAGAqM,EAKA,QAAApB,MACA,GAAA+C,GAAArF,EAAA0D,EAAA1C,CASA,OAPAqE,GAAA1B,GAAAC,iBAEA5C,EAAApB,GACAI,EAAAJ,GAEA8D,EAAAyB,KAOA,QAAAtB,MACA,GAAAH,EAIA,IAFAA,EAAApB,KAEAzkB,EAAA,KACA,KAAA,IAAA5f,OAAA,YAGA,OAAAylC,GAKA,QAAA4B,IAAAhzB,GACA,GAAAoxB,GAAAG,IAEA,OADAzB,KACA9vB,EAAAizB,0BAAA7B,GAKA,QAAA8B,MACA,GACA9B,GAGApxB,EAJAjE,EAAAuxB,GAAAvxB,IAUA,IAJAA,IAAA0uB,GAAAyD,KACAiB,EAAA7B,IAGAvxB,IAAA0uB,GAAAgB,YAAA,MAAA6B,GAAAj7B,MACA,KAAA,IAAA1G,OAAA,YAKA,IAFAqU,EAAA,GAAAzT,GAEAwP,IAAA0uB,GAAAgB,WACA,OAAA6B,GAAAj7B,OACA,IAAA,IACA,KAAA,IAAA1G,OAAA,YACA,KAAA,IACA,MAAAqnC,IAAAhzB,OAIA,IAAAjE,IAAA0uB,GAAAC,QACA,KAAA,IAAA/+B,OAAA,YAKA,OAFAylC,GAAAG,KACAzB,IACA9vB,EAAAizB,0BAAA7B,GAKA,QAAA+B,MACA,GAAA7F,GAAAvxB,OAAA0uB,GAAAC,QACA,OAAA4C,GAAAj7B,OACA,IAAA,QACA,IAAA,MACA,KAAA,IAAA1G,OAAA,YACA,KAAA,WACA,KAAA,IAAAA,OAAA,YACA,SACA,MAAAunC,MAIA,MAAA5F,IAAAvxB,OAAA0uB,GAAAyD,IACAgF,KADA,OAKA,QAAAE,MAGA,IAFA,GAAAC,GAAA3F,EAAA4F,EAAAC,EAAAC,KAEAznC,GAAAwJ,KACAm4B,EAAAJ,GACAI,EAAA3xB,OAAA0uB,GAAA4B,iBAIAgH,EAAAF,KACAK,EAAAllC,KAAA+kC,GACAA,EAAAhO,WAAAtpB,OAAA20B,GAAA7M,UAIAyP,EAAAtoB,GAAArT,MAAA+1B,EAAArzB,MAAA,EAAAqzB,EAAA7C,IAAA,GACA,eAAAyI,GACA7J,IAAA,EACA8J,GACAnG,EAAAmG,EAAApJ,GAAAgG,sBAGAoD,GAAA7F,EAAA7B,QACA0H,EAAA7F,EAKA,MAAA3hC,GAAAwJ,KACA89B,EAAAF,KACA,mBAAAE,KAGAG,EAAAllC,KAAA+kC,EAEA,OAAAG,GAGA,QAAAC,MACA,GAAAlwB,GAAAvD,CAQA,OANA0pB,KACA7V,IACA7T,EAAA,GAAAzT,GACAk9B,IAAA,EAEAlmB,EAAA6vB,KACApzB,EAAA0zB,cAAAnwB,GAGA,QAAAowB,MACA,GAAAjoC,GAAA0iC,EAAAV,EAAAnC,IAEA,KAAA7/B,EAAA,EAAAA,EAAA0/B,GAAAG,OAAAx/B,SAAAL,EACA0iC,EAAAhD,GAAAG,OAAA7/B,GACAgiC,GACA3xB,KAAAqyB,EAAAryB,KACA1J,MAAA+7B,EAAA/7B,OAEA+7B,EAAAhjB,QACAsiB,EAAAtiB,OACAoB,QAAA4hB,EAAAhjB,MAAAoB,QACA+f,MAAA6B,EAAAhjB,MAAAmhB,QAGAnB,GAAAhvB,QACAsxB,EAAAtxB,MAAAgyB,EAAAhyB,OAEAgvB,GAAAqC,MACAC,EAAAD,IAAAW,EAAAX,KAEAlC,EAAAj9B,KAAAo/B,EAGAtC,IAAAG,OAAAA,EAGA,QAAAF,IAAAz/B,EAAA8P,GACA,GAAA+T,GACA8b,CAEA9b,GAAAD,OACA,gBAAA5jB,IAAAA,YAAA4jB,UACA5jB,EAAA6jB,EAAA7jB,IAGAof,GAAApf,EACA2J,GAAA,EACAq0B,GAAA5e,GAAAjf,OAAA,EAAA,EAAA,EACA89B,GAAA,EACA99B,GAAAif,GAAAjf,OACAuhC,GAAA,KACA+D,IACAW,SAAA,EACA4B,YACAC,gBAAA,EACAC,aAAA,EACAC,UAAA,EACAC,iBAAA,IAGA5I,MAGA1vB,EAAAA,MAGAA,EAAA6vB,QAAA,EACAH,GAAAG,UACAH,GAAAC,UAAA,EAEAD,GAAAE,eAAA,GACAF,GAAAI,eAAA,GAEAJ,GAAAhvB,MAAA,iBAAAV,GAAAU,OAAAV,EAAAU,MACAgvB,GAAAqC,IAAA,iBAAA/xB,GAAA+xB,KAAA/xB,EAAA+xB,IAEA,iBAAA/xB,GAAAu4B,UAAAv4B,EAAAu4B,WACA7I,GAAA8D,UAGA,KAEA,GADArb,IACAyZ,GAAAvxB,OAAA0uB,GAAAyD,IACA,MAAA9C,IAAAG,MAIA,KADA+C,IACAhB,GAAAvxB,OAAA0uB,GAAAyD,KACA,IACAI,IACA,MAAA4F,GACA,GAAA9I,GAAA8D,OAAA,CACA9D,GAAA8D,OAAA5gC,KAAA4lC,EAGA,OAEA,KAAAA,GAKAP,KACApI,EAAAH,GAAAG,OACA,mBAAAH,IAAA8D,SACA3D,EAAA2D,OAAA9D,GAAA8D,QAEA,MAAAjkC,GACA,KAAAA,GACA,QACAmgC,MAEA,MAAAG,GAGA,QAAA/+B,IAAAZ,EAAA8P,GACA,GAAAy4B,GAAA1kB,CAEAA,GAAAD,OACA,gBAAA5jB,IAAAA,YAAA4jB,UACA5jB,EAAA6jB,EAAA7jB,IAGAof,GAAApf,EACA2J,GAAA,EACAq0B,GAAA5e,GAAAjf,OAAA,EAAA,EAAA,EACA89B,GAAA,EACA99B,GAAAif,GAAAjf,OACAuhC,GAAA,KACA+D,IACAW,SAAA,EACA4B,YACAtC,iBAAA,EACAuC,gBAAA,EACAC,aAAA,EACAC,UAAA,EACAC,iBAAA,IAGA5I,MACA,mBAAA1vB,KACA0vB,GAAAhvB,MAAA,iBAAAV,GAAAU,OAAAV,EAAAU,MACAgvB,GAAAqC,IAAA,iBAAA/xB,GAAA+xB,KAAA/xB,EAAA+xB,IAEArC,GAAAqC,KAAA,OAAA/xB,EAAAsP,QAAA9S,SAAAwD,EAAAsP,SACAogB,GAAApgB,OAAAyE,EAAA/T,EAAAsP,SAGA,iBAAAtP,GAAA6vB,QAAA7vB,EAAA6vB,SACAH,GAAAG,WAEA,iBAAA7vB,GAAAu4B,UAAAv4B,EAAAu4B,WACA7I,GAAA8D,WAIA,KACAiF,EAAAV,KACA,mBAAArI,IAAAG,SACAoI,KACAQ,EAAA5I,OAAAH,GAAAG,QAEA,mBAAAH,IAAA8D,SACAiF,EAAAjF,OAAA9D,GAAA8D,QAEA,MAAAjkC,GACA,KAAAA,GACA,QACAmgC,MAGA,MAAA+I,GAnxEA,GAAA1J,IACA4D,GACAqC,GACAC,GACAxG,GACAlB,GACAje,GACAye,GACAl0B,GACAq0B,GACAC,GACA99B,GACAuhC,GACA+D,GACAjG,EAEAX,KACAG,eAAA,EACAsD,IAAA,EACApK,WAAA,EACA4G,QAAA,EACAC,YAAA,EACAgB,eAAA,EACAF,WAAA,EACAY,cAAA,EACAkB,kBAAA,GAGAc,MACAA,GAAA5D,GAAAG,gBAAA,UACAyD,GAAA5D,GAAAyD,KAAA,QACAG,GAAA5D,GAAA3G,YAAA,aACAuK,GAAA5D,GAAAC,SAAA,UACA2D,GAAA5D,GAAAE,aAAA,OACA0D,GAAA5D,GAAAkB,gBAAA,UACA0C,GAAA5D,GAAAgB,YAAA,aACA4C,GAAA5D,GAAA4B,eAAA,SACAgC,GAAA5D,GAAA8C,mBAAA,oBAEAmD,IACA0D,qBAAA,uBACA/P,gBAAA,kBACAE,iBAAA,mBACAJ,eAAA,iBACAU,sBAAA,wBACAO,oBAAA,sBACAtB,WAAA,aACAD,QAAA,UACAmB,kBAAA,oBACAf,iBAAA,mBACAgB,iBAAA,mBACAjB,QAAA,UACAmB,SAAA,WACAV,gBAAA,kBACAE,iBAAA,oBAGAgM,IACAC,KAAA,EACAC,IAAA,EACAC,IAAA,GAIA3G,IACAC,gBAAA,sBACAiF,iBAAA,oBACAC,iBAAA,oBACAC,qBAAA,wBACAC,mBAAA,2BACAJ,cAAA,0BACAiF,kBAAA,8BACA1H,cAAA,6BACAM,mBAAA,wCACAqH,uBAAA,uCACAC,kBAAA,mCACAC,yBAAA,mDACAC,iBAAA,qCACAC,aAAA,uBACAC,cAAA,oCACAC,gBAAA,6BACAC,aAAA,0BACAC,cAAA,2BACAC,eAAA,oDACAC,oBAAA,6DACAC,cAAA,4DACAC,gBAAA,iEACAC,gBAAA,8DACAC,mBAAA,4DACAjF,mBAAA,iDACAkF,aAAA,sDACAtE,wBAAA,uEACAC,qBAAA,4EACAC,eAAA,4EACAqE,oBAAA,gEACAC,iBAAA,oFACAC,gBAAA,mFACA/F,mBAAA,8CAIAxG,IACAC,wBAAA,GAAA0D,QAAA,g6BACAvD,uBAAA,GAAAuD,QAAA,gmCAsnCA+B,EAAAh+B,UAAApE,EAAAoE,WAEA8kC,OAAA,WACArK,GAAAhvB,QACArR,KAAAqR,MAAA,GAAA7G,IAEA61B,GAAAqC,MACA1iC,KAAA0iC,IAAA5C,IAAA,GAAA0D,GACAnD,GAAApgB,SACAjgB,KAAA0iC,IAAAziB,OAAAogB,GAAApgB,UAKAilB,sBAAA,SAAA3L,GAIA,MAHAv5B,MAAAgR,KAAA20B,GAAArM,gBACAt5B,KAAAu5B,SAAAA,EACAv5B,KAAA0qC,SACA1qC,MAGA2qC,2BAAA,SAAAlR,EAAArN,EAAAC,GAMA,MALArsB,MAAAgR,KAAA20B,GAAA0D,qBACArpC,KAAAy5B,SAAAA,EACAz5B,KAAAosB,KAAAA,EACApsB,KAAAqsB,MAAAA,EACArsB,KAAA0qC,SACA1qC,MAGA6nC,uBAAA,SAAApO,EAAArN,EAAAC,GAMA,MALArsB,MAAAgR,KAAA,OAAAyoB,GAAA,OAAAA,EAAAkM,GAAA1L,kBAAA0L,GAAAnM,iBACAx5B,KAAAy5B,SAAAA,EACAz5B,KAAAosB,KAAAA,EACApsB,KAAAqsB,MAAAA,EACArsB,KAAA0qC,SACA1qC,MAGAmnC,qBAAA,SAAA9N,EAAAnuB,GAKA,MAJAlL,MAAAgR,KAAA20B,GAAAvM,eACAp5B,KAAAq5B,OAAAA,EACAr5B,KAAAoL,UAAAF,EACAlL,KAAA0qC,SACA1qC,MAGA+nC,4BAAA,SAAApyB,EAAAokB,EAAAC,GAMA,MALAh6B,MAAAgR,KAAA20B,GAAA7L,sBACA95B,KAAA2V,KAAAA,EACA3V,KAAA+5B,WAAAA,EACA/5B,KAAAg6B,UAAAA,EACAh6B,KAAA0qC,SACA1qC,MAGAkoC,0BAAA,SAAA5N,GAIA,MAHAt6B,MAAAgR,KAAA20B,GAAAtL,oBACAr6B,KAAAs6B,WAAAA,EACAt6B,KAAA0qC,SACA1qC,MAGAslC,iBAAA,SAAA/gC,GAIA,MAHAvE,MAAAgR,KAAA20B,GAAA5M,WACA/4B,KAAAuE,KAAAA,EACAvE,KAAA0qC,SACA1qC,MAGAqlC,cAAA,SAAA1C,GAWA,MAVA3iC,MAAAgR,KAAA20B,GAAA7M,QACA94B,KAAAsH,MAAAq7B,EAAAr7B,MACAtH,KAAAuQ,IAAA0P,GAAArT,MAAA+1B,EAAArzB,MAAAqzB,EAAA7C,KACA6C,EAAAtiB,QACA,MAAArgB,KAAAuQ,MACAvQ,KAAAuQ,IAAA,UAEAvQ,KAAAqgB,MAAAsiB,EAAAtiB,OAEArgB,KAAA0qC,SACA1qC,MAGAknC,uBAAA,SAAA16B,EAAAnF,EAAAgN,GAMA,MALArU,MAAAgR,KAAA20B,GAAAzM,iBACAl5B,KAAAm5B,SAAA,MAAA3sB,EACAxM,KAAAqH,OAAAA,EACArH,KAAAqU,SAAAA,EACArU,KAAA0qC,SACA1qC,MAGAmmC,uBAAA,SAAAhM,GAIA,MAHAn6B,MAAAgR,KAAA20B,GAAAzL,iBACAl6B,KAAAm6B,WAAAA,EACAn6B,KAAA0qC,SACA1qC,MAGA2oC,cAAA,SAAAnwB,GAIA,MAHAxY,MAAAgR,KAAA20B,GAAA1M,QACAj5B,KAAAwY,KAAAA,EACAxY,KAAA0qC,SACA1qC,MAGAwlC,eAAA,SAAAE,EAAA3/B,EAAAuB,GAMA,MALAtH,MAAAgR,KAAA20B,GAAAvL,SACAp6B,KAAA+F,IAAAA,EACA/F,KAAAsH,MAAAA,EACAtH,KAAA0lC,KAAAA,EACA1lC,KAAA0qC,SACA1qC,MAGAsnC,sBAAA,SAAA7N,EAAAE,GAMA,MALA35B,MAAAgR,KAAA,OAAAyoB,GAAA,OAAAA,EAAAkM,GAAA/L,iBAAA+L,GAAAjM,gBACA15B,KAAAy5B,SAAAA,EACAz5B,KAAA25B,SAAAA,EACA35B,KAAA65B,QAAA,EACA75B,KAAA0qC,SACA1qC,MAkTA,IAAA0mC,KAAAxJ,KAAA,EAAAl9B,OAAA,EA6oBA,QACAsgC,SAAAA,GACA7+B,MAAAA,YzC2pJMmpC,IAAI,SAASlqC,EAAQjB,EAAOD,G0C58NlC,QAAAqrC,GAAA1f,EAAAzpB,EAAAmpC,EAAAC,IACAppC,OAAAyK,QAAA,SAAA4+B,EAAAvgC,GACAqgC,EAAArgC,GAAAqgC,EAAArgC,IAAAwgC,EAAA7f,GACA8f,EAAAF,EAAAvgC,EAAAqgC,EAAArgC,GAAAsgC,KAIA,QAAAG,GAAAF,EAAAvgC,EAAAygC,EAAAH,GAEA39B,SAAA49B,EAAAG,OACAD,EAAAC,MAAAJ,EAAAI,MAAAH,EAAAG,QAIAD,EAAAE,OAAAJ,EAAAI,QAAAC,EAAAL,EAAA/5B,OAEAi6B,EAAAvqB,OAAAqqB,EAAArqB,QAAA,GAEAuqB,EAAAI,MAAAN,EAAAM,OAAA,SAEAJ,EAAAK,KAAAP,EAAAO,OAAA,GAEAL,EAAAxnC,MAAAsnC,EAAAtnC,OAAA,MAEAwnC,EAAAM,YAAA,MAAAR,EAAAQ,YACAR,EAAAQ,YAAAxpC,EAAAkpC,KAAAM,aAEAN,EAAAO,WAAAT,EAAAphC,QAAA,MAEAshC,EAAAQ,WAAAV,EAAAh4B,QAAA,MAEAk4B,EAAAS,cAAAX,EAAAY,WAAA,GAEAV,EAAAW,YAAAb,EAAAa,aAAA7pC,EAAAkpC,KAAAja,QAGA,IAAA/H,KACA,IAAA9b,SAAA49B,EAAAc,SACA,IAAA,GAAAlrC,GAAA,EAAA,EAAAA,IAAAA,EAAAsoB,EAAA1lB,KAAAwnC,EAAAc,cACA,CACA,GAAAC,GAAA/pC,EAAAkpC,KAAAY,QACA5iB,IAAA6iB,EAAAA,EAAAA,GAUA,GARA,MAAAf,EAAAgB,gBAAA9iB,EAAA,GAAA8hB,EAAAgB,eACA,MAAAhB,EAAAiB,gBAAA/iB,EAAA,GAAA8hB,EAAAiB,eACA,MAAAjB,EAAAkB,cAAAhjB,EAAA,GAAA8hB,EAAAkB,aACAhjB,EAAAjoB,QACAiqC,EAAAY,SAAAjnB,MAAAqmB,EAAAhiB,GAIA,MAAA8hB,EAAAmB,MAAA,CACA,GAAAA,GAAAzxB,EAAAtV,QAAA4lC,EAAAmB,OAAAnB,EAAAmB,OAAAnB,EAAAmB,MACAjB,GAAAiB,MAAAtnB,MAAAqmB,EAAAiB,OAEAjB,GAAAiB,MAAAnqC,EAAAkpC,KAAAiB,MAIA,IAAAtwB,GAAAmvB,EAAA5Q,UACAve,IAAAA,EAAAswB,OACAjB,EAAAkB,oBAAAvwB,EAAAwwB,WACA3xB,EAAA9O,UAAAiQ,EAAAswB,MAAAtwB,EAAAwwB,YAAAxwB,EAAAswB,OACAjB,EAAAoB,oBAAAzwB,EAAA0wB,WACA7xB,EAAA9O,UAAAiQ,EAAAswB,MAAAtwB,EAAA0wB,YAAA1wB,EAAAswB,SAEAjB,EAAAkB,oBAAAvwB,GAAAA,EAAAwwB,gBACAnB,EAAAoB,oBAAAzwB,GAAAA,EAAA0wB,iBAEArB,EAAAsB,oBAAA3wB,GAAAA,EAAA4wB,YACAvB,EAAAwB,gBAAA7wB,GAAAA,EAAAnY,WACAwnC,EAAAyB,mBAAA9wB,GAAAA,EAAA0vB,UACAL,EAAA0B,iBAAA/wB,GAAAA,EAAAqvB,UArFA,GAAAxwB,GAAA/Z,EAAA,WACAsqC,EAAAtqC,EAAA,iBACAqB,EAAArB,EAAA,kBAEA0qC,GACA1jC,EAAA,SACAiL,EAAA,OACAoJ,IAAA,MACAuQ,OAAA,SACAF,KAAA,OACAC,MAAA,QA8EA5sB,GAAAD,QAAAqrC,I1C29NG+B,gBAAgB,GAAGna,iBAAiB,IAAI9vB,QAAU,KAAKkqC,IAAI,SAASnsC,EAAQjB,EAAOD,G2CnjOtF,GAAAib,GAAA/Z,EAAA,WACAqB,EAAArB,EAAA,kBACAosC,EAAApsC,EAAA,gBACAqsC,EAAArsC,EAAA,YAEAssC,EAAA,SAAA7hB,EAAAzpB,EAAAoV,GAGA,QAAAm2B,GAAA3mC,GACA,MAAA,UAAAyQ,EAAAvO,GACAuO,EACA0D,EAAA1D,MAAA,mBAAAzQ,EAAAgP,IAAA,IAAAyB,GAEAoU,EAAA3iB,KAAAlC,EAAA/B,MAAAoF,OAAA8Q,EAAA5B,KAAArQ,EAAAlC,EAAAyM,SAEA,MAAA5L,GAAA2P,KATA,GAAA3P,GAAA,CAuBA,QATAzF,OAAAyK,QAAA,SAAA7F,GACAA,EAAAgP,MACAnO,GAAA,EACAsT,EAAA5D,KAAA4D,EAAA9O,QAAA2J,IAAAhP,EAAAgP,KAAAvT,EAAA8U,MAAAo2B,EAAA3mC,KAEA0mC,EAAAE,WAAA/hB,EAAA7kB,KAGA,IAAAa,GAAA3D,WAAAsT,EAAA,GACApV,EAGAsrC,GAAAE,WAAA,SAAA/hB,EAAA7kB,GACA,GAAA6mC,IAAA7mC,EAAA6mC,eAAA9mC,IAAA,SAAAlG,GAAA,MAAA2sC,GAAA3hB,EAAAhrB,KACAkJ,GAAA/C,EAAA8mC,YAAA/mC,IAAA,SAAAM,GAAA,MAAAomC,GAAA5hB,EAAAxkB,EAAAL,KACAwoB,EAAA3D,EAAA3iB,KAAAlC,EAAA/B,KAAA8E,EAAAgC,OAAA8hC,GAWA,OATA7mC,GAAAqD,OACAmlB,EAAAnlB,OAAA8Q,EAAA5B,KAAAvS,EAAAqD,OAAArD,EAAAyM,SACAzM,EAAA2Z,SACA6O,EAAA7O,OAAA3Z,EAAA2Z,QACA8P,QAAAjB,EAAAiB,WACA/rB,YAAA8qB,GACA3D,EAAAhnB,eAAA2qB,EAAAd,WAAA,KAGAc,GAGArvB,EAAAD,QAAAwtC,I3CsjOGva,iBAAiB,IAAI4a,WAAW,GAAGC,eAAe,GAAG3qC,QAAU,KAAK4qC,IAAI,SAAS7sC,EAAQjB,EAAOD,G4CjmOnG,QAAAguC,GAAAC,EAAAllB,GACA,QAAAmlB,KAAA1tC,KAAA2tC,YAAAF,EACAC,EAAA9nC,UAAA2iB,EAAA3iB,UACA6nC,EAAA7nC,UAAA,GAAA8nC,GAGA,QAAAE,GAAAlQ,EAAAmQ,EAAA/J,EAAApjB,EAAAkiB,EAAAC,GACA7iC,KAAA09B,QAAAA,EACA19B,KAAA6tC,SAAAA,EACA7tC,KAAA8jC,MAAAA,EACA9jC,KAAA0gB,OAAAA,EACA1gB,KAAA4iC,KAAAA,EACA5iC,KAAA6iC,OAAAA,EAEA7iC,KAAAuE,KAAA,cAKA,QAAA9C,GAAA8H,GA8HA,QAAAukC,GAAA9nB,GACA,QAAAkd,GAAA6K,EAAAC,EAAAC,GACA,GAAAryB,GAAAgiB,CAEA,KAAAhiB,EAAAoyB,EAAAC,EAAAryB,EAAAA,IACAgiB,EAAAr0B,EAAA2kC,OAAAtyB,GACA,OAAAgiB,GACAmQ,EAAAI,QAAAJ,EAAAnL,OACAmL,EAAAlL,OAAA,EACAkL,EAAAI,QAAA,GACA,OAAAvQ,GAAA,WAAAA,GAAA,WAAAA,GACAmQ,EAAAnL,OACAmL,EAAAlL,OAAA,EACAkL,EAAAI,QAAA,IAEAJ,EAAAlL,SACAkL,EAAAI,QAAA,GAcA,MATAC,MAAApoB,IACAooB,GAAApoB,IACAooB,GAAA,EACAC,IAAAzL,KAAA,EAAAC,OAAA,EAAAsL,QAAA,IAEAjL,EAAAmL,GAAAD,GAAApoB,GACAooB,GAAApoB,GAGAqoB,GAGA,QAAAC,GAAAT,GACAU,GAAAC,KAEAA,GAAAD,KACAA,GAAAC,GACAC,OAGAA,GAAAlrC,KAAAsqC,IAGA,QAAAa,GAAAhR,EAAAmQ,EAAA7nB,GACA,QAAA2oB,GAAAd,GACA,GAAAltC,GAAA,CAYA,KAVAktC,EAAAvhC,KAAA,SAAA7L,EAAA8L,GACA,MAAA9L,GAAAyjC,YAAA33B,EAAA23B,YACA,GACAzjC,EAAAyjC,YAAA33B,EAAA23B,YACA,EAEA,IAIAvjC,EAAAktC,EAAA7sC,QACA6sC,EAAAltC,EAAA,KAAAktC,EAAAltC,GACAktC,EAAA3zB,OAAAvZ,EAAA,GAEAA,IAKA,QAAAiuC,GAAAf,EAAA/J,GACA,QAAA+K,GAAAvuC,GACA,QAAAwuC,GAAAlR,GAAA,MAAAA,GAAAgB,WAAA,GAAAla,SAAA,IAAAqqB,cAEA,MAAAzuC,GACAigB,QAAA,MAAA,QACAA,QAAA,KAAA,OACAA,QAAA,QAAA,OACAA,QAAA,MAAA,OACAA,QAAA,MAAA,OACAA,QAAA,MAAA,OACAA,QAAA,MAAA,OACAA,QAAA,2BAAA,SAAAqd,GAAA,MAAA,OAAAkR,EAAAlR,KACArd,QAAA,wBAAA,SAAAqd,GAAA,MAAA,MAAAkR,EAAAlR,KACArd,QAAA,mBAAA,SAAAqd,GAAA,MAAA,OAAAkR,EAAAlR,KACArd,QAAA,mBAAA,SAAAqd;AAAA,MAAA,MAAAkR,EAAAlR,KAGA,GACAoR,GAAAC,EAAAtuC,EADAuuC,EAAA,GAAAtnC,OAAAimC,EAAA7sC,OAGA,KAAAL,EAAA,EAAAA,EAAAktC,EAAA7sC,OAAAL,IACAuuC,EAAAvuC,GAAAktC,EAAAltC,GAAAujC,WAWA,OARA8K,GAAAnB,EAAA7sC,OAAA,EACAkuC,EAAAtiC,MAAA,EAAA,IAAAqG,KAAA,MACA,OACAi8B,EAAArB,EAAA7sC,OAAA,GACAkuC,EAAA,GAEAD,EAAAnL,EAAA,IAAA+K,EAAA/K,GAAA,IAAA,eAEA,YAAAkL,EAAA,QAAAC,EAAA,UAGA,GAAAE,GAAArB,EAAA9nB,GACA8d,EAAA9d,EAAAzc,EAAAvI,OAAAuI,EAAA2kC,OAAAloB,GAAA,IAMA,OAJA,QAAA6nB,GACAc,EAAAd,GAGA,GAAAD,GACA,OAAAlQ,EAAAA,EAAAkR,EAAAf,EAAA/J,GACA+J,EACA/J,EACA9d,EACAmpB,EAAAvM,KACAuM,EAAAtM,QAIA,QAAAuM,KACA,GAAAC,EAIA,OAFAA,GAAAC,IAKA,QAAAA,KACA,GAAAD,GAAAE,EAAAC,EAAAC,EAAAC,EAAAC,CAoDA,OAlDAN,GAAAb,GACAe,EAAAK,IACAL,IAAAM,GACAL,EAAAM,IACAN,IAAAK,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAiB,EAAAM,EACAvB,OAEAiB,EAAAI,EACA,IAAAG,IAAA1B,EAAA2B,IAEAR,IAAAI,GACAH,EAAAI,IACAJ,IAAAG,GACAF,EAAAL,IACAK,IAAAE,GACAK,GAAAb,EACAE,EAAAY,EAAAZ,EAAAI,GACAN,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,GAEAf,IAAAQ,IACAR,EAAAb,GACAe,EAAAK,IACAL,IAAAM,IACAK,GAAAb,EACAE,EAAAc,EAAAd,IAEAF,EAAAE,GAGAF,EAGA,QAAAO,KACA,GAAAP,GAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAW,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAgHA,OA9GAxB,GAAAb,GACA,KAAAjlC,EAAAq1B,WAAA4P,KACAe,EAAAuB,EACAtC,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAAyC,IAEAxB,IAAAM,GACAL,EAAAM,IACAN,IAAAK,GACAJ,EAAAuB,IACAvB,IAAAI,GACAH,EAAAI,IACAJ,IAAAG,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAmB,EAAAI,EACAvB,OAEAmB,EAAAE,EACA,IAAAG,IAAA1B,EAAA2B,IAEAN,IAAAE,GACAS,EAAAR,IACAQ,IAAAT,GACAU,EAAAS,IACAT,IAAAV,GACAW,EAAAV,IACAU,IAAAX,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAiC,EAAAQ,EACAzC,OAEAiC,EAAAZ,EACA,IAAAG,IAAA1B,EAAA4C,IAEAT,IAAAZ,GACAa,EAAAZ,IACAY,IAAAb,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAmC,EAAAQ,EACA3C,OAEAmC,EAAAd,EACA,IAAAG,IAAA1B,EAAA8C,IAEAT,IAAAd,GACAe,EAAAd,IACAc,IAAAf,GACAgB,EAAAjB,IACAiB,IAAAhB,GACAK,GAAAb,EACAE,EAAA8B,EAAA5B,EAAAc,EAAAM,GACAxB,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,GAEAf,IAAAQ,IACAR,EAAA2B,KAGA3B,EAGA,QAAA2B,KACA,GAAA3B,GAAAE,EAAAC,EAAAC,CAIA,IAFAJ,EAAAb,GACAe,EAAA+B,IACA/B,IAAAM,EAAA,CAGA,GAFAL,KACAC,EAAA8B,IACA9B,IAAAI,EACA,KAAAJ,IAAAI,GACAL,EAAAjsC,KAAAksC,GACAA,EAAA8B,QAGA/B,GAAAY,CAEAZ,KAAAK,GACAK,GAAAb,EACAE,EAAAiC,EAAAjC,EAAAC,GACAH,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,OAGA5B,IAAAa,EACAA,EAAAe,CAYA,OAVAf,KAAAQ,IACAR,EAAAb,GACAe,EAAA+B,IACA/B,IAAAM,IACAK,GAAAb,EACAE,EAAAkC,EAAAlC,IAEAF,EAAAE,GAGAF,EAGA,QAAAiC,KACA,GAAAjC,GAAAE,EAAAC,EAAAC,CAwBA,IAtBAJ,EAAAb,GACAe,EAAAmC,IACAnC,IAAAM,IACAN,EAAAoC,KAEApC,IAAAM,IACAN,EAAAqC,GAEArC,IAAAM,GACAL,EAAAqC,IACArC,IAAAK,GACAK,GAAAb,EACAE,EAAAuC,EAAAvC,EAAAC,GACAH,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,GAEAf,IAAAQ,EAAA,CAUA,GATAR,EAAAb,GACAe,KACAwC,EAAAp8B,KAAApM,EAAA2kC,OAAAM,MACAgB,EAAAjmC,EAAA2kC,OAAAM,IACAA,OAEAgB,EAAAK,EACA,IAAAG,IAAA1B,EAAA0D,IAEAxC,IAAAK,EACA,KAAAL,IAAAK,GACAN,EAAAhsC,KAAAisC,GACAuC,EAAAp8B,KAAApM,EAAA2kC,OAAAM,MACAgB,EAAAjmC,EAAA2kC,OAAAM,IACAA,OAEAgB,EAAAK,EACA,IAAAG,IAAA1B,EAAA0D,QAIAzC,GAAAa,CAEAb,KAAAM,IACAK,GAAAb,EACAE,EAAA0C,EAAA1C,IAEAF,EAAAE,EACAF,IAAAQ,IACAR,EAAAb,GACA,KAAAjlC,EAAAq1B,WAAA4P,KACAe,EAAA2C,EACA1D,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAA6D,IAEA5C,IAAAM,GACAL,EAAAF,IACAE,IAAAK,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAiB,EAAA2C,EACA5D,OAEAiB,EAAAI,EACA,IAAAG,IAAA1B,EAAA+D,IAEA5C,IAAAI,GACAK,GAAAb,EACAE,EAAA+C,EAAA9C,GACAH,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,IAKA,MAAAf,GAGA,QAAAqC,KACA,GAAArC,GAAAE,EAAAC,EAAAC,CAqCA,OAnCAJ,GAAAb,GACA,KAAAjlC,EAAAq1B,WAAA4P,KACAe,EAAAgD,EACA/D,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAAkE,IAEAjD,IAAAM,GACAL,EAAAiD,IACAjD,IAAAK,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAiB,EAAAiD,EACAlE,OAEAiB,EAAAI,EACA,IAAAG,IAAA1B,EAAAqE,IAEAlD,IAAAI,GACAK,GAAAb,EACAE,EAAAqD,EAAApD,GACAH,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,GAGAf,EAGA,QAAAsC,KACA,GAAAtC,GAAAE,EAAAC,EAAAC,CAqCA,OAnCAJ,GAAAb,GACA,KAAAjlC,EAAAq1B,WAAA4P,KACAe,EAAAsD,EACArE,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAAwE,IAEAvD,IAAAM,GACAL,EAAAiD,IACAjD,IAAAK,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAiB,EAAAiD,EACAlE,OAEAiB,EAAAI,EACA,IAAAG,IAAA1B,EAAAqE,IAEAlD,IAAAI,GACAK,GAAAb,EACAE,EAAAwD,EAAAvD,GACAH,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,GAGAf,EAGA,QAAAwC,KACA,GAAAxC,EAiJA,OA/IA9lC,GAAAg2B,OAAAiP,GAAA,KAAAwE,GACA3D,EAAA2D,EACAxE,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAA2E,KAEA5D,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAA0E,IACA7D,EAAA6D,GACA1E,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAA6E,KAEA9D,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAA4E,IACA/D,EAAA+D,GACA5E,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAA+E,KAEAhE,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAA8E,IACAjE,EAAAiE,GACA9E,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAiF,KAEAlE,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAAgF,IACAnE,EAAAmE,GACAhF,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAmF,KAEApE,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAAkF,IACArE,EAAAqE,GACAlF,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAqF,KAEAtE,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAAoF,IACAvE,EAAAuE,GACApF,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAuF,KAEAxE,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAAsF,IACAzE,EAAAyE,GACAtF,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAyF,KAEA1E,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,MAAAwF,IACA3E,EAAA2E,GACAxF,IAAA,KAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAA2F,KAEA5E,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAA0F,IACA7E,EAAA6E,GACA1F,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAA6F,KAEA9E,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAA4F,IACA/E,EAAA+E,GACA5F,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAA+F,KAEAhF,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAA8F,IACAjF,EAAAiF,GACA9F,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAiG,KAEAlF,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,MAAAgG,IACAnF,EAAAmF,GACAhG,IAAA,KAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAmG,KAEApF,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,MAAAkG,IACArF,EAAAqF,GACAlG,IAAA,KAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAqG,KAEAtF,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAAoG,IACAvF,EAAAuF,GACApG,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAuG,KAEAxF,IAAAQ,IACAtmC,EAAAg2B,OAAAiP,GAAA,KAAAsG,IACAzF,EAAAyF,GACAtG,IAAA,IAEAa,EAAAQ,EACA,IAAAG,IAAA1B,EAAAyG,oBAkBA1F,EAGA,QAAAkC,KACA,GAAAlC,GAAAE,EAAAC,EAAAC,CAqCA,OAnCAJ,GAAAb,GACA,KAAAjlC,EAAAq1B,WAAA4P,KACAe,EAAAuB,EACAtC,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAAyC,IAEAxB,IAAAM,GACAL,EAAAiD,IACAjD,IAAAK,GACA,KAAAtmC,EAAAq1B,WAAA4P,KACAiB,EAAAwB,EACAzC,OAEAiB,EAAAI,EACA,IAAAG,IAAA1B,EAAA4C,IAEAzB,IAAAI,GACAK,GAAAb,EACAE,EAAAyF,GAAAxF,GACAH,EAAAE,IAEAf,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,KAGA5B,GAAAa,EACAA,EAAAe,GAGAf,EAGA,QAAAoD,KACA,GAAApD,GAAAE,EAAAC,CAWA,IATAH,EAAAb,GACAe,KACA0F,GAAAt/B,KAAApM,EAAA2kC,OAAAM,MACAgB,EAAAjmC,EAAA2kC,OAAAM,IACAA,OAEAgB,EAAAK,EACA,IAAAG,IAAA1B,EAAA4G,KAEA1F,IAAAK,EACA,KAAAL,IAAAK,GACAN,EAAAhsC,KAAAisC,GACAyF,GAAAt/B,KAAApM,EAAA2kC,OAAAM,MACAgB,EAAAjmC,EAAA2kC,OAAAM,IACAA,OAEAgB,EAAAK,EACA,IAAAG,IAAA1B,EAAA4G,SAIA3F,GAAAa,CAQA,OANAb,KAAAM,IACAK,GAAAb,EACAE,EAAA4F,GAAA5F,IAEAF,EAAAE,EAKA,QAAAO,KACA,GAAAT,GAAAE,CAUA,KARAF,KACA+F,GAAAz/B,KAAApM,EAAA2kC,OAAAM,MACAe,EAAAhmC,EAAA2kC,OAAAM,IACAA,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAA+G,KAEA9F,IAAAM,GACAR,EAAA9rC,KAAAgsC,GACA6F,GAAAz/B,KAAApM,EAAA2kC,OAAAM,MACAe,EAAAhmC,EAAA2kC,OAAAM,IACAA,OAEAe,EAAAM,EACA,IAAAG,IAAA1B,EAAA+G,IAIA,OAAAhG,GA13BA,GAuFAiG,GAvFA3kC,EAAAvF,UAAApK,OAAA,EAAAoK,UAAA,MAEAykC,KAEA0F,GAAAjmC,MAAA8/B,GACAoG,EAAApG,EAEAgB,EAAAP,EACAE,EAAA,IACAE,GAAAj/B,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACAiM,EAAA,SAAA5vC,EAAAoG,GAAA,OAAApG,GAAA8K,OAAA1E,IACA0pC,EAAA,SAAA9vC,GAAA,OAAAA,IACAuwC,EAAA,IACAC,GAAA//B,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACA+M,EAAA,IACAC,GAAAlgC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACAiN,EAAA,IACAC,GAAApgC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACAmN,EAAA,SAAAoE,EAAAC,EAAAn1C,GAAA,OAAA+O,MAAAmmC,EAAA3V,IAAA4V,EAAAC,OAAAp1C,IAEAixC,EAAA,SAAAlxC,EAAAf,GAAA,MAAAe,GAAA0gB,QAAAzhB,EAAAe,GACAmxC,EAAA,SAAAnxC,GAAA,MAAAA,IACAsxC,EAAA,KACAE,EAAA,SAAA3xC,EAAAD,GAAA,OAAA01C,MAAA11C,EAAA21C,OAAA11C,IACA4xC,EAAA,mBACAC,GAAAhhC,KAAA,QAAA1J,MAAA,mBAAA48B,YAAA,oBACA+N,EAAA,SAAA3xC,GAAA,OAAAqwB,OAAArwB,EAAA2S,KAAA,MACAi/B,EAAA,IACAC,GAAAnhC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACAkO,EAAA,IACAC,GAAArhC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACAoO,EAAA,SAAA3rC,GAAA,OAAAd,OAAAc,IACA4rC,EAAA,IACAC,GAAAxhC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACAwO,EAAA,IACAC,GAAA3hC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACA0O,EAAA,SAAAphC,GAAA,OAAAR,KAAA,QAAA1J,MAAAkK,IACAqhC,EAAA,IACAC,GAAA9hC,KAAA,UAAA1J,MAAA,IAAA48B,YAAA,OACA6O,EAAA,SAAA/Z,GAAA,OAAAhoB,KAAA,KAAA1J,MAAA0xB,IACAga,EAAA,YACAC,IAAAjiC,KAAA,UAAA1J,MAAA,YAAA48B,YAAA,eACAgP,GAAA,UACAC,IAAAniC,KAAA,UAAA1J,MAAA,UAAA48B,YAAA,aACAkP,GAAA,QACAC,IAAAriC,KAAA,UAAA1J,MAAA,QAAA48B,YAAA,WACAoP,GAAA,WACAC,IAAAviC,KAAA,UAAA1J,MAAA,WAAA48B,YAAA,cACAsP,GAAA,QACAC,IAAAziC,KAAA,UAAA1J,MAAA,QAAA48B,YAAA,WACAwP,GAAA,UACAC,IAAA3iC,KAAA,UAAA1J,MAAA,UAAA48B,YAAA,aACA0P,GAAA,WACAC,IAAA7iC,KAAA,UAAA1J,MAAA,WAAA48B,YAAA,cACA4P,GAAA,QACAC,IAAA/iC,KAAA,UAAA1J,MAAA,QAAA48B,YAAA,WACA8P,GAAA,aACAC,IAAAjjC,KAAA,UAAA1J,MAAA,aAAA48B,YAAA,gBACAgQ,GAAA,YACAC,IAAAnjC,KAAA,UAAA1J,MAAA,YAAA48B,YAAA,eACAkQ,GAAA,WACAC,IAAArjC,KAAA,UAAA1J,MAAA,WAAA48B,YAAA,cACAoQ,GAAA,YACAC,IAAAvjC,KAAA,UAAA1J,MAAA,YAAA48B,YAAA,eACAsQ,GAAA,aACAC,IAAAzjC,KAAA,UAAA1J,MAAA,aAAA48B,YAAA,gBACAwQ,GAAA,aACAC,IAAA3jC,KAAA,UAAA1J,MAAA,aAAA48B,YAAA,gBACA0Q,GAAA,YACAC,IAAA7jC,KAAA,UAAA1J,MAAA,YAAA48B,YAAA,eACA4Q,GAAA,WACAC,IAAA/jC,KAAA,UAAA1J,MAAA,WAAA48B,YAAA,cACA8Q,GAAA,SAAAn4B,GAAA,MAAAA,IACAo4B,GAAA,4BACAC,IAAAlkC,KAAA,QAAA1J,MAAA,8BAAA48B,YAAA,+BACAiR,GAAA,SAAArvC,GAAA,MAAAA,GAAAmN,KAAA,KACAmiC,GAAA,aACAC,IAAArkC,KAAA,QAAA1J,MAAA,eAAA48B,YAAA,gBAEAsK,GAAA,EACA0B,GAAA,EACA9B,GAAA,EACAC,IAAAzL,KAAA,EAAAC,OAAA,EAAAsL,QAAA,GACAI,GAAA,EACAE,MACAuB,GAAA,CAIA,IAAA,aAAAr/B,GAAA,CACA,KAAAA,EAAAmlC,YAAAP,IACA,KAAA,IAAA30C,OAAA,mCAAA+P,EAAAmlC,UAAA,KAGAN,GAAAD,EAAA5kC,EAAAmlC,WAiyBA,GAFAR,EAAAE,IAEAF,IAAAzF,GAAArB,KAAAjlC,EAAAvI,OACA,MAAAs0C,EAMA,MAJAA,KAAAzF,GAAArB,GAAAjlC,EAAAvI,QACAstC,GAAAt9B,KAAA,MAAAkzB,YAAA,iBAGAwK,EAAA,KAAAD,GAAAF,IAz4BAf,EAAAI,EAAAhtC,OA64BAnB,EAAAD,SACAouC,YAAAA,EACAnsC,MAAAA,Q5C0mOMs0C,IAAI,SAASr1C,EAAQjB,EAAOD,G6ChhQlC,GAAAib,GAAA/Z,EAAA,WACA45B,EAAA55B,EAAA,iBAEA2lC,EAAA,WACA,GAAA5kC,GAAA64B,EAAA74B,MACA22B,EAAAkC,EAAAz5B,MACA43B,aAAA,QAAA,QAAA,IAAA,IAAA,OAGA,OAAA,UAAA4N,GACA,GAAA/+B,GAAA8wB,EAAA32B,EAAA4kC,GAGA,OAFA/+B,GAAAyW,GAAAlR,SAAA,QAAA,QAAA,IAAA,IAAA,KACA,yBAAAvF,EAAAyW,GAAA,MACAzW,KAIA++B,GAAA2P,KAAA,SAAApjB,EAAA7U,EAAAzX,EAAApG,EAAAS,EAAAib,EAAA4Z,GAEA,MADAA,GAAA5C,EAAA/B,aAAApW,EAAApV,MAAAmwB,IACAzX,EAAAhd,KAAA,KAAAuF,EAAApG,EAAAS,EAAAib,EAAA4Z,IAGA/1B,EAAAD,QAAA6mC,I7CmhQG4P,gBAAgB,GAAGtzC,QAAU,KAAKuzC,IAAI,SAASx1C,EAAQjB,EAAOD,G8CziQjE,GAAAib,GAAA/Z,EAAA,WACAqB,EAAArB,EAAA,kBACAuzB,EAAAvzB,EAAA,oBAEAjB,GAAAD,QAAA,SAAA2rB,EAAAzpB,EAAAy0C,GAKA,QAAAlJ,GAAAtsC,GACA,MAAA,UAAAoW,EAAAvO,GACA,GAAAuO,EACA0D,EAAA1D,MAAA,mBAAApW,EAAA2U,SACA,CACA,GAAAy1B,GAAAtwB,EAAAvG,SAAA1L,GAAAA,EAAA4L,KAAA3S,MAAA+G,EACA4tC,GAAAz1C,EAAA4D,KAAAwmC,GAEA,KAAA5jC,GAAAkvC,KAIA,QAAAD,GAAA7xC,EAAAwmC,GACAvV,KAAA8gB,KACAvL,EAAA1b,SAAAA,EAAA9rB,KAAAqhB,MAAAyK,EAAAknB,EAAAhyC,EAAAwmC,EAAA1b,UACA0b,EAAAjd,YAAAA,EAAAvqB,KAAAqhB,MAAAkJ,EAAA0oB,EAAAjyC,EAAAwmC,EAAAjd,aACA2oB,EAAAlyC,EAAAwmC,EAAA5c,OAGA,QAAAkoB,KACA57B,EAAA3S,KAAA4uC,GAAA11C,OAAA,GAAA21C,EAAAj1C,EAAAysB,OACAzsB,EAAA2tB,QAAA5U,EAAApV,MAAA3D,EAAA2tB,SACA3tB,EAAAosB,WAAArT,EAAApV,MAAA3D,EAAAosB,YACApsB,EAAA2tB,QAAAkF,QAAA3P,MAAAljB,EAAA2tB,QAAAA,GACA3tB,EAAAosB,WAAAyG,QAAA3P,MAAAljB,EAAAosB,WAAAA,GACAqoB,IAGA,QAAAQ,GAAAxoB,GACA,GAAAxnB,GAAAtG,EAAAM,EAAAsC,CAGA,KAFAkrB,EAAA1T,EAAApV,MAAA8oB,GAEAxtB,EAAA,EAAAsC,EAAAkrB,EAAAntB,OAAAiC,EAAAtC,EAAAA,IACAgG,EAAAwnB,EAAAxtB,IACAN,EAAAq2C,EAAA/vC,EAAAqK,QACAmd,EAAAxtB,GAAA8Z,EAAAtB,UAAA9Y,GACAsG,EAAAiwC,OAAAzoB,EAAAxtB,GAAAi2C,KAAAjwC,EAAAiwC,MACAjwC,EAAAwzB,aACAlG,EAAA4iB,MAAA5iB,EAAA6iB,OAAA7iB,EAAA8iB,MAAA5qC,QAAA,SAAAyP,GACAuS,EAAAxtB,GAAAw5B,WAAAve,GAAAnB,EAAA9O,OAAAtL,EAAA85B,WAAAve,GAAAjV,EAAAwzB,WAAAve,OAGAjV,EAAAwnB,OACAwoB,EAAAhwC,EAAAwnB,OAKA,QAAA6oB,GAAA52C,EAAAE,GACA,MAAAma,GAAAlU,SAAAjG,GACAA,EAAA,IAAAF,GAEAqa,EAAA3S,KAAAxH,GAAA6L,QAAA,SAAAzE,GACA,GAAA2Y,GAAA,GAAAwhB,QAAA,MAAAn6B,EAAA,MAAA,IACAtH,GAAAA,EAAAmgB,QAAAF,EAAA/f,EAAAoH,MAEAtH,GAIA,QAAAm2C,GAAAhyC,EAAA8qB,GAWA,MAVAA,GAAA5U,EAAApV,MAAAgqB,GAGAA,EAAAljB,QAAA,SAAA7L,GAAAA,EAAAiE,KAAAixB,EAAAl1B,EAAAiE,MAAAyyC,EAAA12C,EAAAiE,KAAAA,KACA8qB,EAAAljB,QAAA,SAAA7L,IACAA,EAAA22C,aAAA9qC,QAAA,SAAAhM,GACAA,EAAA6Q,KAAAgmC,EAAA72C,EAAA6Q,KAAAwkB,GACAr1B,EAAAkmC,KAAA2Q,EAAA72C,EAAAkmC,KAAA7Q,OAGAnG,EAGA,QAAAmnB,GAAAjyC,EAAAupB,GAaA,MAZAA,GAAArT,EAAApV,MAAAyoB,GACAA,EAAA3hB,QAAA,SAAAyP,GACAA,EAAArX,KAAA+xC,EAAA16B,EAAArX,MAAAyyC,EAAAp7B,EAAArX,KAAAA,IAEAqX,EAAAs7B,SAAAt7B,EAAAvK,OAAAlF,QAAA,SAAAzE,IACAA,OAAAyE,QAAA,SAAA5L,GACAA,EAAAowB,OAAApwB,EAAAowB,OAAAqmB,EAAAz2C,EAAAowB,OAAA6E,GACAj1B,EAAA0tB,WAAAkpB,EAAA52C,SAKAutB,EAGA,QAAAqpB,GAAA52C,GACAA,EAAA0tB,UAAAqoB,EAAA/1C,EAAA0tB,WACAxT,EAAA3S,KAAAvH,EAAAgJ,OAAA4C,QAAA,SAAAxE,GACA,GAAAhH,GAAAJ,EAAAgJ,MAAA5B,EACAhH,GAAAgwB,SAAAhwB,EAAAgwB,OAAAqmB,EAAAr2C,EAAAgwB,OAAA6E,MAIA,QAAAihB,GAAAlyC,EAAA4pB,IACAA,OAAAhiB,QAAA,SAAAxF,GACAywC,EAAAzwC,EAAAwzB,WAAAkd,OACAD,EAAAzwC,EAAAwzB,WAAA5K,QACA6nB,EAAAzwC,EAAAwzB,WAAAmd,MACAZ,EAAAM,EAAArwC,EAAApC,KAAAA,IAAAoC,IAIA,QAAAywC,GAAAG,GACA98B,EAAA3S,KAAAyvC,GAAAprC,QAAA,SAAAxE,GACA,GAAAiU,GAAA27B,EAAA5vC,EACAiU,GAAA+U,OAAA/U,EAAA+U,OAAAqmB,EAAAp7B,EAAA+U,OAAA6E,GACA5Z,EAAA47B,MACA57B,EAAA47B,KAAArrC,QAAA,SAAA9L,GACAA,EAAAswB,SAAAtwB,EAAAswB,OAAAqmB,EAAA32C,EAAAswB,OAAA6E,IACAn1B,EAAA4tB,WAAAkpB,EAAA92C,OAtHA,GAAA8G,GAAA,EACAquB,KAAA8gB,KAAAI,KACArnB,KAAAvB,IAkIA,QARApsB,EAAA+1C,iBAAAtrC,QAAA,SAAAxL,GACAA,EAAA2U,MACAnO,GAAA,EACAsT,EAAA5D,KAAA4D,EAAA9O,QAAA2J,IAAA3U,EAAA2U,KAAAvT,EAAA8U,MAAAo2B,EAAAtsC,OAIA,IAAAwG,GAAA3D,WAAA6yC,EAAA,GACA30C,K9C4iQG+wB,iBAAiB,IAAIQ,oBAAoB,IAAItwB,QAAU,KAAK+0C,IAAI,SAASh3C,EAAQjB,EAAOD,G+CrrQ3F,GAAAib,GAAA/Z,EAAA,WACAi3C,EAAAj3C,EAAA,eAEAjB,GAAAD,QAAA,QAAAo4C,GAAAzsB,EAAA0sB,GACA,GAAA5lB,GAAA4lB,EAAA1d,WACA2Q,EAAA+M,EAAA1pB,KAiBA,OAdA1T,GAAA3S,KAAAmqB,GAAA9lB,QAAA,SAAAxE,GACAsqB,EAAAtqB,GAAAgwC,EAAAxsB,EAAA0sB,EAAA7mC,KAAAihB,EAAAtqB,MAIAkwC,EAAAC,QACAD,EAAAC,MAAAH,EAAAxsB,EAAA0sB,EAAA7mC,MAAA8mC,MAAAD,EAAAC,SAIAhN,IACA+M,EAAA1pB,MAAA2c,EAAAzkC,IAAA,SAAAzG,GAAA,MAAAg4C,GAAAzsB,EAAAvrB,MAGAi4C,K/CwrQGE,eAAe,GAAGp1C,QAAU,KAAKq1C,IAAI,SAASt3C,EAAQjB,EAAOD,GgD9sQhE,GAAAo4C,GAAAl3C,EAAA,SAEAjB,GAAAD,QAAA,SAAA2rB,EAAAzpB,EAAAmpB,EAAAC,GACA,OACA9Z,KAAA,QACA6Z,MAAAA,EACAC,OAAAA,EACAiM,OAAAr1B,EAAAq1B,WACA8T,KAAAnpC,EAAAmpC,SAEA1c,OAAAzsB,EAAAysB,WAAA9nB,IAAA,SAAAM,GAAA,MAAAixC,GAAAzsB,EAAAxkB,ShDktQGsxC,SAAS,KAAKC,IAAI,SAASx3C,EAAQjB,EAAOD,GiD5tQ7C,GAAAib,GAAA/Z,EAAA,WACAc,EAAAd,EAAA,oBACAyH,EAAAzH,EAAA,qBACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAEAsc,EAAA,SAAAH,EAAAvV,EAAA0Y,EAAAyU,GACA,IAAA,GAAA9zB,GAAAqf,EAAAhf,OAAA,EAAAL,GAAA,IAAAA,EACAqf,EAAArf,GAAAkc,IAAAvV,GACAmtB,EAAAlxB,KAAAqhB,MAAA6P,EAAAzU,EAAA9F,OAAAvZ,EAAA,IAIAlB,GAAAD,QAAA,SAAA2rB,EAAA4f,EAAAjc,GACA,GAAA6B,GAAAoa,EAAApa,OAAAlW,EAAAoC,MAAAkuB,EAAApa,QAAA,KACAwnB,EAAAxnB,EAAAA,EAAA,GAAA,KACA1C,EAAA8c,EAAA9c,UAAA9C,EAAA8C,UAAA8c,EAAA9c,WAAA,KACAqJ,EAAA,OAAArJ,EACAhZ,EAAA,GAAAzT,GAAA2pB,EA2DA,OAzDAlW,GAAA0a,SAAA,SAAApmB,GACA,GAAA,OAAA0kB,EAAA,CACA,GAAAqH,OACArH,EAAAzlB,UAAA2D,QAAA,SAAA7F,GAAAgvB,EAAAhvB,GAAA6kB,EAAA3iB,KAAAlC,GAAAqD,WAGA2tB,EAAArJ,EAAAltB,KAAAktB,KAAAqH,EAAAnK,EAAA0F,aAAA5C,EAAAoB,aAAAlE,EAAAuC,aAIA,GADAkC,EAAArmB,GAAAwhC,EAAA/5B,KAAA,MAAAsmB,KACAA,EAAA,MAAA/tB,EAEA,IAAAsuB,MACAvwB,EAAAqpB,EAAAxF,EAAAsK,UAAAsV,EAAApa,QAAA,KACArqB,EAAA6kB,EAAA3iB,KAAAsmB,EAAAvqB,MACAyE,EAAA1C,EAAAypB,UAAA,KAAA5iB,OACAhN,EAAA,IAOA,IALA03B,EAAAkT,EAAAluB,OAAAvV,EAKAyjC,EAAA/5B,MAAAijB,EAAAmkB,IACAj4C,EAAAgI,EAAAgsB,OAAA0D,EAAA7uB,GACAO,EAAAX,IAAArF,KAAApD,GACAmG,EAAAusB,MAAAtvB,KAAApD,OACA,IAAA4qC,EAAA/5B,MAAAijB,EAAAokB,OACAr7B,EAAA+tB,EAAAluB,MAAAvV,EAAAiC,EAAAX,IAAAW,EAAAT,KACAkU,EAAA+tB,EAAAluB,MAAAvV,EAAAiC,EAAAF,IAAAE,EAAAT,KACAxC,EAAAusB,MAAAvsB,EAAAusB,MAAA7V,OAAA,SAAAtV,GAAA,MAAAA,GAAAqjC,EAAAluB,SAAAvV,QACA,IAAAyjC,EAAA/5B,MAAAijB,EAAAqkB,OAAA,CACA,GAAA1vC,MAAAE,IACAkU,GAAA+tB,EAAAluB,MAAAvV,EAAAiC,EAAAT,IAAAF,GACAoU,EAAA+tB,EAAAluB,MAAAvV,EAAAiC,EAAAX,IAAAE,GACAkU,EAAA+tB,EAAAluB,MAAAvV,EAAAiC,EAAAF,IAAAP,GACA,GAAAF,EAAA5H,QAAA,GAAA8H,EAAA9H,QAAA4H,EAAArF,KAAA4E,EAAAgsB,OAAA0D,IAEAtuB,EAAAX,IAAArF,KAAAqhB,MAAArb,EAAAX,IAAAA,GACAtC,EAAAusB,MAAAtvB,KAAAqhB,MAAAte,EAAAusB,MAAAjqB,GACAW,EAAAT,IAAAvF,KAAAqhB,MAAArb,EAAAT,IAAAA,GACAxC,EAAAusB,MAAAvsB,EAAAusB,MAAA7V,OAAA,SAAAtV,GAAA,MAAA,KAAAoB,EAAAmO,QAAAvP,SACAqjC,GAAA/5B,MAAAijB,EAAAskB,QACAhvC,EAAAT,IAAAvF,KAAAqhB,MAAArb,EAAAT,IAAAS,EAAAX,KACAW,EAAAT,IAAAvF,KAAAqhB,MAAArb,EAAAT,IAAAS,EAAAF,KACAE,EAAAX,OACAW,EAAAF,OACA/C,EAAAusB,SAIA,OADAtpB,GAAArE,OAAA6lC,EAAAluB,OAAA,EACAtT,GAGA4uC,GAAAljC,EAAAghB,WAAAhC,EAAAkC,QAAAgiB,GACAlqB,GAAAhZ,EAAAghB,WAAAhC,EAAAkC,QAAAlI,EAAAoB,SAEApa,KjD+tQGwZ,mBAAmB,GAAG+pB,oBAAoB,GAAGvlB,oBAAoB,IAAI5F,gBAAgB,IAAI1qB,QAAU,KAAK81C,IAAI,SAAS/3C,EAAQjB,EAAOD,GkD5yQvI,GAAAib,GAAA/Z,EAAA,UAEAjB,GAAAD,QAAA,SAAAid,GACA,GAAA,MAAAA,EAAA,MAAA,MACA,IAAAhC,EAAAlU,SAAAkW,GAAA,MAAA,WAAAA,EAAA,SAAA,MACA,IAAAhC,EAAAvG,SAAAuI,GAAA,MAAAA,EACA,IAAAb,GAAAnB,EAAAZ,SAAA4C,GAAAA,EAAA,EACA,QAAAV,IAAAH,EAAAwQ,KAAAxQ,EAAAyQ,MAAAzQ,EAAA0Q,OAAA1Q,MlD+yQGjZ,QAAU,KAAK+1C,IAAI,SAASh4C,EAAQjB,EAAOD,GmDtzQ9C,GAAAib,GAAA/Z,EAAA,UAEAjB,GAAAD,QAAA,SAAA2rB,EAAAzpB,GAgBA,QAAAi3C,GAAAhoB,EAAAtB,GACA,GAAA/uB,GAAAma,EAAAoC,MAAA8T,GACA9vB,EAAA,WAAAP,EAAA+F,IAAAoU,EAAArO,KAAA6G,KAAA,MAAA,GAEA,OADAoc,GAAA/uB,EAAA6gB,SAAA,EACAtgB,EAGA,QAAA+3C,GAAA1B,GACA,GAAA2B,MAAA9qB,KACAsB,KAAAiG,IA8BA,OA5BA7a,GAAApV,MAAA6xC,GAAA/qC,QAAA,SAAA5L,EAAAI,GACA,GAAA4D,GAAA,IAAA5D,EAAAoqC,EAAA,EAEA,IAAA59B,SAAA5M,EAAA+G,MAAAyjC,EAAAtwB,EAAArO,IAAA7L,EAAA+G,WACA,IAAA/G,EAAAu4C,IAAA/N,EAAA,QAAAtwB,EAAArO,IAAA7L,EAAAu4C,KAAA,QACA,IAAAv4C,EAAAowB,OAAAoa,EAAA4N,EAAAp4C,EAAAowB,OAAAtB,OACA,IAAA9uB,EAAA0tB,UAAA,CACA,GAAA8qB,GAAA5tB,EAAA8C,UAAA1tB,EAAA0tB,WACArS,EAAA,cAAAnB,EAAArO,IAAA7L,EAAA0tB,WAAA,GAEA8qB,GAAA1pB,QAAAljB,QAAA,SAAA7L,GAAA+uB,EAAA/uB,GAAA,IACAy4C,EAAAvwC,KAAA2D,QAAA,SAAA7F,GAAAgvB,EAAAhvB,GAAA,IAEAmU,EAAA3S,KAAAvH,EAAAgJ,OAAA4C,QAAA,SAAAxE,GACA,GAAAhH,GAAAJ,EAAAgJ,MAAA5B,EACAojC,IAAA,QAAAtwB,EAAArO,IAAAzE,GAAA,OACAhH,EAAAgwB,OAAAoa,GAAA4N,EAAAh4C,EAAAgwB,OAAAtB,GACA1uB,EAAAm4C,MAAA/N,GAAA,QAAAtwB,EAAArO,IAAAzL,EAAAm4C,KAAA,KACA/N,GAAA,OAGAA,GAAAnvB,EAAA,SAAAA,EAAA,mCAGAi9B,EAAAt1C,KAAAgB,GACAwpB,EAAAxqB,KAAAgB,EAAA,KAAAwmC,EAAA,QAIAlqC,KAAA,OAAAg4C,EAAA5lC,KAAA,MAAA,MAAA8a,EAAA9a,KAAA,OAAA,MACAoc,QAAA5U,EAAA3S,KAAAunB,GACA7mB,KAAAiS,EAAA3S,KAAAwtB,IAIA,QAAA0jB,GAAAt3C,GACA,GAAA0D,GAAAwzC,EAAAl3C,EAAAw1C,SAGA,OAFA,KAAAx1C,EAAAsP,OAAAtP,EAAAsP,KAAA,OAGAnQ,KAAAuE,EAAAvE,KAAA,WAAA,KAAA,MAAAoS,KAAAvR,EAAAsP,MAAA,IACAqe,QAAAjqB,EAAAiqB,QACA7mB,KAAApD,EAAAoD,MAIA,QAAAywC,GAAAv3C,GAIA,IAHA,GAAA0D,GAAAwzC,EAAAl3C,EAAAw1C,UACA32C,KAAAI,EAAA,EAAAsC,EAAAvB,EAAAw1C,SAAAl2C,OAEAT,EAAAgD,KAAA,IAAA5C,KAAAsC,IAIA,MAHA,OAAAvB,EAAAsP,KAAAtP,EAAAsP,KAAA,KACA,MAAAtP,EAAAsP,OAAAtP,EAAAsP,KAAA,OAGAnQ,KAAAuE,EAAAvE,KAAA,UAAAN,EAAA0S,KAAAvR,EAAAsP,MAAA,IACAqe,QAAAjqB,EAAAiqB,QACA7mB,KAAApD,EAAAoD,MAIA,QAAA0wC,GAAAx3C,GACA,GAAAnB,IAAAmB,EAAA8lB,MAAA3mB,EAAA,EACAa,GAAA2P,OAAA9Q,EAAAgD,KAAAqhB,MAAArkB,EAAAmB,EAAA2P,OACA3P,EAAAwpC,QACArqC,EAAAs4C,EAAAz3C,EAAAwpC,MAAA3qC,GAGA,IAAA6E,GAAAwzC,EAAAr4C,EAGA,IAFAM,EAAAuE,EAAAvE,KAAAA,EAEAa,EAAA8G,KAAA,CACA,GAAAqU,GAAApC,EAAAoC,MAAAnb,EAAAmb,OAAAxW,IAAAoU,EAAArO,IACAvL,IAAA,sCAAAgc,EAAA5J,KAAA,MAAA,eACApS,GAAA,aAAA4Z,EAAArO,IAAA1K,EAAA8G,MAAA,kCACA9G,GAAA2P,QAGA3P,EAAAwpC,QAAArqC,GAAA,sCACAA,GAAA,+DAGA,QACAA,KAAAA,EACAwuB,QAAAjqB,EAAAiqB,QACA7mB,KAAApD,EAAAoD,KAAA6C,OAAA3J,EAAA8G,MAAA9G,EAAA8G,WAKA,QAAA2wC,GAAAz3C,EAAA0D,GACA,GAAAvE,GAAA,eACAgL,EAAAzG,EAAApE,MAwBA,OAtBAyZ,GAAAlU,SAAA7E,IACA0D,EAAA7B,MAAA+D,MAAA5F,IACAb,GAAA,sBAAAgL,EAAA,KACAnK,EAAAo3C,KACA1zC,EAAA7B,KAAA7B,GACAb,GAAA,IAAAgL,GACAnK,EAAA6C,OACAa,EAAA7B,KAAAkX,EAAAlU,SAAA7E,EAAA6C,OAAA+C,MAAA5F,EAAA6C,MAAA7C,EAAA6C,MACA1D,GAAA,qBAAAgL,EAAA,QAAAA,EAAA,MACAnK,EAAA03C,OACAh0C,EAAA7B,KAAA7B,EAAA03C,OACAv4C,GAAA,MAAAgL,EAAA,GAAA,iCAAAA,EAAA,KAEAhL,GAAA,sBAAAgL,EAAA,IAEAhL,GAAA,KAGAa,EAAA23C,UAAA,IACAx4C,GAAA,WAGAA,EAAA,MA9IA,GAAAoL,IACAqtC,IAAAN,EACAO,KAAAP,EACAQ,KAAAR,EACAS,IAAAT,EACAU,KAAAV,EACAW,IAAAX,EACAY,KAAAZ,EACAa,IAAAZ,EACAa,KAAAb,EACAc,GAAAd,EACAe,KAAAf,EACAgB,KAAAf,EA+IA,QAVAx3C,OAAAyK,QAAA,SAAA7L,GACA,GAAAmB,GAAAwK,EAAA3L,EAAA0Q,MAAA1Q,GACAy4C,EAAAlsC,SAAA,OAAA,KAAA,UAAA,aAAApL,EAAAZ,KACAk4C,GAAAjkC,KAAA,WAAA,MAAAqW,GAAAxpB,QAAAmuB,MAAA,IACAipB,EAAAtyC,WAAAgU,EAAAhU,WACAsyC,EAAA1pB,QAAA5tB,EAAA4tB,QACA0pB,EAAAvwC,KAAA/G,EAAA+G,KACA2iB,EAAA8C,UAAA3tB,EAAAiE,KAAAw0C,KAGAr3C,KnDyzQGiB,QAAU,KAAKu3C,IAAI,SAASx5C,EAAQjB,EAAOD,IAC9C,SAAWM,GoDj9QX,QAAAq6C,GAAAhvB,EAAA0sB,EAAAn2C,GACA,GAEAf,GAAAsC,EAAAsB,EAAAmxB,EAFA70B,EAAA,GACA00B,EAAA9a,EAAA3S,KAAApG,GACA04C,KACAljB,GACA7H,WACA0H,UACAvuB,QACAtD,UACA4rB,QAAA,EAKA,KAFAjwB,GAAA,+BAEAF,EAAA,EAAAsC,EAAAsyB,EAAAv0B,OAAAiC,EAAAtC,IAAAA,EACA+0B,EAAAh0B,EAAA6C,EAAAgxB,EAAA50B,IACAE,GAAAF,EAAA,EAAA,OAAA,KACA+0B,EAAA8hB,MACA9hB,EAAA8hB,EAAArsB,EAAA5mB,EAAAmxB,EAAA8hB,MACA32C,GAAA,OAAA60B,EAAA70B,OAEA60B,EAAA2kB,EAAA91C,EAAAmxB,GACA70B,GAAA,mBAAA4Z,EAAArO,IAAA7H,GAAA,KAAAmxB,EAAAxjB,IAAA,MAGAkoC,EAAA71C,IAAA,EACA+1C,EAAAnuC,QAAA,SAAAyP,GACA,MAAA8Z,EAAA9Z,IAAAnB,EAAApV,MAAAqwB,EAAA9Z,IAAAzP,QAAA,SAAAxE,GAAAuvB,EAAAtb,GAAAjU,GAAA,MAEAuvB,EAAApG,OAAAoG,EAAApG,QAAA4E,EAAA5E,MAGAspB,GAAArwB,KACAqwB,EAAA1yC,GACA7G,GAAA,4FAKAA,GAAA,+CAEAA,GADAu5C,EAAAvvB,MACA,8CAEA,mCAIAuvB,EAAApwB,KACAowB,EAAAznC,GACA9R,GAAA,2FAKAA,GAAA,gDAEAA,GADAu5C,EAAAtvB,OACA,+CAEA,mCAIAyvB,EAAA1C,EAAAuC,KAAAv5C,GAAA,qBACAA,GAAA,4CAEA,KACA,GAAA25C,GAAA3tC,SAAA,OAAA,QAAA,QAAA,KACA,UAAA,aAAAhM,EAIA,OAHA25C,GAAAC,IAAAtyC,EACAqyC,EAAAx4C,KAAAyY,EACA+/B,EAAArnC,GAAAA,GAEAunC,OAAAF,EACAnrB,QAAA5U,EAAA3S,KAAAovB,EAAA7H,SACA0H,OAAAtc,EAAA3S,KAAAovB,EAAAH,QACAvuB,KAAAiS,EAAA3S,KAAAovB,EAAA1uB,MACAtD,OAAAuV,EAAA3S,KAAAovB,EAAAhyB,QACA4rB,OAAAoG,EAAApG,QAEA,MAAA5wB,GACAua,EAAA1D,MAAA7W,GACAua,EAAA5L,IAAAhO,IAIA,QAAA05C,GAAA1C,EAAAuC,GACA,MAAAA,GAAAO,OACA,SAAA9C,GAAA,SAAAA,KACAuC,EAAA1yC,GAAA0yC,EAAArwB,IAAAqwB,EAAAvvB,OACAuvB,EAAAznC,GAAAynC,EAAApwB,IAAAowB,EAAAtvB,QACAsvB,EAAAQ,SAAAR,EAAA35B,aAGA,QAAA+2B,GAAArsB,EAAA5mB,EAAAs2C,GACA,GAAAxrB,MAAA0H,KAAAzB,KACAwlB,KAAAj6C,EAAA,EAmCA,QAjCAg6C,OAAA1uC,QAAA,SAAA9L,EAAAM,GACA,GAIA+0B,GAJAqlB,EAAA16C,EAAA4tB,UACA8qB,EAAA5tB,EAAA8C,UAAA8sB,GACAn/B,EAAA,cAAAnB,EAAArO,IAAA2uC,GAAA,IACAxxC,KAAA2B,EAAA3G,EAAA,OAAA5D,CAGA8Z,GAAA3S,KAAAzH,EAAAkJ,OAAA4C,QAAA,SAAAxE,GACA,GAAA+tB,GAAA2kB,EAAA15C,EAAAN,EAAAkJ,MAAA5B,GACA4B,GAAAhG,KAAAkX,EAAArO,IAAAzE,GAAA,KAAA+tB,EAAAxjB,KACAwjB,EAAArG,SAAAA,EAAA9rB,KAAAqhB,MAAAyK,EAAA5U,EAAApV,MAAAqwB,EAAArG,UACAqG,EAAAqB,QAAAA,EAAAxzB,KAAAqhB,MAAAmS,EAAAtc,EAAApV,MAAAqwB,EAAAqB,WAGArB,EAAA2kB,EAAA91C,EAAAlE,GACAq1B,EAAArG,SAAAA,EAAA9rB,KAAAqhB,MAAAyK,EAAA5U,EAAApV,MAAAqwB,EAAArG,UACAqG,EAAAqB,QAAAA,EAAAxzB,KAAAqhB,MAAAmS,EAAAtc,EAAApV,MAAAqwB,EAAAqB,SAEAgkB,GACA1rB,EAAA9rB,KAAAqhB,MAAAyK,EAAA0pB,EAAA1pB,SACAiG,EAAA/xB,KAAAqhB,MAAA0Q,EAAAyjB,EAAAvwC,MACAsyC,EAAAv3C,KAAA2H,EAAA,OAAA3B,EAAA0J,KAAA,MAAA,KACApS,GAAA,MAAA+a,EAAA,SAAAA,EAAA,IAAA1Q,EAAA,sDACAuP,EAAArO,IAAA7H,GAAA,KAAAmxB,EAAAxjB,IAAA,OACArR,GAAAg6C,EAAAl6C,EAAA,GAAA,YAAA,OAEAE,GAAA,0BACA4Z,EAAArO,IAAA7H,GAAA,KAAAmxB,EAAAxjB,IAAA,YAKArR,EAAA,OAAAi6C,EAAA7nC,KAAA,aAAA,QAAApS,GACAA,KAAAA,EAAAwuB,QAAAA,EAAA0H,OAAAA,EAAAvuB,KAAA8sB,GAGA,QAAA+kB,GAAA91C,EAAAmxB,GACA,GAAA,MAAAA,EAAA,MAAA,KAEA,IAAA,SAAAnxB,GAAA,WAAAA,EAAA,CACA,GAAAmxB,EAAAlkB,EACA,MAAAwpC,GAAA,MAAAtlB,EAAAvkB,EAAAukB,EAAAlkB,EAAAkkB,EAAA50B,EACA,IAAA40B,EAAAvkB,GAAAukB,EAAAp1B,EACA,MAAA06C,GAAA,MAAAtlB,EAAAvkB,EAAAukB,EAAAp1B,EAAAo1B,EAAA50B,EACA,IAAA40B,EAAA50B,GAAA40B,EAAAj1B,EACA,MAAAu6C,GAAA,MAAAtlB,EAAA50B,EAAA40B,EAAAj1B,EAAAi1B,EAAAnpB,EACA,IAAAmpB,EAAAr1B,GAAAq1B,EAAA91B,GAAA81B,EAAAnpB,EACA,MAAAyuC,GAAA,MAAAtlB,EAAAr1B,EAAAq1B,EAAA91B,EAAA81B,EAAAnpB,GAKA,GAAA2F,GAAA,KAAAg5B,EAAA,KACA+P,KAAAC,KAAAC,KACA9rB,KAAAnqB,KAAA4rB,GAAA,CAqCA,OAnCA3jB,UAAAuoB,EAAApuB,QACA4K,EAAAuI,EAAArO,IAAAspB,EAAApuB,QAGA6F,SAAAuoB,EAAA/E,SACAsqB,EAAAxgC,EAAAoC,MAAA6Y,EAAA/E,QACAze,EAAA,WAAA+oC,EAAA50C,IAAAoU,EAAArO,KAAA6G,KAAA,MAAA,IACAoc,EAAA9rB,KAAA03C,EAAA95B,UAGAhU,SAAAuoB,EAAA7Y,QACA6Y,EAAA7Y,MAAApC,EAAAlU,SAAAmvB,EAAA7Y,QAAAgb,MAAAnC,EAAA7Y,OAAA6Y,EAAA7Y,MACAq+B,EAAAE,EAAA1lB,EAAA7Y,OACA3K,EAAAgpC,EAAAhpC,KAGA/E,SAAAuoB,EAAAwV,QACAiQ,EAAAE,EAAA3lB,EAAAwV,OACAA,EAAAiQ,EAAAjpC,IAKAA,EADA,OAAAA,GAAAwjB,EAAA4lB,MAAA5lB,EAAA6lB,MAAA7lB,EAAAhV,OACAwqB,GAAAxV,EAAA4lB,KAAA,eACA,KAAA,OAAAppC,EAAAA,EAAA,mBAAA,KAEAg5B,GAKAh5B,EAAA,KAAAwjB,EAAA6lB,KAAA9gC,EAAA7I,OAAA8jB,EAAA6lB,MAAA,MAAA,IAAArpC,EAAA,KACAwjB,EAAAhV,OAAA,MAAAjG,EAAA7I,OAAA8jB,EAAAhV,QAAA,KAIAxO,IAAAA,EACAmd,QAAAA,EAAAhkB,OAAAoP,EAAApV,MAAA61C,EAAA7rB,UAAAhkB,OAAAoP,EAAApV,MAAA81C,EAAA9rB,UACAnqB,OAAAA,EAAAmG,OAAAoP,EAAApV,MAAA61C,EAAAh2C,SAAAmG,OAAAoP,EAAApV,MAAA81C,EAAAj2C,SACA6xB,OAAArB,EAAAwV,MAAAxV,EAAAwV,MAAA3mC,MAAAmxB,EAAAwV,MAAA,KACApa,OAAAA,GAAAoqB,EAAApqB,QAAAqqB,EAAArqB,QAIA,QAAAkqB,GAAAhqC,EAAAtJ,EAAAiL,EAAA4M,GACA,GAAAi8B,GAAA9zC,EAAA2yC,EAAA,GAAA3yC,GAAA3F,EAAA05C,MAAAzqC,GAAA,GACA0qC,EAAA/oC,EAAA0nC,EAAA,GAAA1nC,GAAA5Q,EAAA05C,MAAAzqC,GAAA,GACA2qC,EAAAp8B,EAAA86B,EAAA,GAAA96B,GAAAxd,EAAA05C,MAAAzqC,GAAA,EAQA,OAPAqe,YAAA0H,WAEAykB,EAAAE,EAAAC,GAAAxvC,QAAA,SAAArG,GACAA,EAAAupB,SAAAA,QAAA9rB,KAAAqhB,MAAAyK,QAAAvpB,EAAAupB,SACAvpB,EAAAixB,QAAAA,OAAAxzB,KAAAuC,EAAAixB,WAIA7kB,IAAA,YAAAlB,EAAA,KAAAwqC,EAAAtpC,IAAAwpC,EAAAxpC,IAAAypC,EAAAzpC,KAAAe,KAAA,KAAA,UACAoc,QAAAA,QACA0H,OAAAA,QAOA,QAAAqkB,GAAA1lB,GACA,GAAAjb,EAAAlU,SAAAmvB,GACA,OAAAxjB,IAAAuI,EAAAoC,MAAA6Y,GAAArvB,IAAAoU,EAAArO,KAAA6G,KAAA,MAIA,IAAAnS,GAAA40B,EAAArnB,MACAutC,GAAAlmB,EAAAoV,OAAApV,EAAAnN,SAAAznB,EACAs4C,EAAAwC,EAAAh0C,MAAA9G,GAAAmS,KAAA,eAAA,GACA5S,EAAA+6C,EAAA1lB,EAAAmC,OAAAnC,EAAAoV,OAAApV,EAAAnN,QAAAmN,EAAA/E,QACAze,EAAA7R,EAAA6R,IACAhN,EAAA7E,EAAA6E,WACAmqB,EAAAhvB,EAAAgvB,YACAyB,EAAAzwB,EAAAywB,SAAA,CAiBA,OAfA4E,GAAAmC,OACA3lB,EAAA,cAAAA,EAAA,IACAhN,EAAA3B,KAAAmyB,EAAAmC,QACAnC,EAAAoV,OACA54B,EAAAknC,EAAA,SAAAlnC,EAAA,IACA4e,GAAA,GACA4E,EAAAnN,QACArW,EAAAknC,EAAA,eAAAlnC,EAAA,IACA4e,GAAA,GACA4E,EAAA/E,SACAze,EAAA,WAAAA,EAAA,IACAmd,EAAA9rB,KAAAkX,EAAAoC,MAAA6Y,EAAA/E,QAAA,IACAG,GAAA,IAGA5e,IAAAA,EAAAhN,OAAAA,EAAAmqB,QAAAA,EAAAyB,OAAAA,GAMA,QAAAuqB,GAAA3lB,GACA,GAAAwV,GAAA,KACA2Q,EAAA,IAaA,OAVA3Q,GADAzwB,EAAAlU,SAAAmvB,GACAjb,EAAArO,IAAAspB,GACAA,EAAAnxB,KACAkW,EAAAlU,SAAAmvB,EAAAnxB,MAAAkW,EAAArO,IAAAspB,EAAAnxB,OAAAs3C,EAAAT,EAAA1lB,EAAAnxB,OAAA2N,KAEA2pC,EAAAT,EAAA1lB,IAAAxjB,IAGAg5B,EAAA,eAAAA,EAAA,IACAxV,EAAA2jB,SAAAnO,GAAA,WAEA2Q,GAAAA,EAAA3pC,IAAAg5B,EAAA2Q,IAAA3pC,IAAAg5B,GApRA,GAAAzwB,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAhL,EAAAzH,EAAA,qBACAqB,EAAArB,EAAA,kBAEA45C,GAAA,UAAA,SAAA,OAAA,SAkRA76C,GAAAD,QAAA26C,IpD09QGp5C,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAG/lB,iBAAiB,IAAI9vB,QAAU,KAAKm5C,IAAI,SAASp7C,EAAQjB,EAAOD,GqDnvR1F,GAAA6mC,GAAA3lC,EAAA,UACAuzB,EAAAvzB,EAAA,oBAEAjB,GAAAD,QAAA,SAAA2rB,EAAAzpB,GAoBA,OAlBAA,OAAAyK,QAAA,SAAA7L,GACA,GACAye,GADA4R,EAAAxF,EAAAwF,OAAArwB,EAAAiE,KAAAjE,EAAAsL,KAGAtL,GAAA+lC,OACAtnB,EAAAsnB,EAAA/lC,EAAA+lC,MACA1V,EAAAhB,SAAA,SAAApmB,GACA,GAAAjC,GAAA++B,EAAA2P,KAAA7qB,EAAApM,EAAAhB,GAAA,KAAA,KAAA,KAAA,KAAAgB,EAAAsQ,QAIA,OAHA3tB,GAAAwpC,QAAA5jC,EAAA6jB,EAAA+f,MAAAxpC,EAAA4F,IACAqpB,EAAArpB,MAAAA,GACAiC,EAAA8lB,QAAA/uB,EAAAiE,MAAA,EACAgF,GAEAonB,EAAAsF,WAAAhC,EAAAkC,QAAApX,EAAAsQ,SACAtQ,EAAAsQ,QAAAljB,QAAA,SAAA4vC,GAAA5wB,EAAAwF,OAAAorB,GAAA/3C,YAAA2sB,QAIAjvB,KrDsvRGuxB,oBAAoB,IAAI+oB,SAAS,KAAKC,IAAI,SAASv7C,EAAQjB,EAAOD,GsD7wRrE,GAAAib,GAAA/Z,EAAA,WACA8sB,EAAA9sB,EAAA,iBACAS,EAAAT,EAAA,gBACAw7C,EAAAx7C,EAAA,oBACAy7C,EAAAz7C,EAAA,kBACA07C,EAAA17C,EAAA,oBACA27C,EAAA37C,EAAA,uBACAssC,EAAAtsC,EAAA,iBACA47C,EAAA57C,EAAA,uBAEAjB,GAAAD,QAAA,SAAAkC,EAAAoV,EAAAylC,GAEA76C,EAAA+Y,EAAAtB,UAAAzX,GAEA66C,EAAAA,GAAAp7C,EAAAqoB,OAEA,IAAAqB,GAAAnpB,EAAAmpB,OAAA,IACAC,EAAAppB,EAAAopB,QAAA,IACAsG,EAAA1vB,EAAA0vB,UAAA,KACAjG,EAAA,GAAAqC,EAEA8uB,GAAAnxB,EAAAzpB,EAAA,WACAypB,EAAA4C,MACAlD,MAAAA,EACAC,OAAAA,EACAsG,SAAAA,EACAJ,QAAAkrB,EAAAx6C,EAAAsvB,SACA3B,QAAA+sB,EAAAjxB,EAAAzpB,EAAA2tB,SACAvB,WAAAuuB,EAAAlxB,EAAAzpB,EAAAosB,YACAK,MAAAguB,EAAAhxB,EAAAzpB,EAAAmpB,EAAAC,GACAtiB,KAAAwkC,EAAA7hB,EAAAzpB,EAAA8G,KAAA,WAAAsO,EAAAylC,EAAApxB,atDmxRGqxB,gBAAgB,GAAGC,eAAe,GAAGC,gBAAgB,GAAGC,uBAAuB,GAAGC,iBAAiB,GAAGC,mBAAmB,GAAGC,sBAAsB,GAAGC,mBAAmB,GAAGp6C,QAAU,KAAKq6C,IAAI,SAASt8C,EAAQjB,EAAOD,IACzN,SAAWM,GuDlzRX,GAAA2a,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACA3R,EAAAd,EAAA,oBACAu8C,EAAAv8C,EAAA,yBACAw8C,EAAAx8C,EAAA,YACA2lC,EAAA3lC,EAAA,UACAuzB,EAAAvzB,EAAA,qBAEAy8C,EAAA,QAAAC,EAAA,SAAAC,EAAA,KAEA59C,GAAAD,QAAA,SAAAosB,GAKA,QAAAsf,GAAAxpC,EAAA4F,GACA,GAAAyjC,GAAArpC,EAAAwpC,MACA3mC,EAAAwmC,EAAAxmC,MAAAwmC,EAAApa,QAAAoa,EACAqO,EAAArO,EAAAqO,MAAAjuB,EAAAsK,UAAAsV,EAAAqO,MAAAzoB,QAAA,IAEAyoB,IAAAA,EAAAlO,QACAkO,EAAAA,GAAAA,EAAAvB,KAAAuB,EAAAvB,KAAA/M,MAAA3f,EAAAxpB,QAAAmuB,MAAA,GAGA,IAAAob,GAAAkO,EAAAlO,MAAA3mC,EACA,OAAA2mC,GACAH,EAAAsO,OAAAnO,EAAAmO,OAAA/xC,GAAA4jC,EAAA5jC,GADAA,EAIA,QAAAqpB,GAAA2sB,EAAAJ,EAAAn+B,EAAArd,GACA,GAAAtB,GAAA,GAAAoB,GAAA2pB,EACA/qB,GAAAuvB,SAAA,SAAApmB,GACA,IAAAA,EAAA8lB,QAAA6tB,EAAAvsB,QAAA,MAAAxF,GAAAkK,cACA,IAAAnjB,GAAAm0B,EAAA2P,KAAA7qB,EAAApM,EAAAhB,GAAA,KAAA,KAAA,KAAA,KAAAgB,EAAAsQ,QAKA,OAJA3tB,GAAAwpC,QAAAh5B,EAAAg5B,EAAAxpC,EAAAwQ,IACAorC,EAAAh2C,MAAA4K,GACA3I,EAAA8lB,QAAAiuB,EAAA/4C,QAAA,EACAgF,EAAAunB,QAAA,EACAvnB,GAEAnJ,EAAA61B,WAAAhC,EAAAkC,QAAA+mB,EAAAvsB,QACAvwB,EAAA4D,YAAAs5C,GACAnyB,EAAAwF,OAAAusB,EAAAvsB,QAAA3sB,YAAA5D,GAGA,QAAAw1C,GAAA0H,EAAAJ,EAAAn+B,EAAArd,GACA,GAAAsf,GAAAk8B,EAAAl8B,YACA60B,EAAAqH,EAAArH,MAEAA,IAAA70B,EAAAzd,KAAA,KAAAsyC,EAAA7kC,KAAA,KAAAyJ,EAAArO,IAAAypC,EAAAvuC,QAEAi2C,EAAAL,EAAAtH,OAAA2H,EAAAL,EAAAtH,WACA2H,EAAAL,EAAAtH,OAAAryC,MACAotB,OAAA2sB,EACAv+B,IAAAA,EACAiC,QAAAA,EAAA3a,IAAA,SAAA9G,GAAA,MAAA8mC,GAAA9mC,KACAmC,KAAAA,IAGAknB,EAAAs0B,EAAAtH,OAAAhtB,EAAAs0B,EAAAtH,QAAA,GAAAp0C,GAAA2pB,GACAvC,EAAAs0B,EAAAtH,OAAA5xC,YAAAs5C,GAGA,QAAAE,GAAAF,EAAAJ,EAAAn+B,EAAArd,GACA,GAAA6C,GAAA+4C,EAAA/4C,OACAk5C,EAAApX,EAAA,QACA/lC,IAEAA,GAAA68C,GAAAhyB,EAAAwF,OAAApsB,EAAA44C,GAAA,GACA78C,EAAA88C,GAAAjyB,EAAAwF,OAAApsB,EAAA64C,GAAA,GACA98C,EAAA+8C,GAAAlyB,EAAAwF,OAAApsB,EAAA84C,GAAA,EAEA,IAAA3tB,GAAA,GAAAluB,GAAA2pB,EACAuE,GAAAC,SAAA,SAAApmB,GACA,MAAAjJ,GAAA68C,GAAA71C,WAAA,GAAAhH,EAAA+8C,GAAA/1C,WAAA,EAGAiC,EAAA8lB,QAAA9qB,EAAA44C,GAAAhyB,EAAAkK,gBAEAioB,EAAAh2C,MAAAhH,EAAA88C,GAAA91C,SACAiC,EAAA8lB,QAAA9qB,GAAA,EACAgF,IAGAjJ,EAAA+8C,GAAA/1C,WAAA,IACAhH,EAAA68C,GAAA71C,OAAA,GACAhH,EAAA+8C,GAAA/1C,OAAA,IAGA6jB,EAAAkK,iBAEA3F,EAAA1rB,YAAAs5C,IAEAH,EAAAC,EAAAC,GAAAlxC,QAAA,SAAAzE,GACA,GAAAwK,GAAAxK,GAAA01C,EAAAr+B,EAAA0+B,EACAC,EAAAh2C,GAAA01C,EAAA17C,IAEAw7C,GAAAx1C,GAAAkuC,MAAAA,EAAAt1C,EAAAoH,GAAAw1C,EAAAx1C,GAAAwK,EAAAwrC,GACAR,EAAAx1C,GAAAipB,OAAAA,EAAArwB,EAAAoH,GAAAw1C,EAAAx1C,GAAAwK,EAAAwrC,GACAR,EAAAx1C,GAAA7B,QAAA83C,EAAAr9C,EAAAoH,GAAAw1C,EAAAx1C,GAAA7B,OAAAqM,EAAAwrC,GACAp9C,EAAAoH,GAAA1D,YAAA0rB,KAIA,QAAAiuB,GAAAL,EAAAJ,EAAAn+B,EAAArd,GACAw7C,EAAA/wC,QAAA,SAAA7L,GACAA,EAAAs1C,MAAAA,EAAA0H,EAAAh9C,EAAAye,EAAArd,GACApB,EAAAqwB,OAAAA,EAAA2sB,EAAAh9C,EAAAye,EAAArd,GACApB,EAAAgP,MAAAkuC,EAAAF,EAAAh9C,EAAAye,EAAArd,GACApB,EAAAuF,QAAA83C,EAAAL,EAAAh9C,EAAAuF,OAAAkZ,EAAArd,KAlGA,GAAAypB,GAAAS,EAAAT,QACAzpB,EAAAypB,EAAA4C,OAAAsB,QACAkuB,KAAA30B,MAoGAlnB,OAAAyK,QAAA,SAAAmxC,GACA,GAAA3sB,GAAAxF,EAAAwF,OAAA2sB,EAAA/4C,KACA+4C,GAAAjX,OAEAiX,EAAArG,aAAA9qC,QAAA,SAAAtG,GACA,GAAA+3C,GAAAV,EAAAz7C,MAAAoE,EAAAmL,MACA+N,EAAAsnB,EAAAxgC,EAAAwgC,KACAsX,GAAAhtB,EAAAitB,EAAA7+B,EAAAlZ,OASA4U,EAAA3S,KAAAy1C,GAAApxC,QAAA,SAAA9L,GACA,GAAAwxB,GAAA0rB,EAAAl9C,GACA4U,EAAA2T,EAAAvoB,EAEAurB,GAAA7nB,GAAA1D,EAAA,SAAAw9C,EAAAr2B,GACA,GAGAtV,GAAAf,EAAAxQ,EAAAgG,EAAAL,EAHAgoB,EAAA2uB,EAAAh2C,OAAA,MAAA,GACAwV,EAAAmP,EAAAoF,UACA8sB,GAAA,CAGAD,GAAAE,iBACAp3C,EAAAwM,EAAA6qC,OAAA7qC,EAAAyiC,MAAAiI,EAAAjyB,EAAAR,MACA5D,EAAAA,MACAlhB,EAAAkhB,EAAAqQ,SACA,IAAAjc,IAAAlU,EAAAf,EAAA,GAAA8V,EAAA2P,KAAAzZ,EAAAhM,EAAA,GAAA8V,EAAAV,IAEA,KAAApb,EAAA,EAAAA,EAAAkxB,EAAA7wB,OAAAL,IACAwQ,EAAA0gB,EAAAlxB,GACAm9C,EAAA3sC,EAAA6P,QAAArK,KAAA,SAAApX,GACA,OAAA8mC,EAAA2P,KAAA7qB,EAAA5rB,EAAAwe,GAAAzX,EAAAu3C,EAAAr2B,EAAA5L,EAAArc,EAAA8vB,WAEAyuB,IAEA5rC,EAAAm0B,EAAA2P,KAAA7qB,EAAAha,EAAA4N,IAAAhB,GAAAzX,EAAAu3C,EAAAr2B,EAAA5L,EAAAzK,EAAA4N,IAAAsQ,SACAle,EAAAzP,KAAAwpC,QAAAh5B,EAAAg5B,EAAA/5B,EAAAzP,KAAAwQ,EAAAsV,IACArW,EAAAwf,OAAArpB,MAAA4K,GACAoc,EAAAe,QAAAle,EAAAwf,OAAApsB,QAAA,EAGA4mB,GAAAoD,UAAAD,EAAArZ,UvDuzRGlU,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4uB,mBAAmB,GAAGC,wBAAwB,GAAGuE,oBAAoB,IAAIgrB,WAAW,GAAGjC,SAAS,GAAGr5C,QAAU,KAAKu7C,IAAI,SAASx9C,EAAQjB,EAAOD,GwDv9RjJ,GAAAib,GAAA/Z,EAAA,WACAoB,EAAApB,EAAA,sBAEAjB,GAAAD,QAAA,QAAAstC,GAAA3hB,EAAA4f,GACA,GAAAoT,GAAA,GAAAr8C,GAAAipC,EAAA/5B,MAAAma,EACA,IAAA,SAAA4f,EAAA/5B,KAAA,CACA,GAAAgd,IAAA+c,EAAAoC,eACA9mC,IAAA,SAAAlG,GAAA,MAAA2sC,GAAA3hB,EAAAhrB,IACAg+C,GAAAnwB,SAAAA,GAaA,MARA+c,GAAAvW,QAAA2pB,EAAA3pB,OAAAuW,EAAAvW,QAEA/Z,EAAA3S,KAAAijC,GAAA5+B,QAAA,SAAAxE,GACA,SAAAA,GAAA,WAAAA,IACA,cAAAA,GAAA,UAAAojC,EAAA/5B,OACAmtC,EAAAx2C,GAAAuB,IAAAi1C,EAAApT,EAAApjC,MAGAw2C,KxD09RGC,sBAAsB,IAAIz7C,QAAU,KAAK07C,IAAI,SAAS39C,EAAQjB,EAAOD,IACxE,SAAWM,GyDz6RX,QAAAw+C,GAAA/5C,GACA,GAAA5D,GAAA4D,EAAA0S,QAAA,IACA,OAAA,GAAAtW,EAAA4D,EAAAA,EAAAqI,MAAA,EAAAjM,GAzEA,GAAA8Z,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAgb,EAAAztB,EAAA,WAEAoxB,EAAA,SAAAzB,EAAAlF,GACAnrB,KAAAu+C,QAAA,KACAv+C,KAAAy3B,aACApH,GAAArwB,KAAA+rB,WAAAsE,GACAlF,GAAAnrB,KAAAmrB,MAAAA,IAGAvlB,EAAAksB,EAAAlsB,SAEAA,GAAAmmB,WAAA,SAAAsE,EAAA5T,EAAAlI,GACAvU,KAAAorB,IAAAjY,EAAAqe,OAAAnB,GAAApb,OACAjV,KAAAurB,QAAApY,EAAAqe,OAAAnB,GAAAmB,OAAA,gBAAAvc,OACAjV,KAAAksB,SAAAzP,EACAzc,KAAAw+C,KAAAjqC,GAAA,IAGA,IAAAyW,GAAAhrB,KAAAurB,QAAAkzB,EAAAz+C,IAOA,OANA0+C,GAAAvyC,QAAA,SAAA6E,GACAga,EAAA2zB,iBAAA3tC,EAAA,SAAA6sC,GACAj4C,EAAAoL,GAAAjQ,KAAA09C,EAAAZ,OAIA79C,MAGA4F,EAAAorB,QAAA,SAAAvU,GAEA,MADAzc,MAAAksB,SAAAzP,EACAzc,MAGA4F,EAAAulB,MAAA,SAAAA,GACA,MAAA/f,WAAApK,QACAhB,KAAA+uB,OAAA5D,EACAnrB,MAFAA,KAAA+uB,QAKAnpB,EAAAisB,SAAA,WACA,GAAA1gB,GAAAnR,KAAAy3B,SACA,OAAAhd,GAAA3S,KAAAqJ,GAAAhG,OAAA,SAAA1K,EAAAkH,GACA,MAAAwJ,GAAAxJ,GAAAwD,OAAA,SAAA1K,EAAAiH,GAAA,MAAAjH,GAAA8C,KAAAmE,GAAAjH,GAAAA,QAKA,IAAAi+C,IACA,YACA,UACA,QACA,WACA,QACA,UACA,WACA,QACA,aACA,aAEAA,GAAAvyC,QAAA,SAAA6E,GACApL,EAAAoL,GAAA,SAAA6sC,GACA79C,KAAAquB,KAAArd,EAAA6sC,MAGAa,EAAAn7C,KAAA,aACAm7C,EAAAn7C,KAAA,YACAm7C,EAAAn7C,KAAA,aACAm7C,EAAAn7C,KAAA,YAOAqC,EAAAg5C,UAAAh5C,EAAAi5C,UAAA,SAAAhB,GACA,GAAAphC,GAAAzc,KAAAksB,SACA3f,EAAAsxC,EAAAhI,OAAAiJ,wBACAp3C,EAAAm2C,EAAAkB,QAAAxyC,EAAA6f,KACAzZ,EAAAkrC,EAAAmB,QAAAzyC,EAAAwP,IACAtb,EAAAT,KAAAu+C,QACA3iC,EAAA5b,KAAAi/C,KAAAj/C,KAAA+uB,OAAAptB,QAAA+F,EAAAiL,EAAAjL,EAAA+U,EAAA2P,KAAAzZ,EAAA8J,EAAAV,IAEA,OAAAH,KAAAnb,GACAT,KAAAquB,KAAA,YAAAwvB,QACA,aAAAA,EAAA7sC,MAAAhR,KAAAquB,KAAA,YAAAwvB,MAEAp9C,IACAT,KAAAquB,KAAA,WAAAwvB,GACA,YAAAA,EAAA7sC,MAAAhR,KAAAquB,KAAA,WAAAwvB,IAEA79C,KAAAu+C,QAAA3iC,OACAA,IACA5b,KAAAquB,KAAA,YAAAwvB,GACA,cAAAA,EAAA7sC,MAAAhR,KAAAquB,KAAA,aAAAwvB,OAIAj4C,EAAAs5C,SAAAt5C,EAAAu5C,SAAA,SAAAtB,GACA79C,KAAAu+C,UACAv+C,KAAAquB,KAAA,WAAAwvB,GACA79C,KAAAquB,KAAA,WAAAwvB,IAEA79C,KAAAu+C,QAAA,MAIA34C,EAAAw5C,eAAA,SAAAvB,GACA79C,KAAAquB,KAAA,aAAAwvB,IAIAj4C,EAAAyoB,KAAA,SAAArd,EAAA6sC,GACA,GAAAp9C,GAAAT,KAAAu+C,QACAptC,EAAAnR,KAAAy3B,UAAAzmB,EACA,IAAAG,EACA,IAAA,GAAAxQ,GAAA,EAAAsC,EAAAkO,EAAAnQ,OAAAiC,EAAAtC,IAAAA,EACAwQ,EAAAxQ,GAAAmxB,QAAA/wB,KAAAf,KAAAw+C,KAAAX,EAAAp9C,IAMAmF,EAAA7B,GAAA,SAAAiN,EAAA8gB,GACA,GAAAvtB,GAAA+5C,EAAAttC,GACAG,EAAAnR,KAAAy3B,SAMA,OALAtmB,GAAAA,EAAA5M,KAAA4M,EAAA5M,OACA4M,EAAA5N,MACAyN,KAAAA,EACA8gB,QAAAA,IAEA9xB,MAIA4F,EAAA1B,IAAA,SAAA8M,EAAA8gB,GACA,GAAAvtB,GAAA+5C,EAAAttC,GACAG,EAAAnR,KAAAy3B,UAAAlzB,EACA,IAAA4M,EAAA,CACA,IAAA,GAAAxQ,GAAAwQ,EAAAnQ,SAAAL,GAAA,GACAwQ,EAAAxQ,GAAAqQ,OAAAA,IACA8gB,GAAA3gB,EAAAxQ,GAAAmxB,UAAAA,GAAA3gB,EAAA+I,OAAAvZ,EAAA,GAEA,OAAAX,QAIA4F,EAAAua,QAAA,WACA,MAAAngB,MAAAurB,QAAAwB,WAAA,OAMAnnB,EAAAq5C,KAAA,SAAAt9C,EAAA+F,EAAAiL,EAAA0sC,EAAAC,GACA,GAAA1/C,GAAAI,KAAAmgB,UACAo/B,EAAA59C,EAAA49C,SACAC,EAAArxB,EAAA8wB,KAAAM,EACA,OAAAC,GAAAz+C,KAAAf,KAAAJ,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,IAGA7/C,EAAAD,QAAAsyB,IzDk/RG/wB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4/C,UAAU,GAAG98C,QAAU,KAAK+8C,IAAI,SAASh/C,EAAQjB,EAAOD,IAC3D,SAAWM,G0D5lSX,QAAA6/C,GAAA30B,EAAA8B,GAEA,GAAA8yB,GAAA//C,OAAA+/C,kBAAA,EACAC,EACA/yB,EAAAgzB,8BACAhzB,EAAAizB,2BACAjzB,EAAAkzB,0BACAlzB,EAAAmzB,yBACAnzB,EAAAozB,wBAAA,EACAC,EAAAP,EAAAC,CAEA,IAAAD,IAAAC,EAAA,CACA,GAAA37B,GAAA8G,EAAAH,MAAA1Z,EAAA6Z,EAAAF,MAEAE,GAAAgC,aAAA,QAAA9I,EAAAi8B,GACAn1B,EAAAgC,aAAA,SAAA7b,EAAAgvC,GACAn1B,EAAA2G,MAAA9G,MAAA3G,EAAA,KACA8G,EAAA2G,MAAA7G,OAAA3Z,EAAA,KAEA,MAAAgvC,GAGA,QAAAC,GAAAtzB,GACA,IAAAA,EAAAuzB,WAAA,CAEA,GAAAC,KACAxzB,GAAAyzB,aACAzzB,EAAAuzB,WAAA,SAAAG,GAAAxgD,KAAAugD,YAAAC,GAAAF,IACAxzB,EAAA2zB,iBAAA,SAAAv8C,GAAAlE,KAAA0gD,eAAAx8C,IACAiJ,SAAA2f,EAAA6zB,gBACA7zB,EAAAuzB,WAAA,SAAAG,GAAAxgD,KAAA2gD,eAAAH,GAAAF,GACAxzB,EAAA2zB,iBAAA,SAAAv8C,GAAAlE,KAAA4gD,qBAAA18C,IACAiJ,SAAA2f,EAAA+zB,SACA/zB,EAAAuzB,WAAA,SAAAG,GAAAxgD,KAAA6gD,QAAAL,GACA1zB,EAAA2zB,iBAAA,SAAAv8C,OAEA4oB,EAAAuzB,WAAA,SAAAG,KACA1zB,EAAA2zB,iBAAA,SAAAv8C,OAiBA,QAAA48C,GAAAt5B,EAAAkC,GAEA,IADA,GAAAnd,GAAA,GAAAw0C,GAAAr3B,GACA,OAAAlC,EAAAA,EAAAqwB,KAAA/M,QACAv+B,EAAA2d,UAAA1C,EAAA9f,GAAA,EAAA8f,EAAA7U,GAAA,EAEA,OAAApG,GAGA,QAAAy0C,GAAAlxB,GACA,MAAAA,GACArV,EAAApV,MAAAyqB,GAAA3kB,OAAA,SAAAoB,EAAAib,GACA,MAAAjb,GAAAod,MAAAm3B,EAAAt5B,EAAAA,EAAAkC,SACAC,MAAAm3B,EAAAt5B,EAAAA,EAAA,kBACA,GAAAu5B,IAJA,KAOA,QAAAE,GAAArhD,EAAA8pB,GACA,GAAAw3B,GAAA,IAOA,OANAx3B,KACAw3B,EAAA,GAAAH,GAAAr3B,GAAAta,QACAxP,EAAAuhD,YACAvhD,EAAAwhD,KAAAF,EAAAt3B,GAAAs3B,EAAAp3B,GAAAo3B,EAAAr2B,QAAAq2B,EAAAp2B,UACAlrB,EAAAyhD,QAEAH,EAzIA,GAAA/tC,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAsH,EAAA/Z,EAAA,WACAqgD,EAAArgD,EAAA,qBACAqB,EAAArB,EAAA,qBACAytB,EAAAztB,EAAA,WAEA8qB,EAAA,WACAxrB,KAAAshD,KAAA,KACAthD,KAAAorB,IAAA,KACAprB,KAAAuhD,SAAA,GAGA37C,EAAA4lB,EAAA5lB,SAEAA,GAAAmmB,WAAA,SAAAsE,EAAAxF,EAAAC,EAAArO,GAGA,GAFAzc,KAAAorB,IAAAiF,GAEAA,EAAA,MAAArwB,KAGA,IAAAgrB,GAAA7X,EAAAqe,OAAAnB,GACAmxB,UAAA,gBACAh5C,MAAA,GAUA,OAPAwiB,GAAAqsB,QACA5lB,OAAA,UACAC,KAAA,QAAA,SAGA1G,EAAAssB,OAAA5tC,SAEA1J,KAAAktB,OAAArC,EAAAC,EAAArO,IAGA7W,EAAAsnB,OAAA,SAAArC,EAAAC,EAAArO,GAKA,GAJAzc,KAAAgsB,OAAAnB,EACA7qB,KAAAisB,QAAAnB,EACA9qB,KAAAksB,SAAAzP,EAEAzc,KAAAorB,IAAA,CACA,GAAAJ,GAAA7X,EAAAqe,OAAAxxB,KAAAorB,KAAAoG,OAAA,eAGAxG,GACA0G,KAAA,QAAA7G,EAAApO,EAAA2P,KAAA3P,EAAA4P,OACAqF,KAAA,SAAA5G,EAAArO,EAAAV,IAAAU,EAAA6P,OAGA,IAAAhsB,EACAN,MAAAshD,KAAAt2B,EAAA/V,OAAA8X,WAAA,MACA/sB,KAAAshD,KAAAG,OAAAnhD,EAAAq/C,EAAA30B,EAAA/V,OAAAjV,KAAAshD,OAAA,EACAthD,KAAAshD,KAAAr0B,aAAA3sB,EAAA,EAAA,EAAAA,EAAAA,EAAAmc,EAAA2P,KAAA9rB,EAAAmc,EAAAV,KAIA,MADAqkC,GAAApgD,KAAAshD,MACAthD,MA4CA4F,EAAAua,QAAA,SAAA2M,GACA,MAAAA,IAAA9sB,KAAAshD,KAAAx0B,EAAA9sB,MACAA,KAAAshD,MAGA17C,EAAA87C,QAAA,WACA,MAAA1hD,MAAAorB,KAGAxlB,EAAA+lB,cAAA,WACA,MAAA3rB,MAAAuhD,UA8BA37C,EAAAimB,OAAA,SAAAlqB,EAAAmuB,GACA,GAIA6xB,GAJA/hD,EAAAI,KAAAshD,KACA7kC,EAAAzc,KAAAksB,SACAhI,EAAAlkB,KAAAgsB,OAAAvP,EAAA2P,KAAA3P,EAAA4P,MACAlb,EAAAnR,KAAAisB,QAAAxP,EAAAV,IAAAU,EAAA6P,OACA9N,EAAA,IAGAxe,MAAA2tB,OAAAhsB,EACA/B,EAAAgiD,OACApjC,EAAAyiC,EAAArhD,EAAAohD,EAAAlxB,IACAlwB,EAAAiiD,WAAAplC,EAAA2P,MAAA3P,EAAAV,IAAAmI,EAAA/S,GAGAnR,KAAA8hD,KAAAliD,EAAA+B,EAAA6c,GAGAsR,IACAlwB,EAAAuhC,UACAvhC,EAAAgiD,OACAD,EAAAV,EAAArhD,EAAAohD,EAAAlxB,IACAtR,EAAAmM,SAAAg3B,KACA/hD,EAAAiiD,WAAAplC,EAAA2P,MAAA3P,EAAAV,IAAAmI,EAAA/S,GACAnR,KAAA8hD,KAAAliD,EAAA+B,EAAAggD,KAKA/hD,EAAAuhC,UACAnhC,KAAA2tB,OAAA,MAGA/nB,EAAAk8C,KAAA,SAAAh1B,EAAAnrB,EAAA+nB,GACA,GAAA61B,GAAA59C,EAAA49C,SACA/zB,EAAA2C,EAAA2zB,KAAAvC,EACA/zB,GAAAzqB,KAAAf,KAAA8sB,EAAAnrB,EAAA+nB,IAGA9jB,EAAAm8C,YAAA,SAAApgD,GAEA,GAAA6pB,GAAAxrB,IACAwrB,GAAAw2B,WACAC,aAAAz2B,EAAAw2B,WAEAx2B,EAAAw2B,UAAAx+C,WAAA,WACAgoB,EAAAK,OAAAlqB,SACA6pB,GAAAw2B,WACA,KAGAp8C,EAAAs8C,UAAA,SAAAC,GACA,GAEA7sC,GAFAkW,EAAAxrB,KACA2B,EAAA6pB,EAAAmC,OACAy0B,EAAA,IAsBA,OApBA52B,GAAA+1B,UAAA,EACA9mC,EAAA5E,QACAusC,EAAA,IAAA,mBAAAviD,QAAAA,OAAAmrB,OAAA,mBAAAlrB,GAAAA,EAAAkrB,OAAA,MAAA,MACAvQ,EAAA5D,KAAA4D,EAAA9O,QAAA2J,IAAA6sC,GAAApgD,EAAA8U,MAAA,SAAAG,EAAAxO,GACA,MAAAwO,OAAAyD,GAAA1D,MAAAC,IACAorC,EAAApiC,IAAAxX,EACA45C,EAAAnV,QAAA,OACAzhB,EAAA+1B,UAAA,QAGAa,EAAA,GAAAC,OACA/sC,EAAAvT,EAAA0T,QAAA0sC,EACAC,EAAAtqC,OAAA,WACAsqC,EAAAnV,QAAA,EACAzhB,EAAA+1B,UAAA,EACA/1B,EAAAu2B,YAAApgD,IAEAygD,EAAApiC,IAAA1K,GAGA8sC,GAGA3iD,EAAAD,QAAAgsB,I1DypSGzqB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHyiD,oBAAoB,GAAGC,oBAAoB,IAAI9C,UAAU,GAAG98C,QAAU,KAAK6/C,IAAI,SAAS9hD,EAAQjB,EAAOD,G2Dr3S1GC,EAAAD,SACAoyB,QAAAlxB,EAAA,aACA8rB,SAAA9rB,EAAA,iB3Dw3SG+hD,YAAY,GAAGC,aAAa,KAAKC,IAAI,SAASjiD,EAAQjB,EAAOD,G4D92ShE,QAAAojD,GAAAriD,GACA,OAAAA,EAAAsiD,UAAAtiD,EAAAsiD,UAAA,IAAA,KACAtiD,EAAAuiD,YAAAviD,EAAAuiD,YAAA,IAAA,KACAviD,EAAAwiD,WAAAxiD,EAAAwiD,WAAA,IAAA,KACA,MAAAxiD,EAAAyiD,SAAAziD,EAAAyiD,SAAAjhD,EAAA8pB,OAAAm3B,UAAA,OACAziD,EAAA0iD,MAAAlhD,EAAA8pB,OAAAo3B,MAKA,QAAAC,GAAAtjD,EAAAW,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACAwwC,EAAA5iD,EAAA6iD,aAAA,EACArJ,EAAAx5C,EAAA8iD,aAAA,EACAx9B,GAAAtlB,EAAA+iD,YAAA,GAAA10C,KAAAksB,GAAA,EACAyoB,GAAAhjD,EAAAijD,UAAA,GAAA50C,KAAAksB,GAAA,CACAl7B,GAAAuhD,YACA,IAAAgC,EAAAvjD,EAAA6jD,OAAA/7C,EAAAiL,GACA/S,EAAA8jD,IAAAh8C,EAAAiL,EAAAwwC,EAAAt9B,EAAA09B,EAAA,GACA3jD,EAAA8jD,IAAAh8C,EAAAiL,EAAAonC,EAAAwJ,EAAA19B,EAAA,GACAjmB,EAAA+jD,YAGA,QAAAC,GAAAhkD,EAAAkwB,GACA,GAAAvvB,GAAAuvB,EAAA,GACAnpB,EAAApG,EAAAs3C,KACAj8B,EAAAjV,EAAAk9C,YAAAl9C,EAAAk9C,UAAAC,EAAAnJ,EAAAoJ,KAAAj0B,IACAk0B,GAAApkD,EAAAgc,GAGA,QAAAqoC,GAAArkD,EAAAkwB,GACA,GAAAvvB,GAAAuvB,EAAA,GACAnpB,EAAApG,EAAAs3C,KACAj8B,EAAAjV,EAAAk9C,YAAAl9C,EAAAk9C,UAAAC,EAAAnJ,EAAA/X,KAAA9S,IACAk0B,GAAApkD,EAAAgc,GAGA,QAAAsoC,GAAAtkD,EAAAW,GACA,GAAA,MAAAA,EAAAo6C,KAAA,CACA,GAAA/+B,GAAArb,EAAAsjD,YAAAtjD,EAAAsjD,UAAAC,EAAAvjD,EAAAo6C,MACA,OAAAqJ,GAAApkD,EAAAgc,EAAArb,EAAAmH,EAAAnH,EAAAoS,IAGA,QAAAwxC,GAAAvkD,EAAAW,GACAX,EAAAuhD,WACA,IACA9gD,GAAAF,EAAAikD,EAAAC,EADAp7B,EAAA,MAAA1oB,EAAA0oB,KAAA1oB,EAAA0oB,KAAA,IACAvhB,EAAAnH,EAAAmH,EAAAiL,EAAApS,EAAAoS,CAEA,IAAA,MAAApS,EAAA+jD,OAAA,WAAA/jD,EAAA+jD,MAIA,MAHAjkD,GAAAuO,KAAAgE,KAAAqW,EAAAra,KAAAksB,IACAl7B,EAAA8jD,IAAAh8C,EAAAiL,EAAAtS,EAAA,EAAA,EAAAuO,KAAAksB,GAAA,OACAl7B,GAAA+jD,WAIA,QAAApjD,EAAA+jD,OACA,IAAA,QACAjkD,EAAAuO,KAAAgE,KAAAqW,EAAA,GAAA,EACA9oB,EAAA,EAAAE,EACAT,EAAA6jD,OAAA/7C,EAAAvH,EAAAwS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAxS,GACAP,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAxS,GACAP,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAAvH,EAAAwS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAAvH,EAAAwS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAxS,GACAP,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAxS,GACAP,EAAA2kD,OAAA78C,EAAArH,EAAAsS,EAAAtS,GACAT,EAAA2kD,OAAA78C,EAAAvH,EAAAwS,EAAAtS,EACA,MAEA,KAAA,UACAgkD,EAAAz1C,KAAAgE,KAAAqW,GAAA,EAAAu7B,IACAJ,EAAAC,EAAAG,EACA5kD,EAAA6jD,OAAA/7C,EAAAiL,EAAA0xC,GACAzkD,EAAA2kD,OAAA78C,EAAA08C,EAAAzxC,GACA/S,EAAA2kD,OAAA78C,EAAAiL,EAAA0xC,GACAzkD,EAAA2kD,OAAA78C,EAAA08C,EAAAzxC,EACA,MAEA,KAAA,SACAxS,EAAAyO,KAAAgE,KAAAqW,GACA5oB,EAAAF,EAAA,EACAP,EAAAwhD,KAAA15C,EAAArH,EAAAsS,EAAAtS,EAAAF,EAAAA,EACA,MAEA,KAAA,gBACAikD,EAAAx1C,KAAAgE,KAAAqW,EAAAw7B,GACAJ,EAAAD,EAAAK,EAAA,EACA7kD,EAAA6jD,OAAA/7C,EAAAiL,EAAA0xC,GACAzkD,EAAA2kD,OAAA78C,EAAA08C,EAAAzxC,EAAA0xC,GACAzkD,EAAA2kD,OAAA78C,EAAA08C,EAAAzxC,EAAA0xC,EACA,MAEA,KAAA,cACAD,EAAAx1C,KAAAgE,KAAAqW,EAAAw7B,GACAJ,EAAAD,EAAAK,EAAA,EACA7kD,EAAA6jD,OAAA/7C,EAAAiL,EAAA0xC,GACAzkD,EAAA2kD,OAAA78C,EAAA08C,EAAAzxC,EAAA0xC,GACAzkD,EAAA2kD,OAAA78C,EAAA08C,EAAAzxC,EAAA0xC,GAEAzkD,EAAA+jD,YAGA,QAAAe,GAAA9kD,EAAAkwB,GACA,GAAAvvB,GAAAuvB,EAAA,GACA60B,EAAApkD,EAAAqkD,YACAC,EAAAtkD,EAAAukD,SACAllD,GAAAmlD,UAAA,MAAAJ,EAAAA,EAAA5iD,EAAA8pB,OAAAk5B,UACAnlD,EAAAolD,QAAA,MAAAH,EAAAA,EAAA9iD,EAAA8pB,OAAAm5B,QACAf,EAAArkD,EAAAkwB,GAGA,QAAAm1B,GAAArlD,EAAAW,GACA,GAAAqpB,GAAArpB,EAAAmH,GAAA,EACAoiB,EAAAvpB,EAAAoS,GAAA,EACAoX,EAAA,MAAAxpB,EAAAwpB,GAAAxpB,EAAAwpB,GAAAH,EACAI,EAAA,MAAAzpB,EAAAypB,GAAAzpB,EAAAypB,GAAAF,EACA66B,EAAApkD,EAAAqkD,YACAC,EAAAtkD,EAAAukD,SAEAllD,GAAAmlD,UAAA,MAAAJ,EAAAA,EAAA5iD,EAAA8pB,OAAAk5B,UACAnlD,EAAAolD,QAAA,MAAAH,EAAAA,EAAA9iD,EAAA8pB,OAAAm5B,QACAplD,EAAAuhD,YACAvhD,EAAA6jD,OAAA75B,EAAAE,GACAlqB,EAAA2kD,OAAAx6B,EAAAC,GAKA,QAAAk7B,GAAAvK,EAAA/6C,EAAAW,EAAAuvB,GACA,GAAAq1B,GAAAN,EAAAF,EAAAS,EAAA7kD,EAAA6kD,KAAAC,EAAA9kD,EAAA8kD,MAEA1K,GAAA/6C,EAAAkwB,GAEAq1B,EAAA,MAAA5kD,EAAA+kD,QAAA,EAAA/kD,EAAA+kD,QACA,GAAAH,IAAAC,GAAAC,KAEAD,IACAxlD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAilD,YAAA,EAAAjlD,EAAAilD,aACA5lD,EAAA6lD,UAAAhK,EAAA77C,EAAAW,EAAA6kD,GACAxlD,EAAAwlD,QAGAC,IACAV,EAAA,OAAAA,EAAApkD,EAAAqkD,aAAAD,EAAA5iD,EAAA8pB,OAAAk5B,UACAJ,EAAA,IACA/kD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAmlD,cAAA,EAAAnlD,EAAAmlD,eACA9lD,EAAA+lD,YAAAlK,EAAA77C,EAAAW,EAAA8kD,GACAzlD,EAAAmlD,UAAAJ,EACA/kD,EAAAolD,QAAA,OAAAH,EAAAtkD,EAAAukD,WAAAD,EAAA9iD,EAAA8pB,OAAAm5B,QACAplD,EAAAygD,WAAA9/C,EAAAqlD,YAAA,MACAhmD,EAAA6gD,iBAAAlgD,EAAAslD,kBAAA,GACAjmD,EAAAylD,YAKA,QAAAS,GAAAnL,EAAA/6C,EAAA+B,EAAA+nB,GACA,GAAA/oB,GAAAsC,EAAAukB,CACA,KAAA7mB,EAAA,EAAAsC,EAAAtB,EAAAmuB,MAAA9uB,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAA7lB,EAAAmuB,MAAAnvB,KACA+oB,GAAAA,EAAAkB,WAAApD,EAAAkC,UAEAw7B,EAAAvK,EAAA/6C,EAAA4nB,EAAAA,GAIA,QAAAu+B,GAAAnmD,EAAA+B,EAAA+nB,GACA,GAAA/nB,EAAAmuB,MAAA9uB,OAIA,IAAA,GAFAT,GAAA6kD,EAAAC,EAAAF,EAAAN,EAAAF,EAAAj9C,EAAAiL,EAAAuR,EAAA/S,EADA2e,EAAAnuB,EAAAmuB,MAGAnvB,EAAA,EAAAsC,EAAA6sB,EAAA9uB,OAAAiC,EAAAtC,IAAAA,EACAJ,EAAAuvB,EAAAnvB,KACA+oB,GAAAA,EAAAkB,WAAArqB,EAAAmpB,WAGAhiB,EAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACAuR,EAAA3jB,EAAAsqB,OAAA,EACA1Z,EAAA5Q,EAAAuqB,QAAA,EAEAq6B,EAAA,MAAA5kD,EAAA+kD,QAAA,EAAA/kD,EAAA+kD,QACA,GAAAH,KAEAC,EAAA7kD,EAAA6kD,QACAxlD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAilD,YAAA,EAAAjlD,EAAAilD,aACA5lD,EAAA6lD,UAAAhK,EAAA77C,EAAAW,EAAA6kD,GACAxlD,EAAAomD,SAAAt+C,EAAAiL,EAAAuR,EAAA/S,KAGAk0C,EAAA9kD,EAAA8kD,UACAV,EAAA,OAAAA,EAAApkD,EAAAqkD,aAAAD,EAAA5iD,EAAA8pB,OAAAk5B,UACAJ,EAAA,IACA/kD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAmlD,cAAA,EAAAnlD,EAAAmlD,eACA9lD,EAAA+lD,YAAAlK,EAAA77C,EAAAW,EAAA8kD,GACAzlD,EAAAmlD,UAAAJ,EACA/kD,EAAAolD,QAAA,OAAAH,EAAAtkD,EAAAukD,WAAAD,EAAA9iD,EAAA8pB,OAAAm5B,QACAplD,EAAAygD,WAAA9/C,EAAAqlD,YAAA,MACAhmD,EAAA6gD,iBAAAlgD,EAAAslD,kBAAA,GACAjmD,EAAAqmD,WAAAv+C,EAAAiL,EAAAuR,EAAA/S,OAMA,QAAA+0C,GAAAtmD,EAAA+B,EAAA+nB,GACA,GAAA/nB,EAAAmuB,MAAA9uB,OAIA,IAAA,GAFAT,GAAA8kD,EAAAF,EAAAN,EAAAF,EAAA/6B,EAAAE,EAAAC,EAAAC,EADA8F,EAAAnuB,EAAAmuB,MAGAnvB,EAAA,EAAAsC,EAAA6sB,EAAA9uB,OAAAiC,EAAAtC,IAAAA,EACAJ,EAAAuvB,EAAAnvB,KACA+oB,GAAAA,EAAAkB,WAAArqB,EAAAmpB,WAGAE,EAAArpB,EAAAmH,GAAA,EACAoiB,EAAAvpB,EAAAoS,GAAA;AACAoX,EAAA,MAAAxpB,EAAAwpB,GAAAxpB,EAAAwpB,GAAAH,EACAI,EAAA,MAAAzpB,EAAAypB,GAAAzpB,EAAAypB,GAAAF,EAEAq7B,EAAA,MAAA5kD,EAAA+kD,QAAA,EAAA/kD,EAAA+kD,QACA,GAAAH,IAEAE,EAAA9kD,EAAA8kD,UACAV,EAAA,OAAAA,EAAApkD,EAAAqkD,aAAAD,EAAA5iD,EAAA8pB,OAAAk5B,UACAJ,EAAA,IACA/kD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAmlD,cAAA,EAAAnlD,EAAAmlD,eACA9lD,EAAA+lD,YAAAlK,EAAA77C,EAAAW,EAAA8kD,GACAzlD,EAAAmlD,UAAAJ,EACA/kD,EAAAolD,QAAA,OAAAH,EAAAtkD,EAAAukD,WAAAD,EAAA9iD,EAAA8pB,OAAAm5B,QACAplD,EAAAygD,WAAA9/C,EAAAqlD,YAAA,MACAhmD,EAAA6gD,iBAAAlgD,EAAAslD,kBAAA,GACAjmD,EAAAuhD,YACAvhD,EAAA6jD,OAAA75B,EAAAE,GACAlqB,EAAA2kD,OAAAx6B,EAAAC,GACApqB,EAAAylD,YAMA,QAAAc,GAAAvmD,EAAA+B,EAAA+nB,GACA,GAAA/nB,EAAAmuB,MAAA9uB,OAIA,IAAA,GAFAT,GADAirB,EAAAxrB,KACA8vB,EAAAnuB,EAAAmuB,MAEAnvB,EAAA,EAAAsC,EAAA6sB,EAAA9uB,OAAAiC,EAAAtC,IAAAA,EAEA,GADAJ,EAAAuvB,EAAAnvB,IACA+oB,GAAAA,EAAAkB,WAAArqB,EAAAmpB,QAAA,CAGAnpB,EAAA6hD,OAAA7hD,EAAA6hD,MAAA9sC,MAAA/U,EAAA+U,MACA/U,EAAA6hD,MAAA52B,EAAA02B,UAAA3hD,EAAA+U,KACA/U,EAAA6hD,MAAA9sC,IAAA/U,EAAA+U,IAGA,IAAA5N,GAAAiL,EAAAuR,EAAA/S,EAAAg0C,CACAjhC,GAAA3jB,EAAAsqB,OAAAtqB,EAAA6hD,OAAA7hD,EAAA6hD,MAAAv3B,OAAA,EACA1Z,EAAA5Q,EAAAuqB,QAAAvqB,EAAA6hD,OAAA7hD,EAAA6hD,MAAAt3B,QAAA,EACApjB,GAAAnH,EAAAmH,GAAA,IAAA,WAAAnH,EAAA6lD,MACAliC,EAAA,EAAA,UAAA3jB,EAAA6lD,MAAAliC,EAAA,GACAvR,GAAApS,EAAAoS,GAAA,IAAA,WAAApS,EAAA8lD,SACAl1C,EAAA,EAAA,WAAA5Q,EAAA8lD,SAAAl1C,EAAA,GAEA5Q,EAAA6hD,MAAAnV,SACArtC,EAAA2lD,YAAA,OAAAJ,EAAA5kD,EAAA+kD,SAAAH,EAAA,EACAvlD,EAAAumD,UAAA5lD,EAAA6hD,MAAA16C,EAAAiL,EAAAuR,EAAA/S,KAKA,QAAAm1C,GAAA1mD,EAAA+B,EAAA+nB,GACA,GAAA/nB,EAAAmuB,MAAA9uB,OAIA,IAAA,GAFAT,GAAA6kD,EAAAC,EAAAF,EAAAR,EAAAj9C,EAAAiL,EAAAtS,EAAAF,EADA2vB,EAAAnuB,EAAAmuB,MAGAnvB,EAAA,EAAAsC,EAAA6sB,EAAA9uB,OAAAiC,EAAAtC,IAAAA,EACAJ,EAAAuvB,EAAAnvB,KACA+oB,GAAAA,EAAAkB,WAAArqB,EAAAmpB,WAGA9pB,EAAAqjD,KAAAL,EAAAriD,GACAX,EAAA2mD,UAAAhmD,EAAA6lD,OAAA,OACAxmD,EAAA4mD,aAAAjmD,EAAA8lD,UAAA,aAEAlB,EAAA,MAAA5kD,EAAA+kD,QAAA,EAAA/kD,EAAA+kD,QACA,GAAAH,IAEAz9C,EAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,GACAtS,EAAAE,EAAAkmD,UACAtmD,GAAAI,EAAAmmD,OAAA,GAAA93C,KAAAksB,GAAA,EACApzB,GAAArH,EAAAuO,KAAA2b,IAAApqB,GACAwS,GAAAtS,EAAAuO,KAAA4b,IAAArqB,IAGAI,EAAA+pB,OACA1qB,EAAAgiD,OACAhiD,EAAAsqB,UAAAxiB,EAAAiL,GACA/S,EAAAyqB,OAAA9pB,EAAA+pB,MAAA1b,KAAAksB,GAAA,KACApzB,EAAAnH,EAAA4pB,IAAA,EACAxX,EAAApS,EAAA6pB,IAAA,IAEA1iB,GAAAnH,EAAA4pB,IAAA,EACAxX,GAAApS,EAAA6pB,IAAA,IAGAg7B,EAAA7kD,EAAA6kD,QACAxlD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAilD,YAAA,EAAAjlD,EAAAilD,aACA5lD,EAAA6lD,UAAAhK,EAAA77C,EAAAW,EAAA6kD,GACAxlD,EAAA+mD,SAAApmD,EAAAwf,KAAArY,EAAAiL,KAGA0yC,EAAA9kD,EAAA8kD,UACAV,EAAA,OAAAA,EAAApkD,EAAAqkD,aAAAD,EAAA,EACAA,EAAA,IACA/kD,EAAA2lD,YAAAJ,GAAA,MAAA5kD,EAAAmlD,cAAA,EAAAnlD,EAAAmlD,eACA9lD,EAAA+lD,YAAAlK,EAAAl7C,EAAA8kD,GACAzlD,EAAAmlD,UAAAJ,EACA/kD,EAAAgnD,WAAArmD,EAAAwf,KAAArY,EAAAiL,KAIApS,EAAA+pB,OAAA1qB,EAAAuhC,YAIA,QAAA0lB,GAAAC,GACA,MAAA,UAAAlnD,EAAA+B,EAAA+nB,GACAo8B,EAAAgB,EAAAlnD,EAAA+B,EAAA+nB,IAIA,QAAAq9B,GAAAD,GACA,MAAA,UAAAlnD,EAAA+B,EAAA+nB,GACA/nB,EAAAmuB,MAAA9uB,UACA0oB,GAAAA,EAAAkB,WAAAjpB,EAAAmuB,MAAA,GAAApG,UAEAw7B,EAAA4B,EAAAlnD,EAAA+B,EAAAmuB,MAAA,GAAAnuB,EAAAmuB,QAIA,QAAAk3B,GAAApnD,EAAA+B,EAAA+nB,GACA,GAAA/nB,EAAAmuB,MAAA9uB,OAAA,CACA,GAAA8pC,GAAAD,EAAAoc,EACA5H,EAAAC,EAAA3+C,EAAAP,EAAAwG,EAAAD,EADAmpB,EAAAnuB,EAAAmuB,MACAtE,EAAAxrB,IAIA,KAFA+lD,EAAAnmD,EAAA+B,EAAA+nB,GAEA/oB,EAAA,EAAAP,EAAA0vB,EAAA9uB,OAAAZ,EAAAO,IAAAA,EAAA,CAkBA,IAjBAmqC,EAAAhb,EAAAnvB,GACAkqC,EAAAC,EAAAoc,cACAD,EAAAnc,EAAAqc,gBACA9H,EAAAvU,EAAApjC,GAAA,EACA43C,EAAAxU,EAAAn4B,GAAA,EAGA/S,EAAAgiD,OACAhiD,EAAAsqB,UAAAm1B,EAAAC,GACAxU,EAAAuW,OACAzhD,EAAAuhD,YACAvhD,EAAAwhD,KAAA,EAAA,EAAAtW,EAAAjgB,OAAA,EAAAigB,EAAAhgB,QAAA,GACAlrB,EAAAyhD,QAGA33B,GAAAA,EAAAQ,WAAAm1B,GAAAC,GAEA14C,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA,SAAAikC,EAAAjkC,GAAAmkC,IAAAM,OACA7f,EAAAs2B,KAAAliD,EAAAirC,EAAAjkC,GAAA8iB,EAGA,KAAA9iB,EAAA,EAAAD,EAAAmkC,EAAAhb,MAAA9uB,OAAA2F,EAAAC,IAAAA,EACA4kB,EAAAs2B,KAAAliD,EAAAkrC,EAAAhb,MAAAlpB,GAAA8iB,EAEA,KAAA9iB,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA,SAAAikC,EAAAjkC,GAAAmkC,IAAAM,OACA7f,EAAAs2B,KAAAliD,EAAAirC,EAAAjkC,GAAA8iB,EAGA,KAAA9iB,EAAA,EAAAD,EAAAsgD,EAAAjmD,OAAA2F,EAAAC,IAAAA,EACA4kB,EAAAs2B,KAAAliD,EAAAqnD,EAAArgD,GAAA8iB,EAGAA,IAAAA,EAAAQ,UAAAm1B,EAAAC,GACA1/C,EAAAuhC,YAIA,QAAAsa,GAAA77C,EAAAW,EAAA+G,GACA,MAAAA,GAAA,GACA8/C,EAAAxnD,EAAA0H,EAAA/G,EAAAmpB,QACApiB,EAGA,QAAA8/C,GAAAxnD,EAAAgc,EAAArP,GACA,GAQA5L,GAAAP,EARA8jB,EAAA3X,EAAAse,QACA1Z,EAAA5E,EAAAue,SACAlB,EAAArd,EAAAqd,GAAAhO,EAAAgO,GAAA1F,EACA4F,EAAAvd,EAAAud,GAAAlO,EAAAkO,GAAA3Y,EACA4Y,EAAAxd,EAAAqd,GAAAhO,EAAAmO,GAAA7F,EACA8F,EAAAzd,EAAAud,GAAAlO,EAAAoO,GAAA7Y,EACAk2C,EAAAznD,EAAA0nD,qBAAA19B,EAAAE,EAAAC,EAAAC,GACAza,EAAAqM,EAAA2rC,KAGA,KAAA5mD,EAAA,EAAAP,EAAAmP,EAAAvO,OAAAZ,EAAAO,IAAAA,EACA0mD,EAAAG,aAAAj4C,EAAA5O,GAAA+f,OAAAnR,EAAA5O,GAAA86C,MAEA,OAAA4L,GAKA,QAAAI,GAAA7nD,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,GACA,GAAA,IAAA39C,EAAAmuB,MAAA9uB,QACAW,EAAA+nB,SAAA/nB,EAAA+nB,OAAAX,SAAAs2B,EAAAC,GACA,OAAA,CAEA,IAAAoI,GAAA5c,EAAA6c,EAAAx9B,EAAAC,EACAzpB,EAAAiG,EADAkpB,EAAAnuB,EAAAmuB,MACAgC,EAAA9xB,IAEA,KAAAW,EAAAmvB,EAAA9uB,SAAAL,GAAA,GAAA,CAOA,IANAmqC,EAAAhb,EAAAnvB,GACAwpB,EAAA2gB,EAAApjC,GAAA,EACA0iB,EAAA0gB,EAAAn4B,GAAA,EAEA/S,EAAAgiD,OACAhiD,EAAAsqB,UAAAC,EAAAC,GACAxjB,EAAAkkC,EAAAhb,MAAA9uB,SAAA4F,GAAA,GAEA,GADA8gD,EAAA5c,EAAAhb,MAAAlpB,GACA8gD,EAAAE,eAAA,IACAD,EAAA71B,EAAAmtB,KAAAyI,EAAAhgD,EAAAiL,EAAA0sC,EAAAl1B,EAAAm1B,EAAAl1B,IAGA,MADAxqB,GAAAuhC,UACAwmB,CAGA/nD,GAAAuhC,UAGA,MAAAx/B,GAAAimD,YACAC,EAAAC,EAAAhd,MAAAlrC,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,IACA,EAGA,QAAAuI,GAAAlyC,EAAA/V,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,GACA,IAAA39C,EAAAmuB,MAAA9uB,OAAA,OAAA,CACA,IAAAT,GAAAgM,EAAA5L,CAOA,KALA,IAAAf,EAAA6hD,SACA/5C,GAAA9H,EAAA6hD,OACA9uC,GAAA/S,EAAA6hD,QAGA9gD,EAAAgB,EAAAmuB,MAAA9uB,SAAAL,GAAA,GAGA,GAFAJ,EAAAoB,EAAAmuB,MAAAnvB,GAAA4L,EAAAhM,EAAAmpB,SAEAnd,GAAAA,EAAAwc,SAAAs2B,EAAAC,KAAA/yC,GAEAoJ,EAAA/V,EAAAW,EAAAmH,EAAAiL,EAAA0sC,EAAAC,GAAA,MAAA/+C,EAEA,QAAA,EAGA,QAAAwnD,GAAAnoD,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,GACA,IAAA39C,EAAAmuB,MAAA9uB,OAAA,OAAA,CACA,IACAuL,GADAujB,EAAAnuB,EAAAmuB,KAIA,OADAvjB,GAAAujB,EAAA,GAAApG,OACAnd,IAAAA,EAAAwc,SAAAs2B,EAAAC,IAAA,GACA,IAAA1/C,EAAA6hD,SACA/5C,GAAA9H,EAAA6hD,OACA9uC,GAAA/S,EAAA6hD,QAEAqG,EAAA/D,KAAAnkD,EAAAkwB,EAAApoB,EAAAiL,GACAmd,EAAA,IADA,GAIA,QAAAk4B,GAAApoD,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,GACA,IAAA39C,EAAAmuB,MAAA9uB,OAAA,OAAA,CACA,IACAuL,GADAujB,EAAAnuB,EAAAmuB,KAIA,OADAvjB,GAAAujB,EAAA,GAAApG,OACAnd,IAAAA,EAAAwc,SAAAs2B,EAAAC,IAAA,GACA,IAAA1/C,EAAA6hD,SACA/5C,GAAA9H,EAAA6hD,OACA9uC,GAAA/S,EAAA6hD,QAEAqG,EAAAllB,KAAAhjC,EAAAkwB,EAAApoB,EAAAiL,GACAmd,EAAA,IADA,GAIA,QAAAmvB,GAAAtpC,GACA,MAAA,UAAA/V,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,GACA,MAAAuI,GAAAlyC,EAAA/V,EAAA+B,EAAA+F,EAAAiL,EAAA0sC,EAAAC,IAIA,QAAA2I,GAAAroD,EAAAW,EAAAmH,EAAAiL,EAAA0sC,EAAAC,GACA,IAAA/+C,EAAAyiD,SAAA,OAAA,CACA,KAAAziD,EAAA+pB,MAAA,OAAA,CAEA,IAAA/d,GAAA27C,EAAAnoC,KAAAxf,EAAA4nD,GAAA,GACA1nD,GAAAF,EAAA+pB,MAAA1b,KAAAksB,GAAA,IACAvQ,EAAA3b,KAAA2b,IAAA9pB,GACA+pB,EAAA5b,KAAA4b,IAAA/pB,GACAiH,EAAAnH,EAAAmH,EACAiL,EAAApS,EAAAoS,EACA6M,EAAA+K,EAAA80B,EAAA70B,EAAA80B,GAAA53C,EAAAA,EAAA6iB,EAAA5X,EAAA6X,GACA/K,EAAA+K,EAAA60B,EAAA90B,EAAA+0B,GAAA3sC,EAAAjL,EAAA8iB,EAAA7X,EAAA4X,EAEA,OAAAhe,GAAAwc,SAAAvJ,EAAAC,GAnhBA,GAAAshC,GAAArgD,EAAA,qBACAwnD,EAAAxnD,EAAA,qBACAqB,EAAArB,EAAA,qBACAi6C,EAAAj6C,EAAA,UAEAojD,EAAAnJ,EAAAl5C,MACAuiD,EAAArJ,EAAA9uB,OAEA44B,GADA71C,KAAAksB,GAAA,EACAlsB,KAAAgE,KAAA,IACA4xC,EAAA51C,KAAA+sB,IAAA,GAAA/sB,KAAAksB,GAAA,KACAqtB,EAAA,GAAApH,GA4gBA+G,GACA/nC,KAAAkoC,EACA7G,KAAA,SAAAxhD,EAAAW,EAAAmH,EAAAiL,GAAA,OAAA,GACAyvC,MAAA,SAAAxiD,EAAAW,EAAAmH,EAAAiL,GAAA,OAAA,GACAm4B,MAAA,SAAAlrC,EAAAW,EAAAmH,EAAAiL,GAAA,MAAApS,GAAA6kD,MAAA7kD,EAAA8kD,QACA7N,KAAA,SAAA53C,EAAAW,EAAAmH,EAAAiL,GACA,MAAA/S,GAAAwoD,iBACAnD,EAAArlD,EAAAW,GAAAX,EAAAwoD,gBAAA1gD,EAAAiL,KADA,GAGAiwB,KAAA,SAAAhjC,EAAAU,EAAAoH,EAAAiL,GACA,MAAA/S,GAAAwoD,iBACA1D,EAAA9kD,EAAAU,GAAAV,EAAAwoD,gBAAA1gD,EAAAiL,KADA,GAGA+wC,IAAA,SAAA9jD,EAAAW,EAAAmH,EAAAiL,GAAA,MAAAuwC,GAAAtjD,EAAAW,GAAAX,EAAAyoD,cAAA3gD,EAAAiL,IACAoxC,KAAA,SAAAnkD,EAAAU,EAAAoH,EAAAiL,GAAA,MAAAixC,GAAAhkD,EAAAU,GAAAV,EAAAyoD,cAAA3gD,EAAAiL,IACAgoC,KAAA,SAAA/6C,EAAAW,EAAAmH,EAAAiL,GAAA,MAAAuxC,GAAAtkD,EAAAW,GAAAX,EAAAyoD,cAAA3gD,EAAAiL,IACA21C,OAAA,SAAA1oD,EAAAW,EAAAmH,EAAAiL,GAAA,MAAAwxC,GAAAvkD,EAAAW,GAAAX,EAAAyoD,cAAA3gD,EAAAiL,IAGAlT,GAAAD,SACAsiD,MACAhX,MAAAkc,EACAjD,KAAAgD,EAAAnD,GACAhhB,KAAAmkB,EAAA9C,GACAP,IAAAmD,EAAA3D,GACAvI,KAAAkM,EAAA3C,GACAoE,OAAAzB,EAAA1C,GACA/C,KAAA2E,EACAvO,KAAA0O,EACAnmC,KAAAumC,EACAlE,MAAA+D,EACAY,QAAAA,EACAF,QAAAA,GAEA5H,MACAnU,MAAA2c,EACA1D,KAAAgE,EACAnlB,KAAAolB,EACAtE,IAAAzE,EAAA6I,EAAApE,KACA/I,KAAAsE,EAAA6I,EAAAnN,MACA2N,OAAArJ,EAAA6I,EAAAQ,QACAlH,KAAAnC,EAAA6I,EAAA1G,MACA5J,KAAAyH,EAAA6I,EAAAtQ,MACAz3B,KAAAk/B,EAAA6I,EAAA/nC,MACAqiC,MAAAnD,EAAA6I,EAAA1F,OACAyF,QAAAA,M5D83SGvF,oBAAoB,GAAGiG,oBAAoB,IAAIhG,oBAAoB,IAAIiG,SAAS,KAAKC,IAAI,SAAS/nD,EAAQjB,EAAOD,IACpH,SAAWM,G6D37TX,QAAA2B,GAAAk5C,GACA,GACA+N,GACAC,EACAC,EAHA3/C,IAMA0xC,GAAAA,EAAA/tC,QAAA2T,QAAAsoC,EAAA,GAAA,SAAA5nC,MAAA4nC,EAAA,IAAAj8C,MAAA,EAGA,KAAA,GAAAhG,GAAAkiD,EAAAnoD,EAAA,EAAAsC,EAAA03C,EAAA35C,OAAAiC,EAAAtC,EAAAA,IAAA,CACA+nD,EAAA/N,EAAAh6C,GACAgoD,EAAAD,EAAA97C,MAAA,GAAAwU,OAAAb,QAAAsoC,EAAA,GAAA,UAAA5nC,MAAA4nC,EAAA,IACAC,GAAAJ,EAAAxa,OAAA,GAEA,KAAA,GAAAtnC,GAAA,EAAAmiD,EAAAJ,EAAA3nD,OAAA+nD,EAAAniD,EAAAA,IACAgiD,EAAA/rB,WAAA8rB,EAAA/hD,IACA0T,MAAAsuC,IACAE,EAAAvlD,KAAAqlD,EAIA,IAAAI,GAAAF,EAAA,GAAAtyC,cACAyyC,EAAAC,EAAAF,EAEA,IAAAF,EAAA9nD,OAAA,EAAAioD,EACA,IAAA,GAAAthD,GAAA,EAAAwhD,EAAAL,EAAA9nD,OAAAmoD,EAAAxhD,EAAAA,GAAAshD,EACAhgD,EAAA1F,MAAAulD,EAAA,IAAAz9C,OAAAy9C,EAAAl8C,MAAAjF,EAAAA,EAAAshD,SAIAhgD,GAAA1F,KAAAulD,GAIA,MAAA7/C,GAGA,QAAAmgD,GAAAxpD,EAAA8H,EAAAiL,EAAA02C,EAAA3/B,EAAA5oB,EAAAX,GASA,IAAA,GARAikD,GAAAiF,EAAA,GACAhF,EAAAgF,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAC,EAAAH,EAAAC,EAAAtF,EAAAC,EAAAkF,EAAAC,EAAAF,EAAA5hD,EAAAiL,GACAhS,EAAA,EAAAA,EAAAgpD,EAAA3oD,OAAAL,IAAA,CACA,GAAAkpD,GAAAC,EAAAllC,MAAA,KAAA+kC,EAAAhpD,GACAf,GAAAmqD,cAAAnlC,MAAAhlB,EAAAiqD,GACAngC,EAAA9gB,IAAAihD,EAAA,GAAA/oD,EAAA+oD,EAAA,GAAA1pD,GACAupB,EAAA9gB,IAAAihD,EAAA,GAAA/oD,EAAA+oD,EAAA,GAAA1pD,GACAupB,EAAA9gB,IAAAihD,EAAA,GAAA/oD,EAAA+oD,EAAA,GAAA1pD,IAIA,QAAA6pD,GAAAtiD,EAAAiL,EAAA02C,EAAA3/B,GASA,IAAA,GARA06B,GAAAiF,EAAA,GACAhF,EAAAgF,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAC,EAAAH,EAAAC,EAAAtF,EAAAC,EAAAkF,EAAAC,EAAAF,EAAA5hD,EAAAiL,GACAhS,EAAA,EAAAA,EAAAgpD,EAAA3oD,OAAAL,IAAA,CACA,GAAAkpD,GAAAC,EAAAllC,MAAA,KAAA+kC,EAAAhpD,GACA+oB,GAAA9gB,IAAAihD,EAAA,GAAAA,EAAA,IACAngC,EAAA9gB,IAAAihD,EAAA,GAAAA,EAAA,IACAngC,EAAA9gB,IAAAihD,EAAA,GAAAA,EAAA,KAUA,QAAAD,GAAAliD,EAAAiL,EAAAyxC,EAAAC,EAAAkF,EAAAC,EAAAS,EAAAC,EAAAC,GAEA,GADAC,EAAAn3C,EAAAlS,KAAAqK,WACAi/C,EAAAD,GACA,MAAAC,GAAAD,EAGA,IAAAv9B,GAAAo9B,GAAAr7C,KAAAksB,GAAA,KACAwvB,EAAA17C,KAAA4b,IAAAqC,GACA09B,EAAA37C,KAAA2b,IAAAsC,EACAu3B,GAAAx1C,KAAAqQ,IAAAmlC,GACAC,EAAAz1C,KAAAqQ,IAAAolC,EACA,IAAA7kC,GAAA+qC,GAAAL,EAAAxiD,GAAA,GAAA4iD,GAAAH,EAAAx3C,GAAA,GACA8M,EAAA8qC,GAAAJ,EAAAx3C,GAAA,GAAA23C,GAAAJ,EAAAxiD,GAAA,GACA8iD,EAAAhrC,EAAAA,GAAA4kC,EAAAA,GAAA3kC,EAAAA,GAAA4kC,EAAAA,EACAmG,GAAA,IACAA,EAAA57C,KAAAgE,KAAA43C,GACApG,GAAAoG,EACAnG,GAAAmG,EAGA,IAAAC,GAAAF,EAAAnG,EACAsG,EAAAJ,EAAAlG,EACAuG,GAAAL,EAAAjG,EACAuG,EAAA,EAAAvG,EACAwG,EAAAJ,EAAAP,EAAAQ,EAAAP,EACAW,EAAAH,EAAAT,EAAAU,EAAAT,EACAvgC,EAAA6gC,EAAA/iD,EAAAgjD,EAAA/3C,EACAmX,EAAA6gC,EAAAjjD,EAAAkjD,EAAAj4C,EAEArM,GAAAsjB,EAAAihC,IAAAjhC,EAAAihC,IAAA/gC,EAAAghC,IAAAhhC,EAAAghC,GACAC,EAAA,EAAAzkD,EAAA,GACA,GAAAykD,IAAAA,EAAA,EACA,IAAAC,GAAAp8C,KAAAgE,KAAAm4C,EACAvB,IAAAD,IAAAyB,GAAAA,EACA,IAAAC,GAAA,IAAAJ,EAAAjhC,GAAAohC,GAAAlhC,EAAAghC,GACAI,EAAA,IAAAJ,EAAAhhC,GAAAkhC,GAAAphC,EAAAihC,GAEAM,EAAAv8C,KAAA8sB,MAAAovB,EAAAI,EAAAL,EAAAI,GACAG,EAAAx8C,KAAA8sB,MAAA5R,EAAAohC,EAAAthC,EAAAqhC,GAEAI,EAAAD,EAAAD,CACA,GAAAE,GAAA,GAAA7B,EACA6B,GAAA,EAAAz8C,KAAAksB,GACAuwB,EAAA,GAAA,GAAA7B,IACA6B,GAAA,EAAAz8C,KAAAksB,GAKA,KAAA,GAFAwwB,GAAA18C,KAAAM,KAAAN,KAAAqQ,IAAAosC,GAAA,GAAAz8C,KAAAksB,GAAA,QACA7xB,KACAtI,EAAA,EAAA2qD,EAAA3qD,EAAAA,IAAA,CACA,GAAA4qD,GAAAJ,EAAAxqD,EAAA0qD,EAAAC,EACAE,EAAAL,GAAAxqD,EAAA,GAAA0qD,EAAAC,CACAriD,GAAAtI,IAAAsqD,EAAAC,EAAAK,EAAAC,EAAApH,EAAAC,EAAAiG,EAAAC,GAGA,MAAAF,GAAAD,GAAAnhD,EAGA,QAAA6gD,GAAAr/B,EAAAC,EAAAygC,EAAAC,EAAAhH,EAAAC,EAAAiG,EAAAC,GAEA,GADAH,EAAAn3C,EAAAlS,KAAAqK,WACAqgD,EAAArB,GACA,MAAAqB,GAAArB,EAGA,IAAAK,GAAAF,EAAAnG,EACAsG,GAAAJ,EAAAjG,EACAsG,EAAAL,EAAAlG,EACAwG,EAAAL,EAAAlG,EAEAqH,EAAA98C,KAAA2b,IAAA4gC,GACAQ,EAAA/8C,KAAA4b,IAAA2gC,GACAS,EAAAh9C,KAAA2b,IAAA6gC,GACAS,EAAAj9C,KAAA4b,IAAA4gC,GAEAU,EAAA,IAAAV,EAAAD,GACAY,EAAAn9C,KAAA4b,IAAA,GAAAshC,GACA3rD,EAAA,EAAA,EAAA4rD,EAAAA,EAAAn9C,KAAA4b,IAAAshC,GACAliC,EAAAa,EAAAihC,EAAAvrD,EAAAwrD,EACA7hC,EAAAY,EAAAihC,EAAAxrD,EAAAurD,EACAM,EAAAvhC,EAAAmhC,EACAK,EAAAvhC,EAAAmhC,EACA9hC,EAAAiiC,EAAA7rD,EAAA0rD,EACA7hC,EAAAiiC,EAAA9rD,EAAAyrD,CAEA,OAAAH,GAAArB,IACAK,EAAA7gC,EAAA8gC,EAAA5gC,EAAA6gC,EAAA/gC,EAAAghC,EAAA9gC,EACA2gC,EAAA1gC,EAAA2gC,EAAA1gC,EAAA2gC,EAAA5gC,EAAA6gC,EAAA5gC,EACAygC,EAAAuB,EAAAtB,EAAAuB,EAAAtB,EAAAqB,EAAApB,EAAAqB,GAIA,QAAApgC,GAAAjsB,EAAA+6C,EAAA75C,EAAAX,GACA,GAAA+rD,GAMAC,EACAC,EACAC,EACAC,EARAC,EAAA,KACA7kD,EAAA,EACAiL,EAAA,EACA65C,EAAA,EACAC,EAAA,EAKA/iC,EAAA,GAAAq3B,EACA5zC,SAAArM,IAAAA,EAAA,GACAqM,QAAAhN,IAAAA,EAAA,GAEAP,EAAAuhD,WAEA,KAAA,GAAAxgD,GAAA,EAAAsC,EAAA03C,EAAA35C,OAAAiC,EAAAtC,IAAAA,EAAA,CAGA,OAFAurD,EAAAvR,EAAAh6C,GAEAurD,EAAA,IAEA,IAAA,IACAxkD,GAAAwkD,EAAA,GACAv5C,GAAAu5C,EAAA,GACAtsD,EAAA2kD,OAAA78C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,GACAtsD,EAAA2kD,OAAA78C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,GAAAwkD,EAAA,GACAtsD,EAAA2kD,OAAA78C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,EAAAwkD,EAAA,GACAtsD,EAAA2kD,OAAA78C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAA,GAAAu5C,EAAA,GACAtsD,EAAA2kD,OAAA78C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAA,EAAAu5C,EAAA,GACAtsD,EAAA2kD,OAAA78C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,GAAAwkD,EAAA,GACAv5C,GAAAu5C,EAAA,GACAtsD,EAAA6jD,OAAA/7C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,GACAtsD,EAAA6jD,OAAA/7C,EAAA5G,EAAA6R,EAAAxS,GACAupB,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAw5C,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GACAM,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GACAtsD,EAAAmqD,cACAriD,EAAAwkD,EAAA,GAAAprD,EACA6R,EAAAu5C,EAAA,GAAA/rD,EACAqsD,EAAA1rD,EACA2rD,EAAAtsD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAupB,EAAA9gB,IAAAlB,EAAAwkD,EAAA,GAAAv5C,EAAAu5C,EAAA,IACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,GACA1kD,EAAAykD,EACAx5C,EAAAy5C,CACA,MAEA,KAAA,IACA1kD,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAtsD,EAAAmqD,cACAmC,EAAA,GAAAprD,EACAorD,EAAA,GAAA/rD,EACAqsD,EAAA1rD,EACA2rD,EAAAtsD,EACAuH,EAAA5G,EACA6R,EAAAxS,GAEAupB,EAAA9gB,IAAAsjD,EAAA,GAAAA,EAAA,IACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IAEAw5C,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GAEAM,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,EACA7sD,EAAAmqD,cACAyC,EAAA1rD,EACA2rD,EAAAtsD,EACAuH,EAAAwkD,EAAA,GAAAprD,EACA6R,EAAAu5C,EAAA,GAAA/rD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAupB,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAlB,EAAAwkD,EAAA,GAAAv5C,EAAAu5C,EAAA,IACAxiC,EAAA9gB,IAAAujD,EAAAC,GAIAI,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GAEAxkD,EAAAykD,EACAx5C,EAAAy5C,CACA,MAEA,KAAA,IACAD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAM,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,EACA7sD,EAAAmqD,cACAyC,EAAA1rD,EACA2rD,EAAAtsD,EACA+rD,EAAA,GAAAprD,EACAorD,EAAA,GAAA/rD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAuH,EAAAykD,EACAx5C,EAAAy5C,EACA1iC,EAAA9gB,IAAAsjD,EAAA,GAAAA,EAAA,IACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,GAGAI,EAAAN,EAAA,GACAO,EAAAP,EAAA,EAEA,MAEA,KAAA,IAEAC,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GAEAM,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GAEAtsD,EAAA8sD,iBACAF,EAAA1rD,EACA2rD,EAAAtsD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAuH,EAAAykD,EACAx5C,EAAAy5C,EACA1iC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IACAD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAtsD,EAAA8sD,iBACAR,EAAA,GAAAprD,EACAorD,EAAA,GAAA/rD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAuH,EAAAykD,EACAx5C,EAAAy5C,EACAI,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IAGAD,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GAEA,OAAAK,EAAA,GAAA/rC,MAAA,WAGAgsC,EAAA9kD,EACA+kD,EAAA95C,GAEA,MAAA45C,EAAA,IAEAC,EAAA,EAAA9kD,EAAA2kD,EACAI,EAAA,EAAA95C,EAAA25C,GAEA,MAAAC,EAAA,KAEAC,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,GAGAJ,EAAAG,EACAF,EAAAG,EAEA7sD,EAAA8sD,iBACAF,EAAA1rD,EACA2rD,EAAAtsD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAuH,EAAAykD,EACAx5C,EAAAy5C,EACAI,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IACAD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAM,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,EACA7sD,EAAA8sD,iBACAF,EAAA1rD,EACA2rD,EAAAtsD,EACAgsD,EAAArrD,EACAsrD,EAAAjsD,GAEAuH,EAAAykD,EACAx5C,EAAAy5C,EACA1iC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IACAhD,EAAAxpD,EAAA8H,EAAA5G,EAAA6R,EAAAxS,GACA+rD,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAAxkD,EAAA5G,EACAorD,EAAA,GAAAv5C,EAAAxS,GACAupB,EAAA5oB,EAAAX,GACAuH,GAAAwkD,EAAA,GACAv5C,GAAAu5C,EAAA,EACA,MAEA,KAAA,IACA9C,EAAAxpD,EAAA8H,EAAA5G,EAAA6R,EAAAxS,GACA+rD,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAAprD,EACAorD,EAAA,GAAA/rD,GACAupB,EAAA5oB,EAAAX,GACAuH,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,EACA,MAEA,KAAA,IACA,IAAA,IACAtsD,EAAA+jD,YAGA4I,EAAAL,EAEA,MAAAxiC,GAAAQ,UAAAppB,EAAAX,GAGA,QAAAupB,GAAAixB,EAAAjxB,GAYA,IAAA,GAXAwiC,GAMAC,EACAC,EACAC,EACAC,EARAC,EAAA,KACA7kD,EAAA,EACAiL,EAAA,EACA65C,EAAA,EACAC,EAAA,EAMA9rD,EAAA,EAAAsC,EAAA03C,EAAA35C,OAAAiC,EAAAtC,IAAAA,EAAA,CAGA,OAFAurD,EAAAvR,EAAAh6C,GAEAurD,EAAA,IAEA,IAAA,IACAxkD,GAAAwkD,EAAA,GACAv5C,GAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,GAAAwkD,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,EAAAwkD,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAA,GAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAA,EAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,GAAAwkD,EAAA,GACAv5C,GAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAjL,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IACAw5C,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GACAM,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAAlB,EAAAwkD,EAAA,GAAAv5C,EAAAu5C,EAAA,IACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,GACA1kD,EAAAykD,EACAx5C,EAAAy5C,CACA,MAEA,KAAA,IACA1kD,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAxiC,EAAA9gB,IAAAsjD,EAAA,GAAAA,EAAA,IACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAlB,EAAAiL,EACA,MAEA,KAAA,IAEAw5C,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GAEAM,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,EACA/iC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAlB,EAAAwkD,EAAA,GAAAv5C,EAAAu5C,EAAA,IACAxiC,EAAA9gB,IAAAujD,EAAAC,GAIAI,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GAEAxkD,EAAAykD,EACAx5C,EAAAy5C,CACA,MAEA,KAAA,IACAD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAM,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,EACA/kD,EAAAykD,EACAx5C,EAAAy5C,EACA1iC,EAAA9gB,IAAAsjD,EAAA,GAAAA,EAAA,IACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,GAGAI,EAAAN,EAAA,GACAO,EAAAP,EAAA,EAEA,MAEA,KAAA,IAEAC,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GAEAM,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GAEAxkD,EAAAykD,EACAx5C,EAAAy5C,EACA1iC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IACAD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAxkD,EAAAykD,EACAx5C,EAAAy5C,EACAI,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IAGAD,EAAAzkD,EAAAwkD,EAAA,GACAE,EAAAz5C,EAAAu5C,EAAA,GAEA,OAAAK,EAAA,GAAA/rC,MAAA,WAGAgsC,EAAA9kD,EACA+kD,EAAA95C,GAEA,MAAA45C,EAAA,IAEAC,EAAA,EAAA9kD,EAAA2kD,EACAI,EAAA,EAAA95C,EAAA25C,GAEA,MAAAC,EAAA,KAEAC,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,GAGAJ,EAAAG,EACAF,EAAAG,EAEA/kD,EAAAykD,EACAx5C,EAAAy5C,EACAI,EAAA9kD,EAAAwkD,EAAA,GACAO,EAAA95C,EAAAu5C,EAAA,GACAxiC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IACAD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAM,EAAA,EAAA9kD,EAAA8kD,EACAC,EAAA,EAAA95C,EAAA85C,EAEA/kD,EAAAykD,EACAx5C,EAAAy5C,EACA1iC,EAAA9gB,IAAA4jD,EAAAC,GACA/iC,EAAA9gB,IAAAujD,EAAAC,EACA,MAEA,KAAA,IACApC,EAAAtiD,EAAAiL,GACAu5C,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAAxkD,EACAwkD,EAAA,GAAAv5C,GACA+W,GACAhiB,GAAAwkD,EAAA,GACAv5C,GAAAu5C,EAAA,EACA,MAEA,KAAA,IACAlC,EAAAtiD,EAAAiL,GACAu5C,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IACAxiC,GACAhiB,EAAAwkD,EAAA,GACAv5C,EAAAu5C,EAAA,EACA,MAEA,KAAA,IACA,IAAA,KAGAK,EAAAL,EAEA,MAAAxiC,GAGA,QAAAq6B,GAAAj0B,GACA,GAAAvvB,GAAAuvB,EAAA,GACAi0B,EAAA5wC,EAAA8X,IAAA84B,OACAr8C,EAAA,SAAApB,GAAA,MAAAA,GAAAoB,IACAoiB,GAAA,SAAAxjB,GAAA,MAAAA,GAAAqM,IACAm4C,GAAA,SAAAxkD,GAAA,MAAAA,GAAAqM,EAAArM,EAAAwkB,QAGA,OAFAvqB,GAAAkgB,aAAAsjC,EAAAtjC,YAAAlgB,EAAAkgB,aACA,MAAAlgB,EAAAq6C,SAAAmJ,EAAAnJ,QAAAr6C,EAAAq6C,SACAmJ,EAAAj0B,GAGA,QAAA8S,GAAA9S,GACA,GAAAvvB,GAAAuvB,EAAA,GACA8S,EAAAzvB,EAAA8X,IAAA2X,OACAl7B,EAAA,SAAApB,GAAA,MAAAA,GAAAoB,IACAiL,EAAA,SAAArM,GAAA,MAAAA,GAAAqM,GAGA,OAFApS,GAAAkgB,aAAAmiB,EAAAniB,YAAAlgB,EAAAkgB,aACA,MAAAlgB,EAAAq6C,SAAAhY,EAAAgY,QAAAr6C,EAAAq6C,SACAhY,EAAA9S,GAxtBA,GAmFAs6B,GAnFAj3C,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACA4tC,EAAArgD,EAAA,qBAGAwoD,GAAAviD,EAAA,EAAA7F,EAAA,EAAAqQ,EAAA,EAAArL,EAAA,EAAA0L,EAAA,EAAAlR,EAAA,EAAA4c,EAAA,EAAA/c,EAAA,EAAAM,EAAA,GACAooD,GAAA,4BAAA,MAAA,SAAA,YA2EAwB,KACAoB,KACAx4C,EAAArL,MAAAhC,UAAAqN,IAyoBAxT,GAAAD,SACAiC,MAAAA,EACAoqB,OAAAA,EACAnC,OAAAA,EACAq6B,KAAAA,EACAnhB,KAAAA,K7Dq8TG7hC,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHyiD,oBAAoB,KAAKqK,IAAI,SAASjsD,EAAQjB,EAAOD,IACxD,SAAWM,G8DxqVX,GACA2a,IADA,mBAAA5a,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAzS,EAAA,YAEAksD,GADAlsD,EAAA,qBACAA,EAAA,UAEA8qB,EAAA,WACAxrB,KAAA6tB,SAAA,MAGAjoB,EAAA4lB,EAAA5lB,SAEAA,GAAAmmB,WAAA,SAAAsE,EAAAxF,EAAAC,EAAArO,GAEA,MADAzc,MAAA6tB,SAAA,GAAA++B,GACA5sD,KAAAktB,OAAArC,EAAAC,EAAArO,IAGA7W,EAAAsnB,OAAA,SAAArC,EAAAC,EAAArO,GACAzc,KAAAgsB,OAAAnB,EACA7qB,KAAAisB,QAAAnB,EACA9qB,KAAAksB,SAAAzP,IAAAV,IAAA,EAAAqQ,KAAA,EAAAE,OAAA,EAAAD,MAAA,GACArsB,KAAAwwB,SAAA/V,EAAAlU,SAAAvG,KAAAksB,UAAA,EAAA,CAEA,IAAAhI,GAAAlkB,KAAAgsB,OAAA7a,EAAAnR,KAAAisB,QAAAxP,EAAAzc,KAAAksB,QAKA,OAFAlsB,MAAA6tB,SAAA9B,WAAA,KAAA7H,EAAA/S,EAAAsL,GAEAzc,MAGA4F,EAAAimB,OAAA,SAAAlqB,EAAAmuB,GAGA,MADA9vB,MAAA6tB,SAAAhC,OAAAlqB,GACA3B,MAGA4F,EAAAqlB,IAAA,WACA,MAAAjrB,MAAA6tB,SAAA5C,OAGAxrB,EAAAD,QAAAgsB,I9D2qVGzqB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH0iD,oBAAoB,IAAIsK,QAAQ,GAAGlqD,QAAU,KAAKmqD,IAAI,SAASpsD,EAAQjB,EAAOD,G+DrtVjFC,EAAAD,SACAgtB,SAAA9rB,EAAA,iB/DytVGgiD,aAAa,KAAKqK,IAAI,SAASrsD,EAAQjB,EAAOD,IACjD,SAAWM,GgExsVX,QAAAoY,GAAA80C,EAAAt7B,EAAAnhB,GACA,GAAAjQ,GAAA,IAAA0sD,CACA,IAAAt7B,EACA,IAAA,GAAA3rB,KAAA2rB,GAAA,CACA,GAAAxf,GAAAwf,EAAA3rB,EACA,OAAAmM,IACA5R,GAAA,IAAAyF,EAAA,KAAAmM,EAAA,KAKA,MADA3B,KAAAjQ,GAAA,IAAAiQ,GACAjQ,EAAA,IAGA,QAAA2sD,GAAAD,GACA,MAAA,KAAAA,EAAA,IA0HA,QAAAE,GAAA5sD,GAEA,MADAA,GAAA,MAAAA,EAAA,GAAAmkB,OAAAnkB,GACAA,EAAAigB,QAAA,KAAA,SACAA,QAAA,KAAA,QACAA,QAAA,KAAA,QAGA,QAAA4sC,GAAA7sD,GACA,MAAAmkB,QAAAnkB,GAAAigB,QAAA,MAAA,KA+CA,QAAA6sC,GAAA7sD,GACA,GAGA8sD,IAHA9sD,EAAAsqB,OAAA,EACAtqB,EAAAuqB,QAAA,EAEAvqB,EAAAs3C,KAAA+P,eAAA,EACA,gCACA,WAEA,OAAA1vC,GAAA,QACAo1C,QAAA,cACAD,GAAAJ,EAAA,QAGA,QAAAniB,GAAAvqC,EAAAwtB,GACA,GAAArmB,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACA+e,GAAAyb,UAAA,aAAAzlC,EAAA,IAAAiL,EAAA,IAEA,IAAApS,EAAA8gD,KAAA,CACA,GAAA7vC,IAAAqZ,MAAAtqB,EAAAsqB,OAAA,EAAAC,OAAAvqB,EAAAuqB,QAAA,GACAkO,EAAAz4B,EAAAgtD,UAAAhtD,EAAAgtD,QAAA,OAAAA,IACAx/B,GAAAy/B,SAAAx0B,GAAAxnB,EACAkgB,EAAA,aAAA,QAAAsH,EAAA,IAGA,MAAAtH,GAGA,QAAAgyB,GAAAnjD,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CACA,QACAw6B,UAAA,aAAAzlC,EAAA,IAAAiL,EAAA,IACArM,EAAAmnD,EAAAltD,IAIA,QAAAwjD,GAAAj0B,GACA,GAAAA,EAAA9uB,OAAA,CACA,GAAAT,GAAAuvB,EAAA,GACA6qB,EAAA,eAAAp6C,EAAA4qC,OAAAuiB,EAAAC,CAIA,OAHAhT,GACAl6B,YAAAlgB,EAAAkgB,aAAA,UACAm6B,QAAA,MAAAr6C,EAAAq6C,QAAA,GAAAr6C,EAAAq6C,UACAt0C,EAAAq0C,EAAA7qB,KAGA,QAAA8S,GAAA9S,GACA,GAAAA,EAAA9uB,OAAA,CACA,GAAAT,GAAAuvB,EAAA,EAIA,OAHA89B,GACAntC,YAAAlgB,EAAAkgB,aAAA,UACAm6B,QAAA,MAAAr6C,EAAAq6C,QAAA,GAAAr6C,EAAAq6C,UACAt0C,EAAAsnD,EAAA99B,KAGA,QAAA6qB,GAAAp6C,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CACA,QACAw6B,UAAA,aAAAzlC,EAAA,IAAAiL,EAAA,IACArM,EAAA/F,EAAAo6C,MAIA,QAAAyG,GAAA7gD,GACA,OACAmH,EAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACAkY,MAAAtqB,EAAAsqB,OAAA,EACAC,OAAAvqB,EAAAuqB,QAAA,GAIA,QAAA0sB,GAAAj3C,GACA,GAAAqpB,GAAArpB,EAAAmH,GAAA,EACAoiB,EAAAvpB,EAAAoS,GAAA,CACA,QACAiX,GAAAA,EACAE,GAAAA,EACAC,GAAA,MAAAxpB,EAAAwpB,GAAAxpB,EAAAwpB,GAAAH,EACAI,GAAA,MAAAzpB,EAAAypB,GAAAzpB,EAAAypB,GAAAF,GAIA,QAAAw+B,GAAA/nD,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CACA,QACAw6B,UAAA,aAAAzlC,EAAA,IAAAiL,EAAA,IACArM,EAAAunD,EAAAttD,IAIA,QAAA6hD,GAAA7hD,GACA,GAAA2jB,GAAA3jB,EAAAsqB,OAAAtqB,EAAA6hD,OAAA7hD,EAAA6hD,MAAAv3B,OAAA,EACA1Z,EAAA5Q,EAAAuqB,QAAAvqB,EAAA6hD,OAAA7hD,EAAA6hD,MAAAt3B,QAAA,EACApjB,EAAAnH,EAAAmH,GAAA,WAAAnH,EAAA6lD,MACAliC,EAAA,EAAA,UAAA3jB,EAAA6lD,MAAAliC,EAAA,GACAvR,EAAApS,EAAAoS,GAAA,WAAApS,EAAA8lD,SACAl1C,EAAA,EAAA,WAAA5Q,EAAA8lD,SAAAl1C,EAAA,GACAmE,EAAAvT,EAAA0T,QAAAlV,EAAA+U,GAEA,QACAw4C,aAAAx4C,EACA5N,EAAAA,EACAiL,EAAAA,EACAkY,MAAA3G,EACA4G,OAAA3Z,GAIA,QAAA4O,GAAAxf,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACAwX,EAAA5pB,EAAA4pB,IAAA,EACAC,EAAA7pB,EAAA6pB,IAAA,EACA3pB,EAAAF,EAAA+pB,OAAA,EACAjqB,EAAAE,EAAAkmD,QAAA,EACAL,EAAAG,EAAAhmD,EAAA6lD,OAAA,QACA36C,EAAA,QAAAlL,EAAA8lD,SAAA,OACA,WAAA9lD,EAAA8lD,SAAA,QAAA,CAEA,IAAAhmD,EAAA,CACA,GAAAF,IAAAI,EAAAmmD,OAAA,GAAA93C,KAAAksB,GAAA,CACApzB,IAAArH,EAAAuO,KAAA2b,IAAApqB,GACAwS,GAAAtS,EAAAuO,KAAA4b,IAAArqB,GAGA,OACAuH,EAAAA,EAAAyiB,EACAxX,EAAAA,EAAAyX,EACA2jC,cAAA3H,EACAjZ,UAAA1sC,EAAA,UAAAA,EAAA,IAAAiH,EAAA,IAAAiL,EAAA,IAAA,KACAyX,GAAA3e,EAAAA,EAAA,MAMA,QAAAuiD,GAAAjjB,GACA,GAAAkjB,GAAA,QAAAljB,EAAA/5B,IAEA,OADA+5B,GAAAxmC,OAAA0pD,GAAA,IAAAljB,EAAAxmC,MACA0pD,EAGA,QAAAvmD,GAAAnH,GAAA,MAAAA,GAAAmH,GAAA,EACA,QAAAiL,GAAApS,GAAA,MAAAA,GAAAoS,GAAA,EACA,QAAAu7C,GAAA3tD,GAAA,MAAAA,GAAAmH,EAAAnH,EAAAsqB,OAAA,EACA,QAAAsjC,GAAA5tD,GAAA,MAAAA,GAAAoS,EAAApS,EAAAuqB,QAAA,EAEA,QAAA7B,GAAA1oB,GAAA,MAAA,OAAAA,EAAA0oB,KAAA,IAAA1oB,EAAA0oB,KACA,QAAAq7B,GAAA/jD,GAAA,MAAAA,GAAA+jD,OAAA,SA+BA,QAAA3yB,GAAArrB,EAAA0mD,EAAAj/B,GACA,GAAAptB,GAAAP,EAAA8gB,EAAA3c,EAAA+C,EACA/G,EAAA+F,EAAAuxC,KAAAvxC,EAAAA,EAAAtF,OAAAsF,EAAA,GAAA,IACA,IAAA,OAAA/F,EAAA,MAAA,KAEA,IAAAD,GAAA,EAMA,KAJA,SAAA0sD,IACA1sD,GAAA,SAAAsiD,EAAAriD,GAAA,KAGAI,EAAA,EAAAP,EAAAguD,EAAAptD,OAAAZ,EAAAO,IAAAA,EACAugB,EAAAktC,EAAAztD,GACA4D,EAAA8pD,EAAAntC,GACA5Z,EAAA/G,EAAA2gB,GAEA,MAAA5Z,EACA,SAAA/C,IAAAjE,GAAA,gBAEAgH,EAAA0xB,KAEAjL,EAAAq5B,SAAA9/C,EAAA0xB,IAAA1xB,EACAA,EAAA,OAAAzH,OAAA4W,SAAAH,KAAA,IAAAhP,EAAA0xB,GAAA,KAEA14B,IAAAA,EAAAU,OAAA,IAAA,IAAAuD,EAAA,KAAA+C,EAAA,IAKA,OAAA,UAAAhH,EAAA,IAGA,QAAAsiD,GAAAriD,GACA,GAAAhB,IAAAgB,EAAAsiD,UAAAtiD,EAAAsiD,UAAA,IAAA,KACAtiD,EAAAuiD,YAAAviD,EAAAuiD,YAAA,IAAA,KACAviD,EAAAwiD,WAAAxiD,EAAAwiD,WAAA,IAAA,KACA,MAAAxiD,EAAAyiD,SAAAziD,EAAAyiD,SAAAjhD,EAAA8pB,OAAAm3B,UAAA,OACAziD,EAAA0iD,MAAAkK,EAAA5sD,EAAA0iD,OAAAlhD,EAAA8pB,OAAAo3B,KACA,OAAA1jD,GAhbA,GAAA4T,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAsH,EAAA/Z,EAAA,WACAqB,EAAArB,EAAA,qBAEA8qB,EAAA,WACAxrB,KAAAsuD,KAAA,EACAtuD,KAAAuuD,OACAhyC,KAAA,GACAzH,KAAA,GACA05C,KAAA,GACAzgC,KAAA,GACAvV,KAAA,IAEAxY,KAAAytB,OACA25B,YACAoG,cAsBA5nD,EAAA4lB,EAAA5lB,SAEAA,GAAAmmB,WAAA,SAAAsE,EAAAnM,EAAA/S,EAAAsL,GACA,GAAAtc,GAAAH,KAAAuuD,KAEApuD,GAAAoc,KAAArE,EAAA,OACAo1C,QAAA,QACAziC,MAAA3G,EAAAzH,EAAA2P,KAAA3P,EAAA4P,MACAvB,OAAA3Z,EAAAsL,EAAAV,IAAAU,EAAA6P,QACAvqB,EAAA0sD,cAEAtuD,EAAA2U,KAAAoD,EAAA,KACAi1B,UAAA,aAAA1wB,EAAA2P,KAAA,IAAA3P,EAAAV,IAAA,MAGA5b,EAAAquD,KAAAvB,EAAA,KAAAA,EAAA,QAGArnD,EAAAqlB,IAAA,WACA,GAAA9qB,GAAAH,KAAAuuD,KACA,OAAApuD,GAAAoc,KAAApc,EAAA4tB,KAAA5tB,EAAA2U,KAAA3U,EAAAqY,KAAArY,EAAAquD,MAGA5oD,EAAA8oD,UAAA,WACA,GAGA/tD,GAAAiG,EAHA8F,EAAA1M,KAAAytB,MACAkhC,EAAAl0C,EAAA3S,KAAA4E,EAAA06C,UACAwH,EAAAn0C,EAAA3S,KAAA4E,EAAA8gD,UACAz/B,EAAA,EAEA,KAAAptB,EAAA,EAAAA,EAAAguD,EAAA3tD,SAAAL,EAAA,CACA,GAAAq4B,GAAA21B,EAAAhuD,GACAoqC,EAAAr+B,EAAA06C,SAAApuB,GACAuuB,EAAAxc,EAAAwc,KAUA,KARAx5B,GAAA7V,EAAA,kBACA8gB,GAAAA,EACApP,GAAAmhB,EAAAnhB,GACAG,GAAAghB,EAAAhhB,GACAD,GAAAihB,EAAAjhB,GACAE,GAAA+gB,EAAA/gB,KAGApjB,EAAA,EAAAA,EAAA2gD,EAAAvmD,SAAA4F,EACAmnB,GAAA7V,EAAA,QACAwI,OAAA6mC,EAAA3gD,GAAA8Z,OACAmuC,aAAAtH,EAAA3gD,GAAA60C,QACAwR,EAAA,OAGAl/B,IAAAk/B,EAAA,kBAGA,IAAAtsD,EAAA,EAAAA,EAAAiuD,EAAA5tD,SAAAL,EAAA,CACA,GAAAq4B,GAAA41B,EAAAjuD,GACAoqC,EAAAr+B,EAAA8gD,SAAAx0B,EAEAjL,IAAA7V,EAAA,YAAA8gB,GAAAA,IAEAjL,GAAA7V,EAAA,QACAxQ,EAAA,EACAiL,EAAA,EACAkY,MAAAkgB,EAAAlgB,MACAC,OAAAigB,EAAAjgB,SACAmiC,EAAA,QAEAl/B,GAAAk/B,EAAA,YAGA,MAAAl/B,GAAA/sB,OAAA,EACAkX,EAAA,QAAA6V,EAAAk/B,EAAA,QAEA,IAKArnD,EAAAimB,OAAA,SAAAlqB,GACA3B,KAAAsuD,KAAA,EACAtuD,KAAAuuD,MAAA/1C,KAAAxY,KAAA8hD,KAAAngD,GACA3B,KAAAuuD,MAAAxgC,KAAA/tB,KAAA0uD,aAGA9oD,EAAAk8C,KAAA,SAAAngD,GACA,GAAAmtD,GAAAC,EAAAptD,EAAA49C,SACA,IAAAuP,EAAA,CAGA,GAKAnuD,GAAAquD,EALAhC,EAAA8B,EAAA,GACAp9B,EAAAo9B,EAAA,GACAG,EAAAH,EAAA,KAAA,EACAtmD,EAAAymD,GAAAttD,EAAAmuB,OAAAnuB,EAAAmuB,MACA/B,EAAA/tB,KAAAytB,MACAxC,EAAA,GAEAgjC,EAAAD,EAAArsD,EAAAopC,KAGAsiB,EAAA,IAWA,KAVA,cAAAY,GAAA,cAAAA,EACAZ,EAAA,gCACA,eAAAY,IACAZ,EAAA,YAEApiC,GAAA/S,EAAA,KACA8gB,GAAA,OAAAh5B,KAAAsuD,KACAhB,QAAAU,EAAArsD,EAAAopC,MACAsiB,GAEA1sD,EAAA,EAAAA,EAAA6H,EAAAxH,SAAAL,EAAA,CACA,GAAAquD,GAAA,MAAAhC,EAAA,KAAAr7B,EAAAnpB,EAAA7H,GAAAqsD,EAAAj/B,EACA9C,IAAA/S,EAAA80C,EAAAt7B,EAAAlpB,EAAA7H,GAAAotB,GAAAihC,GACA,SAAAhC,IAAA/hC,GAAAiiC,EAAA1kD,EAAA7H,GAAAof,OACA,MAAAitC,IAAA/hC,GAAAjrB,KAAAgnD,UAAAx+C,EAAA7H,KACAsqB,GAAAgiC,EAAAD,GAGA,MAAA/hC,GAAAgiC,EAAA,MAcA,IAAA8B,IACAjkB,OAAA,IAAAA,GACAiZ,MAAA,OAAAA,GAAA,GACAnhB,MAAA,OAAAA,GAAA,GACA8gB,KAAA,OAAAA,GACA/I,MAAA,OAAAA,GACA2N,QAAA,OAAAA,GACAlH,MAAA,OAAAA,GACA5J,MAAA,OAAAA,GACAz3B,MAAA,OAAAA,GACAqiC,OAAA,QAAAA,GAGAx8C,GAAAohD,UAAA,SAAArlD,GACA,GAIAiF,GAAAD,EAJAskB,EAAA,GACA4f,EAAAlpC,EAAAulD,cACAp3B,EAAAnuB,EAAAmuB,MACAm3B,EAAAtlD,EAAAwlD,eAKA,KAFAl8B,GAAAmiC,EAAAzrD,GAEAiF,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA,SAAAikC,EAAAjkC,GAAAmkC,IAAAM,QACApgB,GAAAjrB,KAAA8hD,KAAAjX,EAAAjkC,IAGA,KAAAA,EAAA,EAAAD,EAAAmpB,EAAA9uB,OAAA2F,EAAAC,IAAAA,EACAqkB,GAAAjrB,KAAA8hD,KAAAhyB,EAAAlpB,GAEA,KAAAA,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA,SAAAikC,EAAAjkC,GAAAmkC,IAAAM,QACApgB,GAAAjrB,KAAA8hD,KAAAjX,EAAAjkC,IAGA,KAAAA,EAAA,EAAAD,EAAAsgD,EAAAjmD,OAAA2F,EAAAC,IAAAA,EACAqkB,GAAAjrB,KAAA8hD,KAAAmF,EAAArgD,GAGA,OAAAqkB,GA+JA,IAAAwiC,GAAAt6C,EAAA8X,IAAAy4B,MACAiK,EAAAx6C,EAAA8X,IAAA84B,OAAAr8C,EAAAA,GAAAoiB,GAAAnX,GAAAm4C,GAAAqD,GACAT,EAAAv6C,EAAA8X,IAAA84B,OAAApxC,EAAAA,GAAAk4C,GAAAqD,GAAAtkC,GAAAliB,GACAkmD,EAAAz6C,EAAA8X,IAAA2X,OAAAl7B,EAAAA,GAAAiL,EAAAA,GACAk7C,EAAA16C,EAAA8X,IAAAq9B,SAAAt3C,KAAAszC,GAAAr7B,KAAAA,GAGAskC,EAAA,EAEAhH,GACAn6B,KAAA,QACA8iC,OAAA,SACA7iC,MAAA,OAGAgiC,GACAjJ,KAAA,OACAI,YAAA,eACAH,OAAA,SACAT,YAAA,eACAc,cAAA,iBACAZ,UAAA,iBACAc,WAAA,mBACAC,iBAAA,oBACAP,QAAA,WAGA8I,EAAA3zC,EAAA3S,KAAAumD,EA2CA5uD,GAAAD,QAAAgsB,IhE8tVGzqB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH0iD,oBAAoB,IAAI5/C,QAAU,KAAKwsD,IAAI,SAASzuD,EAAQjB,EAAOD,GiE1oWtE,QAAA4vD,GAAAt9B,GACA,GAAA2sB,GAAAz+C,IACA,OAAA,UAAA69C,GACA,GAAAhI,GAAAgI,EAAAhI,OACAruB,EAAAquB,EAAAwZ,QAEA7nC,KAAAA,EAAAA,EAAAqwB,KAAArwB,EAAAA,EAAA,IACAsK,EAAA/wB,KAAA09C,EAAAD,KAAAX,EAAAr2B,IAIA,QAAA82B,GAAA/5C,GACA,GAAA5D,GAAA4D,EAAA0S,QAAA,IACA,OAAA,GAAAtW,EAAA4D,EAAAA,EAAAqI,MAAA,EAAAjM,GAtBA,GAAA8Z,GAAA/Z,EAAA,WAEAoxB,EAAA,SAAAzB,EAAAlF,GACAnrB,KAAAu+C,QAAA,KACAv+C,KAAAy3B,aACApH,GAAArwB,KAAA+rB,WAAAsE,GACAlF,GAAAnrB,KAAAmrB,MAAAA,IAmBAvlB,EAAAksB,EAAAlsB,SAEAA,GAAAmmB,WAAA,SAAAsE,EAAA5T,EAAAlI,GAKA,MAJAvU,MAAAorB,IAAAjY,GAAAqe,OAAAnB,GAAApb,OACAjV,KAAAsvD,KAAAn8C,GAAAqe,OAAAnB,GAAAmB,OAAA,aAAAvc,OACAjV,KAAAksB,SAAAzP,EACAzc,KAAAw+C,KAAAjqC,GAAA,KACAvU,MAGA4F,EAAAorB,QAAA,SAAAvU,GAEA,MADAzc,MAAAksB,SAAAzP,EACAzc,MAGA4F,EAAAulB,MAAA,SAAAA,GACA,MAAA/f,WAAApK,QACAhB,KAAA+uB,OAAA5D,EACAnrB,MAFAA,KAAA+uB,QAKAnpB,EAAAisB,SAAA,WACA,GAAA1gB,GAAAnR,KAAAy3B,SACA,OAAAhd,GAAA3S,KAAAqJ,GAAAhG,OAAA,SAAA1K,EAAAkH,GACA,MAAAwJ,GAAAxJ,GAAAwD,OAAA,SAAA1K,EAAAiH,GAAA,MAAAjH,GAAA8C,KAAAmE,GAAAjH,GAAAA,SAKAmF,EAAA7B,GAAA,SAAAiN,EAAA8gB,GACA,GAAAvtB,GAAA+5C,EAAAttC,GACAG,EAAAnR,KAAAy3B,UACA83B,EAAAp8C,GAAAqe,OAAAxxB,KAAAsvD,MAAAr6C,OAEAvN,GACAsJ,KAAAA,EACA8gB,QAAAA,EACA7G,IAAAmkC,EAAAruD,KAAAf,KAAA8xB,GAMA,OAJA3gB,GAAAA,EAAA5M,KAAA4M,EAAA5M,OACA4M,EAAA5N,KAAAmE,GAEA6nD,EAAA5Q,iBAAAp6C,EAAAmD,EAAAujB,KACAjrB,MAIA4F,EAAA1B,IAAA,SAAA8M,EAAA8gB,GACA,GAAAvtB,GAAA+5C,EAAAttC,GACAG,EAAAnR,KAAAy3B,UAAAlzB,GACAgrD,EAAAp8C,GAAAqe,OAAAxxB,KAAAsvD,MAAAr6C,MACA,IAAA9D,EAAA,CACA,IAAA,GAAAxQ,GAAAwQ,EAAAnQ,SAAAL,GAAA,GACAwQ,EAAAxQ,GAAAqQ,OAAAA,IACA8gB,GAAA3gB,EAAAxQ,GAAAmxB,UAAAA,IACAy9B,EAAAC,oBAAAjrD,EAAA4M,EAAAxQ,GAAAsqB,KACA9Z,EAAA+I,OAAAvZ,EAAA,IAGA,OAAAX,QAGAP,EAAAD,QAAAsyB,IjEqpWGnvB,QAAU,KAAK8sD,IAAI,SAAS/uD,EAAQjB,EAAOD,IAC9C,SAAWM,GkE7uWX,GAAAqT,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAsH,EAAA/Z,EAAA,WACAytB,EAAAztB,EAAA,WAEA8qB,EAAA,WACAxrB,KAAAsvD,KAAA,KACAtvD,KAAAshD,KAAA,KACAthD,KAAAorB,IAAA,KACAprB,KAAAytB,OACA25B,YACAoG,cAIA5nD,EAAA4lB,EAAA5lB,SAEAA,GAAAmmB,WAAA,SAAAsE,EAAAxF,EAAAC,EAAArO,GAcA,MAbAzc,MAAAorB,IAAAiF,EAGAld,EAAAqe,OAAAnB,GAAAmB,OAAA,aAAA9nB,SAGA1J,KAAAsvD,KAAAn8C,EAAAqe,OAAAnB,GACAoB,OAAA,OACAC,KAAA,QAAA,SAGA1xB,KAAAshD,KAAAthD,KAAAsvD,KAAA79B,OAAA,KAEAzxB,KAAAktB,OAAArC,EAAAC,EAAArO,IAGA7W,EAAAsnB,OAAA,SAAArC,EAAAC,EAAArO,GAYA,MAXAzc,MAAAgsB,OAAAnB,EACA7qB,KAAAisB,QAAAnB,EACA9qB,KAAAksB,SAAAzP,EAEAzc,KAAAsvD,KACA59B,KAAA,QAAA7G,EAAApO,EAAA2P,KAAA3P,EAAA4P,OACAqF,KAAA,SAAA5G,EAAArO,EAAAV,IAAAU,EAAA6P,QAEAtsB,KAAAshD,KACA5vB,KAAA,YAAA,aAAAjV,EAAA2P,KAAA,IAAA3P,EAAAV,IAAA,KAEA/b,MAGA4F,EAAAua,QAAA,WACA,MAAAngB,MAAAshD,MAGA17C,EAAA87C,QAAA,WACA,MAAA1hD,MAAAorB,KAGAxlB,EAAA8pD,WAAA,WACA,GAIArI,GAAAhG,EAJAp2B,EAAAjrB,KAAAsvD,KACA5iD,EAAA1M,KAAAytB,MACAkhC,EAAAl0C,EAAA3S,KAAA4E,EAAA06C,UACAwH,EAAAn0C,EAAA3S,KAAA4E,EAAA8gD,UACAz/B,EAAA9C,EAAAuG,OAAA,OAGA,OAAA,KAAAm9B,EAAA3tD,QAAA,GAAA4tD,EAAA5tD,WAAA+sB,GAAArkB,UACAqkB,EAAA/E,UAAA+E,EAAA9C,EAAAzhB,OAAA,OAAA,iBAEA69C,EAAAt5B,EAAAyzB,UAAA,kBAAAh5C,KAAAmmD,EAAAl0C,EAAA/R,UACA2+C,EAAAhQ,QAAA5lB,OAAA,kBAAAC,KAAA,KAAAjX,EAAA/R,UACA2+C,EAAA/P,OAAA5tC,SACA29C,EAAAsI,KAAA,SAAA32B,GACA,GAAA+R,GAAAr+B,EAAA06C,SAAApuB,GACA42B,EAAAz8C,EAAAqe,OAAAxxB,KAGA4vD,GAAAl+B,MAAA9H,GAAAmhB,EAAAnhB,GAAAG,GAAAghB,EAAAhhB,GAAAD,GAAAihB,EAAAjhB,GAAAE,GAAA+gB,EAAA/gB,KAGAza,KAAAqgD,EAAApO,UAAA,QAAAh5C,KAAAuiC,EAAAwc,OACAh4C,KAAA8nC,QAAA5lB,OAAA,QACAliB,KAAA+nC,OAAA5tC,SACA6F,KAAAmiB,KAAA,SAAA,SAAAprB,GAAA,MAAAA,GAAAoa,SACAgR,KAAA,aAAA,SAAAprB,GAAA,MAAAA,GAAAm1C,UAGA4F,EAAAtzB,EAAAyzB,UAAA,YAAAh5C,KAAAomD,EAAAn0C,EAAA/R,UACA24C,EAAAhK,QAAA5lB,OAAA,YAAAC,KAAA,KAAAjX,EAAA/R,UACA24C,EAAA/J,OAAA5tC,aACA23C,GAAAsO,KAAA,SAAA32B,GACA,GAAA+R,GAAAr+B,EAAA8gD,SAAAx0B,GACA62B,EAAA18C,EAAAqe,OAAAxxB,MAAAwhD,UAAA,QAAAh5C,MAAA,GACAqnD,GAAAxY,QAAA5lB,OAAA,QACAo+B,EAAAn+B,KAAA,IAAA,GACAA,KAAA,IAAA,GACAA,KAAA,QAAAqZ,EAAAlgB,OACA6G,KAAA,SAAAqZ,EAAAjgB,YAIAllB,EAAAimB,OAAA,SAAAlqB,EAAAmuB,GACA3B,EAAA+9B,QAAAlsD,KAEA8vB,EACA9vB,KAAA8vD,YAAAr1C,EAAApV,MAAAyqB,IAEA9vB,KAAA8hD,KAAA9hD,KAAAshD,KAAA3/C,EAAA,IAEA3B,KAAA0vD,mBAEAvhC,GAAA+9B,SAGAtmD,EAAAkqD,YAAA,SAAAhgC,GACA,GAAAtI,GAAAvS,EAAAjE,EAAArQ,EAAAP,CAEA,KAAAO,EAAA,EAAAP,EAAA0vB,EAAA9uB,OAAAZ,EAAAO,IAAAA,EACA6mB,EAAAsI,EAAAnvB,GACAsU,EAAAuS,EAAA8nC,KACAt+C,EAAAwW,EAAAqwB,KAAA0H,SAEA/3B,EAAA2G,EAAAytB,OAAA5qC,GAAAwW,EAAAqwB,KAAA/nB,MAAAtI,EACA2G,EAAAoB,OAAAve,GAAAjQ,KAAAkU,EAAAuS,GACA2G,EAAAwD,MAAA5wB,KAAAkU,EAAAuS,IAIA5hB,EAAAk8C,KAAA,SAAAh1B,EAAAnrB,EAAA6I,GACA,GAAA+0C,GAAA59C,EAAA49C,SACA/zB,EAAA2C,EAAA2zB,KAAAvC,EACA/zB,GAAAzqB,KAAAf,KAAA8sB,EAAAnrB,EAAA6I,IAGA/K,EAAAD,QAAAgsB,IlEgvWGzqB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4/C,UAAU,GAAG98C,QAAU,KAAKotD,IAAI,SAASrvD,EAAQjB,EAAOD,GAC3D4L,UAAU,GAAG,IAAI,GAAGwZ,MAAMplB,EAAQ4L,aAC/Bq3C,YAAY,GAAGC,aAAa,GAAGsN,IAAM,KAAKC,IAAI,SAASvvD,EAAQjB,EAAOD,IACzE,SAAWM,GmEr3WX,QAAA4H,GAAAnH,GAAA,MAAAA,GAAAmH,GAAA,EACA,QAAAiL,GAAApS,GAAA,MAAAA,GAAAoS,GAAA,EACA,QAAAw7C,GAAA5tD,GAAA,MAAAA,GAAAoS,EAAApS,EAAAuqB,QAAA,EAEA,QAAA7B,GAAA1oB,GAAA,MAAA,OAAAA,EAAA0oB,KAAA,IAAA1oB,EAAA0oB,KACA,QAAAq7B,GAAA/jD,GAAA,MAAAA,GAAA+jD,OAAA,SA6BA,QAAA3yB,GAAArrB,GACA,GAAA3F,GAAAP,EAAA8gB,EAAA3c,EAAA+C,EACA/G,EAAA+F,EAAAuxC,KAAAvxC,EAAAA,EAAAtF,OAAAsF,EAAA,GAAA,IACA,IAAA,OAAA/F,EAEA,IAAAI,EAAA,EAAAP,EAAAguD,EAAAptD,OAAAZ,EAAAO,IAAAA,EACAugB,EAAAktC,EAAAztD,GACA4D,EAAA8pD,EAAAntC,GACA5Z,EAAA/G,EAAA2gB,GAEA,MAAA5Z,EACA,SAAA/C,EAAAvE,KAAA2xB,MAAAu+B,YAAA3rD,EAAA,OAAA,MACAvE,KAAA2xB,MAAAw+B,eAAA5rD,IAEA+C,EAAA0xB,KAEA7K,EAAA+9B,QAAAz+B,MAAA25B,SAAA9/C,EAAA0xB,IAAA1xB,EACAA,EAAA,QAAAA,EAAA0xB,GAAA,KAEAh5B,KAAA2xB,MAAAu+B,YAAA3rD,EAAA+C,EAAA,GAAA,OAKA,QAAAo8C,GAAAnjD,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CACA3S,MAAAgtB,aAAA,YAAA,aAAAtlB,EAAA,IAAAiL,EAAA,KACA3S,KAAAgtB,aAAA,IAAAygC,EAAAltD,IAGA,QAAAwjD,GAAAj0B,GACA,GAAAA,EAAA9uB,OAAA,CACA,GAAAT,GAAAuvB,EAAA,EACAsgC,GACA3vC,YAAAlgB,EAAAkgB,aAAA,UACAm6B,QAAA,MAAAr6C,EAAAq6C,QAAA,GAAAr6C,EAAAq6C,SACA56C,KAAAgtB,aAAA,IAAAojC,EAAAtgC,KAGA,QAAA8S,GAAA9S,GACA,GAAAA,EAAA9uB,OAAA,CACA,GAAAT,GAAAuvB,EAAA,EACA89B,GACAntC,YAAAlgB,EAAAkgB,aAAA,UACAm6B,QAAA,MAAAr6C,EAAAq6C,QAAA,GAAAr6C,EAAAq6C,SACA56C,KAAAgtB,aAAA,IAAA4gC,EAAA99B,KAGA,QAAA6qB,GAAAp6C,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CACA3S,MAAAgtB,aAAA,YAAA,aAAAtlB,EAAA,IAAAiL,EAAA,KACA,MAAApS,EAAAo6C,MAAA36C,KAAAgtB,aAAA,IAAAzsB,EAAAo6C,MAGA,QAAAyG,GAAA7gD,GACAP,KAAAgtB,aAAA,IAAAzsB,EAAAmH,GAAA,GACA1H,KAAAgtB,aAAA,IAAAzsB,EAAAoS,GAAA,GACA3S,KAAAgtB,aAAA,QAAAzsB,EAAAsqB,OAAA,GACA7qB,KAAAgtB,aAAA,SAAAzsB,EAAAuqB,QAAA,GAGA,QAAA0sB,GAAAj3C,GACA,GAAAqpB,GAAArpB,EAAAmH,GAAA,EACAoiB,EAAAvpB,EAAAoS,GAAA,CACA3S,MAAAgtB,aAAA,KAAApD,GACA5pB,KAAAgtB,aAAA,KAAAlD,GACA9pB,KAAAgtB,aAAA,KAAA,MAAAzsB,EAAAwpB,GAAAxpB,EAAAwpB,GAAAH,GACA5pB,KAAAgtB,aAAA,KAAA,MAAAzsB,EAAAypB,GAAAzpB,EAAAypB,GAAAF,GAGA,QAAAw+B,GAAA/nD,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CACA3S,MAAAgtB,aAAA,YAAA,aAAAtlB,EAAA,IAAAiL,EAAA,KACA3S,KAAAgtB,aAAA,IAAA6gC,EAAAttD,IAGA,QAAA6hD,GAAA7hD,GACA,GAAA2jB,GAAA3jB,EAAAsqB,OAAAtqB,EAAA6hD,OAAA7hD,EAAA6hD,MAAAv3B,OAAA,EACA1Z,EAAA5Q,EAAAuqB,QAAAvqB,EAAA6hD,OAAA7hD,EAAA6hD,MAAAt3B,QAAA,EACApjB,EAAAnH,EAAAmH,GAAA,WAAAnH,EAAA6lD,MACAliC,EAAA,EAAA,UAAA3jB,EAAA6lD,MAAAliC,EAAA,GACAvR,EAAApS,EAAAoS,GAAA,WAAApS,EAAA8lD,SACAl1C,EAAA,EAAA,WAAA5Q,EAAA8lD,SAAAl1C,EAAA,GACAmE,EAAAvT,EAAA0T,QAAAlV,EAAA+U,GAEAtV,MAAAqwD,eAAA,+BAAA,OAAA/6C,GACAtV,KAAAgtB,aAAA,IAAAtlB,GACA1H,KAAAgtB,aAAA,IAAAra,GACA3S,KAAAgtB,aAAA,QAAA9I,GACAlkB,KAAAgtB,aAAA,SAAA7b,GAGA,QAAAyxC,GAAAriD,GACA,OAAAA,EAAAsiD,UAAAtiD,EAAAsiD,UAAA,IAAA,KACAtiD,EAAAuiD,YAAAviD,EAAAuiD,YAAA,IAAA,KACAviD,EAAAwiD,WAAAxiD,EAAAwiD,WAAA,IAAA,KACA,MAAAxiD,EAAAyiD,SAAAziD,EAAAyiD,SAAAjhD,EAAA8pB,OAAAm3B,UAAA,OACAziD,EAAA0iD,MAAAlhD,EAAA8pB,OAAAo3B,MAGA,QAAAljC,GAAAxf,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACAwX,EAAA5pB,EAAA4pB,IAAA,EACAC,EAAA7pB,EAAA6pB,IAAA,EACA3pB,EAAAF,EAAA+pB,OAAA,EACAjqB,EAAAE,EAAAkmD,QAAA,EACAL,EAAAG,EAAAhmD,EAAA6lD,OAAA,QACA36C,EAAA,QAAAlL,EAAA8lD,SAAA,OACA,WAAA9lD,EAAA8lD,SAAA,QAAA,CAEA,IAAAhmD,EAAA,CACA,GAAAF,IAAAI,EAAAmmD,OAAA,GAAA93C,KAAAksB,GAAA,CACApzB,IAAArH,EAAAuO,KAAA2b,IAAApqB,GACAwS,GAAAtS,EAAAuO,KAAA4b,IAAArqB,GAGAH,KAAAgtB,aAAA,IAAAtlB,EAAAyiB,GACAnqB,KAAAgtB,aAAA,IAAAra,EAAAyX,GACApqB,KAAAgtB,aAAA,cAAAo5B,GAEA3lD,EAAAT,KAAAgtB,aAAA,YAAA,UAAAvsB,EAAA,IAAAiH,EAAA,IAAAiL,EAAA,KACA3S,KAAAswD,gBAAA,aAEA7kD,EAAAzL,KAAAgtB,aAAA,KAAAvhB,GACAzL,KAAAswD,gBAAA,MAEAtwD,KAAAuwD,YAAAhwD,EAAAwf,KACA/f,KAAA2xB,MAAAu+B,YAAA,OAAAtN,EAAAriD,GAAA,MAGA,QAAAuqC,GAAAvqC,GACA,GAAAmH,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CAGA,IAFA3S,KAAAgtB,aAAA,YAAA,aAAAtlB,EAAA,IAAAiL,EAAA,KAEApS,EAAA8gD,KAAA,CACA,GAAA7vC,IAAAqZ,MAAAtqB,EAAAsqB,OAAA,EAAAC,OAAAvqB,EAAAuqB,QAAA,GACAkO,EAAAz4B,EAAAgtD,UAAAhtD,EAAAgtD,QAAA,OAAAA,IACAp/B,GAAA+9B,QAAAz+B,MAAA+/B,SAAAx0B,GAAAxnB,EACAxR,KAAAgtB,aAAA,YAAA,QAAAgM,EAAA,MAIA,QAAAo0B,GAAA7sD,GACA,GAAA2jB,GAAA3jB,EAAAsqB,OAAA,EACA1Z,EAAA5Q,EAAAuqB,QAAA,CACA9qB,MAAAgtB,aAAA,QAAA9I,GACAlkB,KAAAgtB,aAAA,SAAA7b,GAGA,QAAA68C,GAAAjjB,GACA,GAAAkjB,GAAA,QAAAljB,EAAA/5B,IAEA,OADA+5B,GAAAxmC,OAAA0pD,GAAA,IAAAljB,EAAAxmC,MACA0pD,EAGA,QAAAnM,GAAAkL,EAAAt7B,EAAAu9B,GACA,MAAA,UAAArvD,EAAA+B,EAAA6I,GACAgmD,EAAA5wD,EAAA+B,EAAA6I,EAAA,QAAAwiD,EAAAt7B,EAAAu9B,IAIA,QAAAuB,GAAA5wD,EAAA+B,EAAA6I,EAAAqvB,EAAAmzB,EAAAt7B,EAAAu9B,GACA,GAAAzmD,GAAAymD,GAAAttD,EAAAmuB,OAAAnuB,EAAAmuB,MACA2gC,EAAA9uD,EAAAimD,eAAA,EAAA,OAAA,KACA8I,EAAA9wD,EAAAqV,OAAA07C,WACAC,EAAA,MAAA5D,EACApxC,GAAAA,EAAA80C,EAAAlmD,EAAA,IACA2I,EAAAqe,OAAA5V,GACAhc,EAAA6xB,OAAA,KACAC,KAAA,KAAA,OAAAm/B,GACAn/B,KAAA,QAAAs8B,EAAArsD,EAAAopC,MAEA/R,EAAApd,EAAA8V,KAAA,MACApxB,EAAA,IAAA04B,EAAA,MAAAg0B,EACArmD,EAAAiV,EAAA4lC,UAAAlhD,GAAAkI,KAAAA,GACAtI,EAAAyG,EAAA0wC,QAAA5lB,OAAAu7B,EAiBA,OAfA4D,IACAh1C,EAAA+V,MAAA,iBAAA8+B,GACAvwD,EAAAyvD,KAAA,SAAArpD,GACAA,EAAAuxC,KAAAvxC,EAAAgpD,KAAAtvD,KACAsG,EAAAtF,SAAAsF,EAAA,GAAAgpD,KAAAtvD,SAGAE,EAAAuxB,OAAA,QAAAC,KAAA,QAAA,cAAAC,MAAA,iBAAA8+B,GAGA9pD,EAAA2wC,OAAA5tC,SACA/C,EAAAgpD,KAAAj+B,GACAk/B,EAAAjqD,EAAAgpD,KAAAh+B,GACA/V,EAAA4lC,UAAAlhD,EAAA,sBAAAqvD,KAAAvC,GAAAuC,KAAAh+B,GAEA/V,EAGA,QAAAorC,GAAApnD,EAAA+B,EAAA6I,EAAAqvB,GACA,GACAl5B,GAAAiG,EAAAD,EADAiV,EAAA40C,EAAA5wD,EAAA+B,EAAA6I,EAAAqvB,GAAA,SAAA,IAAAiR,GACAt5B,EAAAoK,EAAA3G,OAAA07C,WAAAvwD,EAAAoR,EAAAxQ,MAEA,KAAAL,EAAA,EAAAP,EAAAO,IAAAA,EAAA,CACA,GAAAmvB,GAAAte,EAAA7Q,GAAA0uD,SAAAv/B,MACAm3B,EAAAz1C,EAAA7Q,GAAA0uD,SAAAlI,gBACAtc,EAAAr5B,EAAA7Q,GAAA0uD,SAAAnI,cACAtJ,EAAAzqC,EAAAqe,OAAAhgB,EAAA7Q,IACAkL,EAAA,CAEA,KAAAjF,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA,SAAAikC,EAAAjkC,GAAAmkC,IAAAM,OACA2b,EAAAjmD,KAAAf,KAAA49C,EAAA/S,EAAAjkC,GAAAiF,IAAA,QAGA,KAAAjF,EAAA,EAAAD,EAAAmpB,EAAA9uB,OAAA2F,EAAAC,IAAAA,EACA5G,KAAA8hD,KAAAlE,EAAA9tB,EAAAlpB,GAAAiF,IAEA,KAAAjF,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA,SAAAikC,EAAAjkC,GAAAmkC,IAAAM,OACA2b,EAAAjmD,KAAAf,KAAA49C,EAAA/S,EAAAjkC,GAAAiF,IAAA,QAGA,KAAAjF,EAAA,EAAAD,EAAAsgD,EAAAjmD,OAAA2F,EAAAC,IAAAA,EACAogD,EAAAjmD,KAAAf,KAAA49C,EAAAqJ,EAAArgD,GAAAiF,IAAA,YAvQA,GAAA4O,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACApR,EAAArB,EAAA,qBASA+sD,EAAAt6C,EAAA8X,IAAAy4B,MACA0M,EAAAj9C,EAAA8X,IAAA84B,OAAAr8C,EAAAA,GAAAoiB,GAAAnX,GAAAm4C,GAAAqD,GACAP,EAAAz6C,EAAA8X,IAAA2X,OAAAl7B,EAAAA,GAAAiL,EAAAA,GACAk7C,EAAA16C,EAAA8X,IAAAq9B,SAAAt3C,KAAAszC,GAAAr7B,KAAAA,GAEA4nC,EAAA,EACAtD,EAAA,EAEAhH,GACAn6B,KAAA,QACA8iC,OAAA,SACA7iC,MAAA,OAGAgiC,GACAjJ,KAAA,OACAI,YAAA,eACAH,OAAA,SACAT,YAAA,eACAc,cAAA,iBACAZ,UAAA,iBACAc,WAAA,mBACAC,iBAAA,oBACAP,QAAA,WAEA8I,EAAA3zC,EAAA3S,KAAAumD,GAwOAlgC,EAAA1uB,EAAAD,SACA+vB,QACAub,MAAAsW,EACA2C,KAAAA,EACAnhB,KAAAA,EACA8gB,IAAAA,EACA/I,KAAAA,EACA2N,OAAAA,EACAlH,KAAAA,EACA5J,KAAAA,EACAz3B,KAAAA,EACAqiC,MAAAA,GAEAxG,QACAmI,MAAA,EACAnhB,MAAA,GAEAjR,MAAAA,EACAmwB,MACAhX,MAAAkc,EACAjD,KAAAjC,EAAA,OAAAiC,GAAA,GACAnhB,KAAAkf,EAAA,OAAAlf,GAAA,GACA8gB,IAAA5B,EAAA,OAAA4B,GACA/I,KAAAmH,EAAA,OAAAnH,GACA2N,OAAAxG,EAAA,OAAAwG,GACAlH,KAAAU,EAAA,OAAAV,GACA5J,KAAAsK,EAAA,OAAAtK,GACAz3B,KAAA+hC,EAAA,OAAA/hC,GACAqiC,MAAAN,EAAA,QAAAM,GACAN,KAAAA,GAEAoK,QAAA,QnE43WGnrD,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH0iD,oBAAoB,IAAI5/C,QAAU,KAAKmuD,IAAI,SAASpwD,EAAQjB,EAAOD,GoEpqXtE,QAAAuxD,GAAAn+B,EAAAilB,GAEA,MADA73C,MAAAgxD,MAAAnZ,EACAr2C,EAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GAAAlD,QAAA,GAPA,GAAAluB,GAAAd,EAAA,oBACAgpB,EAAAhpB,EAAA,kBACAuzB,EAAAvzB,EAAA,qBACAkvB,EAAAlvB,EAAA,iBAOAiF,EAAAorD,EAAAnrD,UAAA,GAAApE,EAEAmE,GAAAgqB,SAAA,SAAApmB,GAQA,MAPAqmB,GAAArmB,GAAA,SAAAvJ,KAAAgxD,MAAAzR,WAEA71B,EAAAmuB,KAAA73C,KAAAgxD,OACAhxD,KAAAgxD,MAAAzR,WAAAtrB,EAAAg9B,OACAvnC,EAAAmuB,KAAA73C,KAAAgxD,MAAA,MAAA,GAEAznD,EAAAunB,QAAA,EACAvnB,GAGA9J,EAAAD,QAAAuxD,IpE2qXGtiC,mBAAmB,GAAGyiC,iBAAiB,IAAIj+B,oBAAoB,IAAI5F,gBAAgB,MAAM8jC,IAAI,SAASzwD,EAAQjB,EAAOD,GqEvrXxH,QAAAoC,KACA,MAAAwJ,WAAApK,OAAAhB,KAAA4L,KAAAgZ,MAAA5kB,KAAAoL,WAAApL,KA8DA,QAAAoxD,KACA,GAEApxC,GAAAzb,EAAA7C,EAAA2vD,EAAA78B,EAFAoiB,EAAA52C,KAAAsxD,KAAA1a,KACA2a,EAAA3a,EAAAiB,IAGA0Z,IACAhtD,GAAA,KAAAvE,KAAAwxD,WAAAD,GAAAt+C,KAAA,KACAvR,GACA6C,KAAAA,EACA4oC,UAAAyJ,EAAAzJ,UACAC,OAAAwJ,EAAAxJ,UAGAptB,EAAAhgB,KAAAszB,OAAA9qB,KAAAxI,KAAAyxD,OACAltD,GAAA,KAAAvE,KAAAyxD,MAAAzxD,KAAAsxD,KAAAtgD,KAAAgP,EAAAkS,WAAA,GAAAlxB,QAAAiS,KAAA,KACAvR,GACA6C,KAAAA,EACA0b,OAAAjgB,KAAAyxD,MACAtkB,UAAAyJ,EAAAzJ,UACAC,OAAAwJ,EAAAxJ,SAIAptC,KAAAyxD,MAAAltD,EACAvE,KAAA0xD,IAAA1kB,EAAAE,WAAAltC,KAAAszB,OAAA5xB,EACA,IAAAquB,GAAA/vB,KAAA0xD,IAAA3hC,SAEA,IAAAwhC,EACAF,EAAArxD,KAAAqxD,QAAAE,GAAAxhC,QAAAA,GACAshC,EAAAM,SAAAN,EAAArtD,YAAAhE,KAAA0xD,IAAA1iC,YACAqiC,EAAAO,SAAA5tD,YAAAhE,KAAA0xD,IAAA1iC,gBACA,CAMA,GAAAwF,GAAAx0B,KAAA0xD,IAAAzxC,SAAA8P,QAAAA,GAAAE,MACA1mB,OAAAlI,EAAA4F,OAAAutB,GAEAjrB,MAAAX,IAAA4rB,EAAA5rB,IACAW,MAAAF,IAAAmrB,EAAAnrB,IACAE,MAAAT,IAAA0rB,EAAA1rB,IACAS,MAAAwsB,MAAA,KACA/1B,KAAAszB,OAAA/E,UAAAhlB,MAAAvJ,KAAA0xD,IAAA1iC,aA4EA,QAAA6iC,KACA,GAAA7oD,GAAAhJ,KAAA8zB,SAAA,KAAA3mB,OACAqa,EAAArf,EAAAgsB,OAAA,GAAA29B,GAAA9xD,KAAAgxD,OAAAhoD,EAKA,OAFAhJ,MAAAsxD,KAAAzmC,OAAA1iB,EAAAe,IAAAse,EAAA,QAAAxnB,KAAAsxD,KAAAzmC,OACA7qB,KAAAsxD,KAAAxmC,QAAA3iB,EAAAe,IAAAse,EAAA,SAAAxnB,KAAAsxD,KAAAxmC,QACAtD,EAGA,QAAAvU,GAAAzK,EAAAupD,EAAAt/C,EAAA+hB,EAAAxrB,EAAAK,GACA,GAAA1I,GAAAoF,EAAA9C,EAAAukB,EAAAqQ,EAAAwf,CAEA,KAAA12C,EAAA,EAAAsC,EAAAuF,EAAAxH,OAAAiC,EAAAtC,IAAAA,EACAk3B,EAAArvB,EAAA7H,GACA6mB,EAAAuqC,EAAA/xD,KAAAgyD,KAAAjsD,EAAAgsD,EAAAl6B,IAAA7uB,EAAArI,GACA02C,EAAA7vB,GAAA,GAAAA,EAAAqqC,EAAA9wD,KAAAf,OAAA,GACAwnB,EAAA9P,OAAA2/B,EAAApjB,EAAA4iB,MAAA5iB,EAAA6iB,OACAtvB,EAAAqQ,MAAAA,EACA1vB,EAAAe,IAAAse,EAAA,MAAAzhB,GACA/F,KAAAgyD,KAAAjsD,GAAAyhB,EACA/U,EAAAlP,KAAAikB,GACA6vB,EAAA7iB,EAAA5rB,IAAArF,KAAAikB,KACAne,GAAAA,GAAAA,EAAAwuB,EAAA7E,OAAAwB,EAAAnrB,IAAA9F,KAAAikB,GAIA,QAAAyqC,GAAA1oD,EAAAf,EAAA0pD,GACA,GAMAvxD,GAAAoF,EAAA9C,EAAAukB,EANAgN,EAAAnzB,EAAA4F,OAAAsC,GACAwoD,EAAAI,EAAAnyD,KAAAsxD,KAAAvrD,KAAA,OAEAsD,GADAE,EAAAX,IACAW,EAAAF,KACAP,EAAAS,EAAAT,IACA2J,IAOA,KAAA9R,EAAA,EAAAsC,EAAA6F,EAAA9H,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAxnB,KAAAgyD,KAAAjsD,EAAAgsD,EAAAjpD,EAAAnI,KACA6mB,EAAA9P,OAAAuc,EAAA8iB,KACAtkC,EAAAlP,KAAAikB,GACAgN,EAAA1rB,IAAAvF,KAAAikB,GACAxnB,KAAAgyD,KAAAjsD,GAAA,IAKA,OAFAkN,GAAAlS,KAAAf,KAAAwI,EAAAupD,EAAAt/C,EAAA+hB,EAAA,KAAArsB,EAAAmsB,MAAA49B,EAAA1pD,EAAAa,IAEArJ,KAAAgxD,MAAAlhC,MAAArd,EAAA+hB,EAGA,QAAA49B,GAAA7oD,EAAAf,EAAA0pD,GACA,GAIAvxD,GAAAsC,EAAAukB,EAJAgN,EAAAnzB,EAAA4F,OAAAsC,GACAwoD,EAAAI,EAAAnyD,KAAAsxD,KAAAvrD,KACAiD,EAAAhJ,KAAAgxD,MAAAlhC,UACArd,IAGA,KAAA9R,EAAA,EAAAsC,EAAA+F,EAAAhI,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAxe,EAAArI,GACA6mB,EAAA9P,OAAAuc,EAAA8iB,KACAgb,IAAA/xD,KAAAgyD,KAAAxqC,EAAAzhB,KAAAyhB,EAKA,KAFAvU,EAAAlS,KAAAf,KAAAwI,EAAAupD,EAAAt/C,EAAA+hB,EAAAxrB,EAAAkpD,EAAA/pD,EAAAmsB,MAAA9rB,GAAA,MAEA7H,EAAA,EAAAsC,EAAA+F,EAAAhI,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAxe,EAAArI,GACA6mB,EAAA9P,SAAAuc,EAAA8iB,OACA5uC,EAAAe,IAAAse,EAAA,MAAAuqC,EAAAvqC,EAAAzhB,IAAA/F,KAAAqyD,OAAArxD,QACAyR,EAAAyH,OAAA,EAAA,EAAAsN,GACAgN,EAAA1rB,IAAAvF,KAAAikB,GAIA,OAAAxnB,MAAAgxD,MAAAlhC,MAAArd,EAAA+hB,EAGA,QAAA29B,GAAApsD,GACA,GAAA,MAAAA,EAAA,MAAA,KACA,IAAAxG,GAAAkb,EAAApV,MAAAU,GAAAM,IAAAoU,EAAAjO,SACA,OAAA,UAAAlG,GACA,IAAA,GAAAhG,GAAA,GAAAK,EAAA,EAAAP,EAAAb,EAAAyB,OAAAZ,EAAAO,IAAAA,EACAA,EAAA,IAAAL,GAAA,KACAA,GAAAmkB,OAAAllB,EAAAoB,GAAA2F,GAEA,OAAAhG,IA1RA,GAAAma,GAAA/Z,EAAA,WACAc,EAAAd,EAAA,oBACAyvB,EAAAzvB,EAAA,aACAqwD,EAAArwD,EAAA,aACAoxD,EAAApxD,EAAA,UACAssC,EAAAtsC,EAAA,iBACAyH,EAAAzH,EAAA,qBACAW,EAAAX,EAAA,yBACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAMAiF,EAAA/D,EAAAgE,UAAA,GAAApE,EAEAmE,GAAAiG,KAAA,SAAAgnB,EAAAmY,EAAA8M,EAAAtvB,EAAA+pC,EAAAC,GAuCA,MAtCA/wD,GAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAlD,QAAA,GACAoD,WAAA,GAEA9yB,KAAAsxD,KAAAvmB,EACA/qC,KAAAgxD,MAAAnZ,EACA73C,KAAAyxD,OAAA1mB,EAAA6L,KAAA7L,EAAA6L,KAAApuC,KAAA,OAAA+pD,EACAvyD,KAAA0xD,IAAAj3C,EAAAlU,SAAAvG,KAAAyxD,OAAA7+B,EAAApqB,KAAAxI,KAAAyxD,OAAA,KACAzxD,KAAAgyD,QAEAhyD,KAAA8zB,UAAA,EAEA+jB,EAAA9M,IAAAA,EACA8M,EAAA0H,SAAAxU,EAAA/5B,KACA6mC,EAAA+P,cAAA7c,EAAA6c,eAAA,GACA/P,EAAA/nB,SAEA9vB,KAAAwyD,QAAAjqC,EACAvoB,KAAAwxD,WAAAc,EAEAvnB,EAAA6L,OAAA7L,EAAA6L,KAAAiB,MAAA9M,EAAA6L,KAAAzJ,WAAApC,EAAA6L,KAAAxJ,SACAgkB,EAAArwD,KAAAf,MAKAA,KAAA2xD,SAAA3xD,KAAAsxD,KAAAtgD,OAAAijB,EAAAg9B,MACAjxD,KAAAyyD,SAAA,GAAAtiC,GAAAnwB,KAAAszB,OAAAtzB,KAAAgxD,OACAhxD,KAAA4xD,SAAA,GAAAb,GAAA/wD,KAAAszB,OAAAtzB,KAAAgxD,OAEAhxD,KAAA0xD,KAAA1xD,KAAAyyD,SAAAx8B,WAAAhC,EAAAiC,KAAAl2B,KAAAyxD,OAIAzxD,KAAAi2B,WAAAhC,EAAAiC,KAAAl2B,KAAAyyD,SAAAx8B,WAAAhC,EAAAiC,OACAl2B,KAAAi2B,WAAAhC,EAAA0C,OAAA32B,KAAAyyD,SAAAx8B,WAAAhC,EAAA0C,SACA32B,KAAAi2B,WAAAhC,EAAAkC,QAAAn2B,KAAAyyD,SAAAx8B,WAAAhC,EAAAkC,UAEAn2B,MAGA2F,EAAAoqB,QAAA,SAAAnU,GACA,MAAAxQ,WAAApK,SAIAhB,KAAA8zB,UAAAlY,GACA5b,KAAAqyD,OAAAlmD,QAAA,SAAA7F,GAAA6G,SAAA7G,EAAA0tB,QAAA1tB,EAAA0tB,MAAAC,EAAAC,YAGAl0B,KAAA8zB,SAAA9zB,KAAA8zB,UAAAlY,EACA5b,MATAA,KAAA8zB,UA8DAnuB,EAAAqoB,SAAA,WACA,OAAAhuB,OAGA2F,EAAAyoB,QAAA,WACA,GAAAskC,GAAA1yD,IAYA,OAVAA,MAAAszB,OAAAlF,QAAApuB,KAAAguB,YACAhuB,KAAAyyD,SAAAx8B,WAAAhC,EAAA0C,QAAAxqB,QAAA,SAAA7L,GACAoyD,EAAAF,QAAAtnB,MAAA5qC,GAAA0D,YAAA0uD,KAGA1yD,KAAAwyD,UACAxyD,KAAA2xD,SAAA3xD,KAAAgE,YAAAhE,KAAAwyD,QAAA3+B,YACA7zB,KAAA4xD,SAAA5tD,YAAAhE,KAAAwyD,QAAA3+B,aAGA7zB,MAGA2F,EAAAuoB,WAAA,WACA,GAAAwkC,GAAA1yD,IACA,OAAAA,MAAAg2B,WAAAh1B,QAEAQ,EAAAoE,UAAAsoB,WAAAntB,KAAAf,MACAA,KAAAszB,OAAApF,WAAAluB,KAAAguB,YACAhuB,KAAAyyD,SAAAx8B,WAAAhC,EAAA0C,QAAAxqB,QAAA,SAAA7L,GACAoyD,EAAAF,QAAAtnB,MAAA5qC,GAAA6D,eAAAuuD,KAEA1yD,MAPAA,MAUA2F,EAAA0rD,QAAA,SAAA9sD,GACA,MAAAvE,MAAAwyD,QAAA/kB,MAAAlpC,EAAAvE,KAAAwxD,aAGA7rD,EAAAgqB,SAAA,SAAApmB,GACAqmB,EAAArmB,GAAA,WAAAvJ,KAAAyxD,MAAAzxD,KAAAsxD,KAAAtgD,MAEA,IAAAwjB,GAAA09B,EAAAS,EAAAnqD,CA8BA,OA5BAxI,MAAA0xD,KACAl9B,EAAAnzB,EAAA4F,OAAAsC,GAKAf,EAAAiS,EAAAtB,UAAAqb,EAAAhsB,YACAgsB,GAAAhsB,KAAAxI,KAAA0xD,IAAAntD,QACA2tD,EAAAlyD,KAAAyyD,SAAAr8B,WAAA5B,GACAA,EAAAhsB,KAAAA,EAIA0pD,IAAA19B,EAAAnrB,IAAArJ,KAAAgxD,MAAAlhC,MAAAljB,SAEA+lD,EAAA3yD,KAAA0xD,IAAAzhC,OACA0iC,EAEAA,EAAA58B,MAAA/1B,KAAAm1B,SACAX,EAAAy9B,EAAAlxD,KAAAf,KAAA2yD,EAAA3yD,KAAA0xD,IAAA/nD,SAAAuoD,IAFA19B,EAAA1D,QAAA,IAKAohC,EAAAlyD,KAAAyyD,SAAAr8B,WAAA7sB,GACAf,EAAAiS,EAAAhU,WAAAzG,KAAAsxD,KAAA1a,MAAA52C,KAAAsxD,KAAA1a,QAAA3iB,EAAAC,UACAM,EAAA49B,EAAArxD,KAAAf,KAAAuJ,EAAAf,EAAA0pD,IAGA19B,EAAAx0B,KAAAszB,OAAA3D,SAAA6E,EAAAx0B,KAAAyyD,UACAzyD,KAAA2xD,SAAA3xD,KAAAszB,OAAA3D,SAAA6E,EAAAx0B,KAAA4xD,UAAAp9B,GA+FA/0B,EAAAD,QAAAoC,IrEosXG6sB,mBAAmB,GAAGC,wBAAwB,GAAG8pB,oBAAoB,GAAGkE,gBAAgB,GAAGzpB,oBAAoB,IAAI5F,gBAAgB,IAAIulC,YAAY,GAAGC,YAAY,GAAGC,SAAS,GAAGnwD,QAAU,KAAKowD,IAAI,SAASryD,EAAQjB,EAAOD,GsE39X/N,QAAA2wB,GAAAyC,EAAAilB,GACA,GAAA5lB,GAAA4lB,EAAA9M,IAAA5Q,eACA5K,EAAA0C,EAAA1C,MAaA,OAXA/tB,GAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GAEA5yB,KAAAgxD,MAAAnZ,EAEAtoB,IACAvvB,KAAAi2B,WAAAhC,EAAAiC,KAAA3G,EAAA/mB,MACAxI,KAAAi2B,WAAAhC,EAAA0C,OAAApH,EAAAwH,QACA/2B,KAAAi2B,WAAAhC,EAAAkC,QAAA5G,EAAAF,SACArvB,KAAAi2B,WAAAhC,EAAAyC,OAAAnH,EAAArqB,SAGAlF,KAwDA,QAAA06C,GAAAx5B,EAAAsG,EAAAqI,EAAAyF,EAAAE,EAAAw9B,GACA,GAAAC,GAAA/xC,EAAAw5B,MACAuY,GAAAlyD,KAAAkyD,EAAAzrC,EAAAA,EAAAqwB,KAAA/M,OAAAtjB,EAAAqI,EAAAyF,EAAAE,EAAAw9B,GAhFA,GAAAv4C,GAAA/Z,EAAA,WACAc,EAAAd,EAAA,oBACAgpB,EAAAhpB,EAAA,kBACAuzB,EAAAvzB,EAAA,qBACAkvB,EAAAlvB,EAAA,iBACAwyD,KAoBAvtD,EAAAwqB,EAAAvqB,UAAA,GAAApE,EAEAmE,GAAAgqB,SAAA,SAAApmB,GACAqmB,EAAArmB,GAAA,WAAAvJ,KAAAgxD,MAAAjmB,IAAA/5B,MACA,IAUArQ,GAAAsC,EAAAukB,EAAAtG,EAVA0R,EAAA5yB,KAAAszB,OAEArB,GADAjyB,KAAAgxD,MAAAlhC,MACA9vB,KAAAgxD,MAAAjmB,IAAA5Q,gBACAkd,EAAAplB,EAAAolB,MACA9nB,EAAA0C,EAAA1C,OACA+nB,EAAArlB,EAAAqlB,KACA0b,EAAAhzD,KAAAszB,OAAAxF,aACA0H,EAAA5C,EAAA/B,eACAyE,EAAA1C,EAAAlC,aACAxkB,EAAA3C,EAAA8N;;AAGA,GAAAnL,EAAA,CACA,GAAAgV,EAAA+Q,EAAA/lB,GACA,IAAAvL,EAAA,EAAAsC,EAAAsG,EAAAF,IAAArI,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAje,EAAAF,IAAA1I,GACA+5C,EAAA35C,KAAAf,KAAAkhB,EAAAsG,EAAAje,EAAAsmB,MAAAyF,EAAAE,EAAAw9B,EAIA,OAAAzpD,GAIA,IAAA5I,EAAA,EAAAsC,EAAAsG,EAAAT,IAAA9H,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAje,EAAAT,IAAAnI,GACA4uB,GAAAmrB,EAAA35C,KAAAf,KAAAuvB,EAAA/H,EAAAje,EAAAsmB,MAAAyF,EAAAE,EAAAw9B,GACA1b,GAAAoD,EAAA35C,KAAAf,KAAAs3C,EAAA9vB,EAAAje,EAAAsmB,MAAAyF,EAAAE,EAAAw9B,GACAzpD,EAAAsmB,QAAAynB,EAAA/tC,EAAAsmB,MAAApP,YAAA+G,EAAA0rC,GACA3pD,EAAAsmB,OAAArI,EAAA9d,QAGA,KAAA/I,EAAA,EAAAsC,EAAAsG,EAAAX,IAAA5H,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAje,EAAAX,IAAAjI,GACA02C,GAAAqD,EAAA35C,KAAAf,KAAAq3C,EAAA7vB,EAAAje,EAAAsmB,MAAAyF,EAAAE,EAAAw9B,GACAzjC,GAAAmrB,EAAA35C,KAAAf,KAAAuvB,EAAA/H,EAAAje,EAAAsmB,MAAAyF,EAAAE,EAAAw9B,GACAxrC,EAAA9P,OAAAuc,EAAA6iB,MAGA,IAAAvnB,EACA,IAAA5uB,EAAA,EAAAsC,EAAAsG,EAAAF,IAAArI,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAje,EAAAF,IAAA1I,GACA+5C,EAAA35C,KAAAf,KAAAuvB,EAAA/H,EAAAje,EAAAsmB,MAAAyF,EAAAE,EAAAw9B,EAIA,OAAAzpD,IAUA5D,EAAAywB,WAAA,SAAAR,GACA,GAAA3D,GAAAjyB,KAAAgxD,MAAAjmB,IAAA5Q,eACA5K,EAAA0C,EAAA1C,MAEA,OAAAqG,GAAAve,SACA7V,EAAAoE,UAAAwwB,WAAAr1B,KAAAf,KAAA41B,KACArG,EAAAA,EAAAuB,QAAA,IAIAX,EAAAZ,OAAA,SAAAqD,EAAA/C,EAAAxY,EAAAyY,GACAA,EAAArV,EAAApV,MAAAyqB,EACA,IAGAnvB,GAAAsC,EAAAukB,EAAAyK,EAAA/Q,EAHA8xC,EAAApgC,EAAA9E,aACAwH,EAAA1C,EAAAlC,aACA8E,EAAA5C,EAAA/B,cAGA,KAAAlwB,EAAA,EAAAsC,EAAA6sB,EAAA9uB,OAAAiC,EAAAtC,IAAAA,EACA6mB,EAAAsI,EAAAnvB,GACAsxB,EAAAzK,EAAAqwB,KAAA9M,IAAA5Q,WACAjZ,EAAA+Q,GAAAA,EAAA5a,GACA6J,IACAw5B,EAAA35C,KAAA,KAAAmgB,EAAAsG,EAAAqI,EAAAyF,EAAAE,EAAAw9B,GACAtpC,EAAAlC,KAAAA,KAMA/nB,EAAAD,QAAA2wB,ItEo+XG1B,mBAAmB,GAAGyiC,iBAAiB,IAAIj+B,oBAAoB,IAAI5F,gBAAgB,IAAI1qB,QAAU,KAAKwwD,IAAI,SAASzyD,EAAQjB,EAAOD,GuE7kYrI,QAAAqC,KAOA,MANA7B,MAAAozD,aACApzD,KAAAqzD,QAAA,KACArzD,KAAAszD,UAAA,KAEAtzD,KAAAuzD,WACAvzD,KAAAkrC,MAAAA,EAAAhrB,KAAAlgB,MACAoL,UAAApK,OAAAhB,KAAA4L,KAAAgZ,MAAA5kB,KAAAoL,WAAApL,KAoEA,QAAAwzD,GAAAjqD,GACA,GAGA5I,GAAAsC,EAAA6nC,EAAA9c,EAAA+c,EAHA2nB,EAAA1yD,KACAyzD,EAAAzzD,KAAAsxD,KAAAnjC,OAAAnuB,KAAAsxD,KAAAnjC,MAAAntB,OAAA,EACA0yD,EAAA1zD,KAAAsxD,KAAAzmB,MAAA7qC,KAAAsxD,KAAAzmB,KAAA7pC,OAAA,EACA2yD,GAAA,CAEA,KAAAhzD,EAAA,EAAAsC,EAAAsG,EAAAX,IAAA5H,OAAAiC,EAAAtC,IAAAA,EACAmqC,EAAAvhC,EAAAX,IAAAjI,GACA8yD,GAAAG,EAAA7yD,KAAAf,KAAAuJ,EAAAuhC,GACA4oB,GAAAG,EAAA9yD,KAAAf,KAAAuJ,EAAAuhC,EAIA,KAAAnqC,EAAA4I,EAAAX,IAAA5H,OAAA,EAAAL,GAAA,IAAAA,EAEA,IADAmqC,EAAAvhC,EAAAX,IAAAjI,GACAiG,EAAA5G,KAAAozD,UAAAtoB,EAAA9X,KAAAhyB,OAAA,EAAA4F,GAAA,IAAAA,EACA4K,EAAAxR,KAAAozD,UAAAtoB,EAAA9X,KAAApsB,GACA4K,EAAAkhD,QAAAtkC,UACAJ,EAAAxc,EAAAkhD,QAAA1kC,WACA+c,EAAAv5B,EAAAkhD,QAAApB,KAKAqC,EAAA5oB,EAAA/5B,OAAAijB,EAAAg9B,MACA0C,EAAAA,GAAAxmD,SAAAnN,KAAAszB,OAAA9qB,KAAAgJ,EAAAolC,MACA+c,EAAAA,GAAA,GAAA3lC,EAAAA,EAAAhtB,OAAA,GAAAkxB,YAAAlxB,OACAwQ,EAAAmiD,OAAAA,EAEAA,EAAAniD,EAAAkhD,QAAA/iC,SAAApmB,GACAvJ,KAAAszD,UAAAtvD,YAAAwN,EAAAkhD,QAIA,KAAA/xD,EAAA,EAAAsC,EAAAsG,EAAAF,IAAArI,OAAAiC,EAAAtC,IAAAA,EACAmqC,EAAAvhC,EAAAF,IAAA1I,GAEA8yD,GACAf,EAAAU,UAAAtoB,EAAA9X,KAAA7mB,QAAA,SAAAqF,GACAA,EAAAR,MAAAijB,EAAA6/B,MAAAtiD,EAAAmiD,QAAAxmD,SAAAulD,EAAAp/B,OAAA9qB,KAAAgJ,EAAAolC,OACA8b,EAAAY,UAAAnvD,eAAAqN,EAAAkhD,WAMAgB,IACAK,EAAArB,EAAAp/B,OAAAo/B,EAAApB,KAAAzmB,KAAAC,EAAAD,KAAAC,GACAA,EAAAD,KAAA1+B,QAAA,SAAA1L,EAAAE,GAAAF,EAAAsqC,QAIA,KAAApqC,EAAA,EAAAsC,EAAAsG,EAAAT,IAAA9H,OAAAiC,EAAAtC,IAAAA,EACAmqC,EAAAvhC,EAAAT,IAAAnI,GAEA+xD,EAAAU,UAAAtoB,EAAA9X,KAAA7mB,QAAA,SAAAqF,GACAkhD,EAAAY,UAAAnvD,eAAAqN,EAAAkhD,SACAlhD,EAAAkhD,QAAAxkC,qBAEAwkC,GAAAU,UAAAtoB,EAAA9X,IAGA,OAAAzpB,GAGA,QAAA2hC,GAAA3mC,EAAA2mC,GACA,GAAAJ,GAAA9qC,IACA,IAAA,IAAAoL,UAAApK,OAAA,MAAA8pC,GAAAyoB,QAAAhvD,GAAA2mC,EAAAA,CACA,MAAA,MAAAA,IACAA,EAAAJ,EAAAyoB,QAAAhvD,GACAumC,EAAAA,EAAA+M,KAAA/M,EAAA+M,KAAA/M,MAAAA,EAAA0nB,WAGA,MAAAtnB,GAGA,QAAA8oB,GAAAzqD,EAAAuhC,GACAlb,EAAArmB,GAAA,iBAAAuhC,EAAA9X,MAEA8X,EAAAyoB,QAAAzoB,EAAAyoB,YACAzoB,EAAAI,MAAAA,EAAAhrB,KAAA4qB,GAEAA,EAAAhb,MAAAgb,EAAAhb,UACA9vB,KAAAozD,UAAAtoB,EAAA9X,KAAAhzB,KAAAozD,UAAAtoB,EAAA9X,SAEA8X,EAAAD,KAAAC,EAAAD,SACAC,EAAAoc,UAAApc,EAAAoc,cAGA,QAAA0M,GAAArqD,EAAAuhC,GACAlb,EAAArmB,GAAA,iBAAAuhC,EAAA9X,KACA,IAEA6kB,GAAAjB,EAAAqd,EAAAtzD,EAAAsC,EAAAsJ,EAFA4hB,EAAAnuB,KAAAsxD,KAAAnjC,KAIA,KAAAxtB,EAAA,EAAAsC,EAAAkrB,EAAAntB,OAAAiC,EAAAtC,IAAAA,EACAk3C,EAAA1pB,EAAAxtB,GACAi2C,EAAAiB,EAAAjB,SACAqd,EAAA,MAAAnpB,EAAAjT,MAAA7E,IACA8X,EAAAhb,MAAAnvB,IAAAmqC,MAAAA,GACAv+B,EAAAsrC,EAAA7mC,OAAAijB,EAAAg9B,MAAA,GAAApvD,GAAA,GAAAD,GACA2K,EAAAX,KAAA5L,KAAAszB,OAAAukB,EAAA/M,EAAAhb,MAAAnvB,GAAAX,KAAA8qC,EAAA9X,IAAAihC,GACAj0D,KAAAozD,UAAAtoB,EAAA9X,KAAAzvB,MACAmvD,QAAAnmD,EACAqqC,KAAAA,EAAApuC,OAAAouC,EAAAiB,KAAA,MAAA/M,EAAA9X,IAAA,IAAA4jB,EAAAiB,KAAAoc,GACAjjD,KAAAijB,EAAA6/B,OAKA,QAAAD,GAAAtqD,EAAAuhC,GACA,GAAAD,GAAAC,EAAAD,KACAqc,EAAApc,EAAAoc,UACAwL,EAAA1yD,IAEA+zD,GAAA/zD,KAAAszB,OAAAtzB,KAAAsxD,KAAAzmB,KAAAA,EAAAC,GACAD,EAAA1+B,QAAA,SAAA1L,EAAAE,GACA,GAAAuqC,GAAAwnB,EAAApB,KAAAzmB,KAAAlqC,GAAAuqC,MACAH,EAAAtqC,EAAAsqC,MACAx+B,EAAA,IAEA26C,GAAAvmD,IAAAmqC,MAAAA,EAAAopB,QAAAnpB,GACAx+B,EAAAw+B,EAAA/5B,OAAAijB,EAAAg9B,MAAA,GAAApvD,GAAA,GAAAD,GACA2K,EAAAX,KAAA8mD,EAAAp/B,OAAAyX,EAAAmc,EAAAvmD,GAAA+xD,GACAz8B,WAAAhC,EAAA0C,OAAAuU,GACAwnB,EAAAU,UAAAtoB,EAAA9X,KAAAzvB,MAAAmvD,QAAAnmD,EAAAyE,KAAAijB,EAAAkgC,KAAAjpB,MAAAA,MAjNA,GAAAzwB,GAAA/Z,EAAA,WACAc,EAAAd,EAAA,oBACA6E,EAAA7E,EAAA,yBACAkB,EAAAlB,EAAA,aACA0zD,EAAA1zD,EAAA,WACAqzD,EAAArzD,EAAA,iBACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAYAiF,EAAA9D,EAAA+D,UAAA,GAAAhE,EAEA+D,GAAAiG,KAAA,SAAAgnB,EAAAmY,EAAA8M,EAAAtvB,EAAA+pC,EAAAC,GACA,GAAAG,GAAA1yD,IAEAA,MAAAqzD,QAAA,GAAA7xD,GAAAoxB,IAEAmY,EAAAhU,YAAA5qB,QAAA,SAAA7L,GACAA,EAAAoyD,EAAAxnB,MAAA5qC,EAAAiE,KAAA,GAAA6vD,GAAAxhC,EAAAtyB,EAAAoyD,IACAA,EAAAW,QAAArvD,YAAA1D,KAGAN,KAAAszD,UAAA,GAAA9xD,GAAAoxB,GACA5yB,KAAAszD,UAAA3jC,SAAA6jC,EAAAtzC,KAAAlgB,KAEA,IAAA+2B,IAAAgU,EAAAF,UAAA1/B,OAAA,SAAAkpD,EAAA3sD,GACA,MAAA2sD,GAAA3sD,EAAAwjC,OAAA,EAAAmpB,MAQA,OANAr0D,MAAAszD,UAAAr9B,WAAAhC,EAAA0C,OAAAlc,EAAA3S,KAAAivB,IAIA/2B,KAAA6zB,WAAA,GAAAtuB,GAAAqtB,GAEAhxB,EAAAgE,UAAAgG,KAAAgZ,MAAA5kB,KAAAoL,YAGAzF,EAAAgqB,SAAA,SAAApmB,GACA,GAAAirB,GAAA5yB,EAAAgE,UAAA+pB,SAAA/K,MAAA5kB,KAAAoL,WACAsnD,EAAA1yD,IAGA,OADAw0B,GAAA5rB,IAAAuD,QAAA,SAAA2+B,GAAAkpB,EAAAjzD,KAAA2xD,EAAAl+B,EAAAsW,KACAtW,GAGA7uB,EAAAqoB,SAAA,WACA,OAAAhuB,KAAAA,KAAAqzD,QAAArzD,KAAAszD,UAAAtzD,KAAA6zB,WAAA7zB,KAAA4xD,WAGAjsD,EAAAuoB,WAAA,WACA,GAAAwkC,GAAA1yD,IASA,OARAya,GAAA3S,KAAA4qD,EAAAU,WAAAjnD,QAAA,SAAAmoD,GACA5B,EAAAU,UAAAkB,GAAAnoD,QAAA,SAAAqF,GACAkhD,EAAAY,UAAAnvD,eAAAqN,EAAAkhD,SACAlhD,EAAAkhD,QAAAxkC,iBAIAwkC,EAAAU,aACAxxD,EAAAgE,UAAAsoB,WAAAntB,KAAAf,OAGA2F,EAAA8nC,MAAA,SAAAlpC,EAAA+vD,GAKA,IAJA,GAEA7mB,GAFAt4B,EAAAnV,KAAAozD,UAAAkB,GACA3zD,EAAA,EAAAsC,EAAAkS,EAAAnU,OAGAiC,EAAAtC,IACA8sC,EAAAt4B,EAAAxU,GACA8sC,EAAAz8B,MAAAijB,EAAA6/B,MAAArmB,EAAAilB,QAAApB,KAAA/sD,MAAAA,KAFA5D,GAKA,MAAA8sC,GAAAilB,SAoIAjzD,EAAAD,QAAAqC,IvEwlYG0yD,wBAAwB,GAAG9lC,mBAAmB,GAAG+lC,gBAAgB,GAAGvhC,oBAAoB,IAAI5F,gBAAgB,IAAIonC,YAAY,GAAGC,UAAU,GAAG/xD,QAAU,KAAKgyD,IAAI,SAASj0D,EAAQjB,EAAOD,GwE7yY1L,QAAAsyD,GAAAja,GACA73C,KAAA63C,KAAAA,EAGA,GAAAjyC,GAAAksD,EAAAlsD,SAEAA,GAAAgvD,eAAA,SAAArwD,GACA,GAAA0tB,GAAAjyB,KAAA63C,KAAA9M,IAAA5Q,UACA,OAAAlI,IAAA,MAAAA,EAAA1tB,IAGAqB,EAAAivD,OAAA,SAAAn0C,EAAAlW,GACA,GAAA,IAAAkW,EAAA,MAAA1gB,KACA0gB,GAAAA,GAAA,EACA,IAAAm3B,GAAA73C,KAAA63C,KACA/M,EAAA+M,EAAA/M,MACAgqB,EAAA,MAAAtqD,EAAAqtC,EAAA/nB,MAAA7Y,QAAAjX,MAAAwK,EACAuqD,EAAAjqB,EAAAhb,MAAA7Y,QAAA4gC,GAAAn3B,CACA,OAAAoqB,GAAAhb,MAAAilC,GAAAjlC,MAAAglC,IAGAlvD,EAAAyrD,QAAA,SAAA3wC,GACA,GAAA,IAAAA,EAAA,MAAA1gB,KACA0gB,GAAAA,GAAA,EACA,IAAAm3B,GAAA73C,KAAA63C,KACAid,EAAAjd,EAAA/nB,MAAA7Y,QAAAjX,MAAA0gB,CACA,OAAAm3B,GAAA/nB,MAAAglC,IAGAlvD,EAAA8D,OAAA,WACA,GAAA8d,GAAAxnB,KACA8b,EAAA0L,EAAAqwB,KAAA/nB,MACAnvB,EAAAmb,EAAA7E,QAAAuQ,EAEA,OADA7mB,IAAA,IAAAA,IAAAmb,EAAA9a,OAAA,EAAA8a,EAAA6L,MAAA7L,EAAA5B,OAAAvZ,EAAA,IACA6mB,GAGA5hB,EAAAovD,MAAA,WACAh1D,KAAA6jD,YAAA7jD,KAAA6jD,UAAA,MACA7jD,KAAA63C,KAAAgM,YAAA7jD,KAAA63C,KAAAgM,UAAA,OAGApkD,EAAAD,QAAAsyD,OxE+yYMmD,IAAI,SAASv0D,EAAQjB,EAAOD,IAClC,SAAWM,GyE/0YX,QAAAs0D,GAAAxhC,EAAAmY,EAAAxiB,GAIA,MAHAvoB,MAAAsxD,KAAAvmB,EACA/qC,KAAAwyD,QAAAjqC,EACAvoB,KAAAk1D,UAAA,EACA1zD,EAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GAkCA,QAAAsY,GAAAJ,GACA,GAAAvmC,GAAAvE,KAAAsxD,KAAA/sD,KACAyE,EAAAzE,EAAA,QACAjE,EAAA60D,EAAAp0D,KAAAf,KAAA8qC,EAAAI,MAAA3mC,IACAoC,EAAArG,EAAA0Q,OAAAijB,EAAAmhC,QAAAC,EAAAC,EACAC,EAAAlkD,EAAAtQ,KAAAf,KAAA8qC,EAOA,OALAnkC,GAAA5F,KAAAf,KAAAM,EAAAi1D,EAAAzqB,GAEAA,EAAAI,MAAA3mC,EAAAjE,GACAwqC,EAAAI,MAAAliC,EAAA8hC,EAAAI,MAAAliC,IAAA1I,GAEAA,EAGA,QAAA60D,GAAAjqB,GACA,GAAAl6B,GAAAhR,KAAAsxD,KAAAtgD,MAAAijB,EAAAuhC,MACA,KAAAtqB,GAAAl6B,IAAAk6B,EAAAl6B,KAAA,CACA,GAAA08B,GAAA3rC,EAAAmpC,MAAAl6B,IAAAmC,EAAA+3B,MAAAl6B,EACA08B,IAAAjzB,EAAA1D,MAAA,4BAAA/F,IACAk6B,EAAAwC,KAAA18B,KAAAk6B,EAAAl6B,MAAAA,EACAk6B,EAAAuqB,UAAAz1D,KAAAsxD,KAAA/sD,KACA2mC,EAAAlX,SAEA,MAAAkX,GAGA,QAAAmqB,GAAAnqB,EAAAqqB,EAAAzqB,GACA,GAEA90B,GAAA5J,EAFA2+B,EAAA/qC,KAAAsxD,KACAtoD,EAAAkiC,EAAAlX,MACA0hC,GAAA,CAGAj7C,GAAAvG,SAAA62B,EAAA15B,SAAAoJ,EAAAtV,QAAA4lC,EAAA15B,SACAqkD,GAAA,EACAH,EAAAI,EAAA50D,KAAAf,KAAAi0B,EAAA2hC,MAAA7qB,EAAA15B,MAAA65B,EAAAJ,IAIA90B,EAAA2/C,EAAA50D,KAAAf,KAAAi0B,EAAA4hC,OAAA9qB,EAAA/0B,OAAAk1B,EAAAJ,GACA90B,IAAAyE,EAAA+J,MAAAxb,EAAAgN,OAAAA,KACAk1B,EAAAl1B,OAAAA,GACAhN,EAAAgN,OAAAA,EACAhW,KAAAk1D,UAAA,GAIAz6C,EAAA+J,MAAAxb,EAAAqI,MAAAkkD,KAEAnpD,EAAA,gBAAAmpD,GAAA,GACAnpD,GAAAmpD,EAAAv0D,OAAA,GAAA,IAAAu0D,EAAAv0D,QAAA00D,EACAxqB,EAAA75B,MAAAkkD,GACAxqB,EAAA+qB,OACA5qB,EAAA6qB,YAAAR,EAAAxqB,EAAA/Z,SAAA,GACA+Z,EAAA37B,OAAAjC,SAAA49B,EAAA37B,MACA87B,EAAA8qB,gBAAAT,EAAAxqB,EAAA/Z,SAAA,GAEAka,EAAA+qB,WAAAV,EAAAxqB,EAAA/Z,SAAA,GAGAhoB,EAAAqI,MAAAkkD,EACAv1D,KAAAk1D,UAAA,GAGA,QAAAI,GAAApqB,EAAAqqB,EAAAzqB,GACA,GAEA90B,GAAAkgD,EAFAnrB,EAAA/qC,KAAAsxD,KACAtoD,EAAAkiC,EAAAlX,KAIAhe,GAAA+0B,EAAA/5B,OAAAijB,EAAAkiC,SACAR,EAAA50D,KAAAf,KAAAi0B,EAAA4hC,OAAA9qB,EAAA/0B,OAAAk1B,EAAAJ,GACAsrB,EAAAr1D,KAAAf,KAAAkrC,EAAAJ,GACA90B,IAAAyE,EAAA+J,MAAAxb,EAAAgN,OAAAA,KACAk1B,EAAAl1B,OAAAA,GACAhN,EAAAgN,OAAAA,EACAhW,KAAAk1D,UAAA,GAKA,WAAAnqB,EAAA15B,QAAAkkD,EAAAA,EAAAtxC,WACAxJ,EAAA+J,MAAAxb,EAAAqI,MAAAkkD,KACArqB,EAAAH,EAAA37B,OAAA87B,EAAAmrB,WAAA,aAAA,SAAAd,GACAvsD,EAAAqI,MAAAkkD,EACAv1D,KAAAk1D,UAAA,EAIAl1D,KAAAm1B,OAAA,IACA4V,EAAAurB,UAAAvrB,EAAA/5B,OAAAijB,EAAAsiC,OAAArrB,EAAAorB,SAAAvrB,EAAAurB,UACAvrB,EAAAyrB,OAAAtrB,EAAAsrB,OAAA,GACAzrB,EAAA0rB,OACA1rB,EAAA/5B,OAAAijB,EAAAyiC,MACAR,EAAA/iD,EAAAoO,KAAAwpB,EAAA0rB,MACAP,GAAAz7C,EAAA1D,MAAA,0BAAAm/C,GACAhrB,EAAAurB,KAAAP,IAEAhrB,EAAAurB,UAKA,QAAAd,GAAAgB,EAAA5rB,EAAAG,EAAAJ,GACA,GAAA,MAAAC,EAAA,QACA,IAAAtwB,EAAAtV,QAAA4lC,GAAA,MAAAA,GAAA1kC,IAAAsqB,EAAAzQ,KAAAlgB,MAEA,IAOAW,GAAAi2D,EAAAhwD,EAAAiwD,EAAAx2D,EAAA6E,EAAA0xC,EAAApuC,EAAAV,EAPA/H,EAAAC,KAAA4yB,EAAA5yB,KAAAszB,OACAwjC,EAAA/rB,EAAA7lC,QAAAuV,EAAApV,MAAA0lC,GACAgsB,EAAA7rB,EAAAl6B,OAAAijB,EAAAmhC,SAAAlqB,EAAAl6B,OAAAijB,EAAAkiC,SACAa,EAAA,IAAAL,EACAM,EAAA/rB,EAAA8rB,GACAE,GAAA9xD,QACAkH,EAAAy+B,EAAAz+B,IAUA,KAPA2qD,IACAA,EAAA/rB,EAAA8rB,GAAA,GAAAG,GAAAvkC,GACAskC,EAAA9xD,OACA6xD,EAAAG,WAAA,GACAL,GAAAzqD,GAAA4qD,EAAA9xD,IAAA7B,KAAA+I,EAAA+qD,OAGA12D,EAAA,EAAAi2D,EAAAE,EAAA91D,OAAA41D,EAAAj2D,IAAAA,EAOA,GANAN,EAAAy2D,EAAAn2D,GACAi2C,EAAAv2C,EAAAmI,MAAA,MAAAsiC,EAAAjT,MAAA7E,IACAxqB,EAAAoqB,EAAApqB,KAAAouC,GACA7mB,SAAA,GACAE,SAEAznB,EAAAutB,OAAA/1B,KAAAm1B,QAAA,CAOA,GALAjwB,EAAAuV,EAAApV,MAAAhF,EAAAwc,OAAAxW,IAAA,SAAA9G,GACA,MAAAA,GAAAgpB,OAAA9N,EAAAjO,SAAAjN,EAAAgpB,QAAAuiB,EAAAjT,OACAt4B,IAGAw3D,EAGA,IAFAG,EAAA3yD,KAAA+H,EAAAA,EAAAuQ,MAAA,MACAo6C,EAAA/xD,OAAAgE,IAAA+tD,GAAAC,IACAtwD,EAAA,EAAAiwD,EAAA3xD,EAAAlE,OAAA61D,EAAAjwD,IAAAA,EACAqwD,EAAAK,SAAApuD,IAAA+tD,EAAA/xD,EAAA0B,IACA+oB,SAAAnnB,OAGA,KAAA5B,EAAA,EAAAiwD,EAAA3xD,EAAAlE,OAAA61D,EAAAjwD,IAAAA,EACAswD,EAAA3yD,KAAAW,EAAA0B,GACAswD,EAAA9xD,KAAA6uB,EAAAsjC,IAAAtjC,EAAAujC,KACAP,EAAA/xD,OAAAgE,IAAA+tD,GAAAC,IACAvnC,SAAAnnB,EAIAxI,MAAAi2B,WAAAhC,EAAAiC,KAAA0gB,GACAqgB,EAAAhhC,WAAAhC,EAAAkC,SAAAhqB,QAAA,SAAA7L,GAAAP,EAAAk2B,WAAAhC,EAAAkC,QAAA71B,KAIA,MADAkI,GAAAyuD,EAAAzuD,OACAuuD,GACAjvD,EAAA2S,EAAA3S,KAAAU,GACAwU,OAAA,SAAArV,GAAA,MAAA,OAAAa,EAAAb,KAEA2E,IACAA,EAAAA,EAAAmrD,MAAA9mC,OAAAiC,EAAA6C,UAAAnpB,EAAAmrD,MAAA9mC,QAAArkB,EAAAmrD,MACAnrD,GAAAA,GAAA2nB,EAAAyjC,KAAA,IAAA,KAAA,OAAAR,EAAA3yD,KACA+H,EAAAmO,EAAA/I,WAAApF,GACAxE,EAAAA,EAAAzB,IAAA,SAAAsB,GAAA,OAAA5B,IAAA4B,EAAA8yC,IAAAjyC,EAAAb,GAAA8yC,OACAnuC,KAAAA,GACAjG,IAAA,SAAAsB,GAAA,MAAAA,GAAA5B,OAKA+B,IAEAU,EAAAA,EAAA,IACA,OAAAA,MAAAA,EAAAyrB,EAAA0jC,WAAAltD,IAAAjC,EAAAyrB,EAAA0jC,WAAAjtD,MAIA,QAAAimB,GAAA7qB,GACA,GAAA4vB,GAAAp1B,EAAAwF,EAAA6qB,MACA,OAAArwB,IACAN,KAAAi2B,WAAAhC,EAAAkC,SAAAT,EAAAjb,EAAAoC,MAAAvc,IAAA,IACAN,KAAAszB,OAAAmC,UAAAC,IAFA5vB,EAKA,QAAAswD,GAAAlrB,EAAAJ,GACA,GACAvrB,GADAwrB,EAAA/qC,KAAAsxD,KACAt7C,GAAA,KAAA,KAkCA,OAhCA7I,UAAA49B,EAAA/0B,SACAA,EAAAyE,EAAAvG,SAAA62B,EAAA/0B,QACA2/C,EAAA50D,KAAAf,KAAAi0B,EAAA4hC,OAAA9qB,EAAA/0B,OAAAk1B,EAAAJ,GADA90B,GAIAuJ,EAAAvJ,EAAAhV,OAAA,EACAmM,SAAA49B,EAAA6sB,YAGA5hD,EAAA,GAFAyE,EAAAvG,SAAA62B,EAAA6sB,WACA7sB,EAAA6sB,UAAAjnC,OACAA,EAAA5vB,KAAAf,KAAA+qC,EAAA6sB,WAEAjC,EAAA50D,KAAAf,KAAAi0B,EAAA4hC,OAAA5hC,EAAAsjC,IAAAxsB,EAAA6sB,UAAA1sB,EAAAJ,GAAA,GAGAC,EAAA6sB,WAGAzqD,SAAA49B,EAAA8sB,YAGA7hD,EAAAuJ,GAFA9E,EAAAvG,SAAA62B,EAAA8sB,WACA9sB,EAAA8sB,UAAAlnC,OACAA,EAAA5vB,KAAAf,KAAA+qC,EAAA8sB,WAEAlC,EAAA50D,KAAAf,KAAAi0B,EAAA4hC,OAAA5hC,EAAAujC,IAAAzsB,EAAA8sB,UAAA3sB,EAAAJ,GAAA,GAGAC,EAAA8sB,WAGA9sB,EAAA/5B,OAAAijB,EAAA6jC,KAAA/sB,EAAA/5B,OAAAijB,EAAAyiC,OAAA3rB,EAAAgtB,MAAA5qD,SAAA49B,EAAAgtB,OACA/hD,EAAA,GAAApH,KAAAnE,IAAA,EAAAuL,EAAA,IACAA,EAAAuJ,GAAA3Q,KAAAlE,IAAA,EAAAsL,EAAAuJ,KAEAvJ,EAGA,QAAA3E,GAAAy5B,GACA,GAAAC,GAAA/qC,KAAAsxD,KACAiE,GAAA,KAAA,KAEA,IAAApoD,SAAA49B,EAAA15B,MACA,GAAA,gBAAA05B,GAAA15B,MACA,GAAA2mD,EAAAjtB,EAAA15B,OACAkkD,GAAA,EAAAzqB,EAAAC,EAAA15B,YACA,CAAA,IAAAtP,EAAAsP,MAAA05B,EAAA15B,OAIA,MADAoJ,GAAA1D,MAAA,sBAAAg0B,EAAA15B,OACAkkD,CAHAA,GAAAxzD,EAAAsP,MAAA05B,EAAA15B,WAKA,IAAAoJ,EAAAtV,QAAA4lC,EAAA15B,OACAkkD,EAAAxqB,EAAA15B,MAAAhL,IAAAsqB,EAAAzQ,KAAAlgB,WACA,CAAA,GAAAya,EAAAvG,SAAA62B,EAAA15B,OACA,MAAA,KAEAkkD,IAAA,EAAAxqB,EAAA15B,OAUA,GAPAlE,SAAA49B,EAAAktB,WACA1C,EAAA,GAAAxqB,EAAAktB,SAAAtnC,OAAAA,EAAA5vB,KAAAf,KAAA+qC,EAAAktB,UAAAltB,EAAAktB,UAEA9qD,SAAA49B,EAAAmtB,WACA3C,EAAAA,EAAAv0D,OAAA,GAAA+pC,EAAAmtB,SAAAvnC,OAAAA,EAAA5vB,KAAAf,KAAA+qC,EAAAmtB,UAAAntB,EAAAmtB,UAGA/qD,SAAA49B,EAAA9mB,QAAA,CACA,GAAAJ,GAAAknB,EAAA9mB,OACAxJ,GAAAvG,SAAA2P,KACAA,EAAApJ,EAAAjO,SAAAqX,EAAAhH,OAAAiuB,EAAAjT,QAEAhU,IAAA0xC,EAAAA,EAAAtxC,WAGA,MAAAsxC,GAxTA,GAAA96C,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACA3R,EAAAd,EAAA,oBACAy2D,EAAAz2D,EAAA,2BACAW,EAAAX,EAAA,yBAEAqB,GADArB,EAAA,iBACAA,EAAA,mBACAuzB,EAAAvzB,EAAA,qBAEAs3D,GAAAntC,MAAA,EAAAC,OAAA,GASAnlB,EAAAyuD,EAAAxuD,UAAA,GAAApE,EAEAmE,GAAAgqB,SAAA,SAAApmB,GACA,GAAAxJ,GAAAC,KACA+d,EAAA,SAAA+sB,GAAAI,EAAAnqC,KAAAhB,EAAA+qC,GAUA,OARA9qC,MAAAk1D,UAAA,EACA3rD,EAAAX,IAAAuD,QAAA4R,GACAxU,EAAAF,IAAA8C,QAAA4R,GAKA/d,KAAAk1D,WAAA3rD,EAAAwtB,OAAA/2B,KAAAsxD,KAAA/sD,MAAA,GACAlD,EAAA4F,OAAAsC,GAAA,IAKA5D,EAAAswB,WAAA,SAAAjlB,EAAAkmB,GACA,GAAA,GAAA9rB,UAAApK,OAAA,CACAk2B,EAAAzc,EAAApV,MAAA6xB,EACA,KAAA,GAAAv2B,GAAA,EAAAsC,EAAAi0B,EAAAl2B,OAAAiC,EAAAtC,IAAAA,EACAX,KAAAszB,OAAAtiB,GAAAijB,EAAAiC,KAAAjC,EAAAiC,KAAAjC,EAAAkkC,QAAAjhC,EAAAv2B,IACAqD,YAAAhE,KAAAwyD,SAIA,MAAAhxD,GAAAoE,UAAAqwB,WAAAl1B,KAAAf,KAAAgR,EAAAkmB,IA6QAz3B,EAAAD,QAAA40D,IzE41YGrzD,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4uB,mBAAmB,GAAGC,wBAAwB,GAAG0pC,0BAA0B,GAAG3lC,iBAAiB,IAAIQ,oBAAoB,IAAI5F,gBAAgB,IAAI1qB,QAAU,KAAK01D,IAAI,SAAS33D,EAAQjB,EAAOD,G0ErpZ7L,QAAA4wB,GAAA2B,EAAAC,GACAhyB,KAAA+xB,SAAAA,GAAA,IACA/xB,KAAAgyB,KAAAA,GAAA7e,GAAA6e,KAAAA,IAAA7e,GAAA6e,KAAA,gBACAhyB,KAAAs4D,SAAA7lD,KAAA,MAsDA,QAAArE,GAAAmqD,GAKA,IAJA,GAEA/wC,GAAAswB,EAAAv4C,EAAAW,EAAAS,EAAAP,EAFA0b,EAAA9b,KAAAs4D,QAAAtvD,EAAA8S,EAAA08C,EAAAxvD,EAAAyJ,KACAsf,EAAA/xB,KAAA+xB,SACAxiB,GAAA,EAEA,MAAAipD,EAAAxvD,EAAAwvD,EAAAA,EAAAxvD,EAAAyJ,KAKA,GAJA+U,EAAAgxC,EAAAhxC,KACAswB,EAAAtwB,EAAAswB,OAAA,EAEAv4C,GAAAg5D,EAAAzgB,GAAA/lB,EACA,EAAAxyB,EAAAgQ,GAAA,MAAA,CAIA,IAHAhQ,EAAA,IAAAA,EAAA,GACAW,EAAAs4D,EAAAxmC,KAAAzyB,GAEAoB,EAAA,EAAAP,EAAAo4D,EAAAx3D,OAAAZ,EAAAO,IAAAA,EACA6mB,EAAAgxC,EAAA73D,GAAA0T,UAAAmkD,EAAA73D,GAAAT,EAEAsnB,GAAAwtC,QACAyD,EAAAjxC,KAAAA,GAEA,IAAAjoB,GACAi5D,EAAA9uD,QAAA8d,EAAA9d,SACAV,EAAAyJ,KAAA+lD,EAAA/lD,KACA+lD,EAAAxvD,GAEAuG,GAAA,EAKA,MADAvP,MAAA8W,WACAvH,EA3FA,GAAApH,GAAAzH,EAAA,qBACA+3D,EAAA/3D,EAAA,kBACAuzB,EAAAvzB,EAAA,qBAQAkF,EAAAwqB,EAAAxqB,UAEA8yD,GACA34C,KAAA,EACAzK,IAAA,EAGA1P,GAAA6a,YAAA,SAAA+G,EAAA7d,EAAAosB,GACA,GAAAhwB,GAAAyyD,EAAA/lD,EAAAkmD,EAAA78C,EAAA,IAEA,KAAA/V,IAAA4D,GACA6uD,EAAAhxC,EAAAzhB,GACA0M,EAAA9I,EAAA5D,GACAyyD,IAAA/lD,IACAimD,EAAA3yD,IAAAoH,SAAAqrD,EAEArwD,EAAAe,IAAAse,EAAAzhB,EAAA0M,GACA,gBAAA+lD,IAAAlnD,SAAAknD,IAKAG,EAAAxlD,GAAAsN,YAAA+3C,EAAA/lD,GACAkmD,EAAAtkD,SAAAtO,GACA+V,IAAAA,OAAAvY,KAAAo1D,IALAxwD,EAAAe,IAAAse,EAAAzhB,EAAA0M,GAoBA,OAVA,QAAAqJ,GAAA0L,EAAA9P,SAAAuc,EAAA8iB,OACAj7B,MAGA,MAAAA,IACAA,EAAA0L,KAAAA,EACA1L,EAAAkW,KAAAxK,EAAAqwB,KAAA7lB,MAAAhyB,KAAAgyB,KACAlW,EAAArJ,KAAAzS,KAAAs4D,QAAA7lD,KACAzS,KAAAs4D,QAAA7lD,KAAAqJ,GAEA9b,MAGA4F,EAAA0J,MAAA,SAAAwH,GAEA,IADA,GAAA3W,GAAAH,KAAAgJ,EAAA7I,EAAAm4D,QAAAE,EAAAxvD,EAAAyJ,KACA,MAAA+lD,EAAAxvD,EAAAwvD,EAAAA,EAAAxvD,EAAAyJ,KACA+lD,EAAAhxC,KAAA9P,SAAAuc,EAAA8iB,OAAAyhB,EAAA9uD,QAAA,EAEAvJ,GAAA2W,SAAAA,EACA3D,GAAAylD,MAAA,SAAAL,GAAA,MAAAnqD,GAAArN,KAAAZ,EAAAo4D,MAoCA94D,EAAAD,QAAA4wB,I1E2pZGooB,oBAAoB,GAAG0Y,iBAAiB,IAAIj+B,oBAAoB,MAAM4lC,IAAI,SAASn4D,EAAQjB,EAAOD,IACrG,SAAWM,G2EpvZX,QAAAkrC,GAAA7f,GAmCA,QAAA4M,KACAm8B,EAAAljD,KAAA,KAoCA,QAAA8nD,GAAA5tB,GAEA,GAAA6tB,GAAAC,EAAA3nD,CACA,aAAA65B,EAAAl6B,MACA+nD,GAAA7tB,MAAAA,EAAAuqB,UAAA/0C,OAAA,GAAAwqB,EAAA+tB,YAAA,GACAD,EAAAD,IAEAA,GAAA7tB,MAAAA,EAAAuqB,UAAA/0C,OAAA,IACAs4C,GAAA9tB,MAAAA,EAAAuqB,UAAA,QAAA/0C,OAAA,KAEArP,EAAA6nD,EAAAhuB,GAGAvkC,EAAAwyD,YAAAxyD,EAAAwyD,UAAAC,KACAzyD,EAAAylC,aAAAzlC,EAAAylC,WAAAgtB,KACAzyD,EAAA2lC,aAAA3lC,EAAA2lC,WAAA8sB,KACAzyD,EAAA0yD,aAAA1yD,EAAA0yD,WAAAC,KACA3yD,EAAAqP,SAAArP,EAAAqP,OAAAujD,KACA5yD,EAAAlD,QAAAkD,EAAAlD,MAAA+1D,KACA7yD,EAAAwyD,UAAAh/B,WAAAkd,MAAAgO,QAAA/9C,MAAAvF,EAAAkpC,KAAAwuB,WAGAC,EAAAvuB,EAAAxkC,EAAAwyD,UAAAH,EAAAD,EAAA3mD,EAAAA,GACAsnD,EAAAvuB,EAAAxkC,EAAAylC,WAAA4sB,EAAAD,EAAAY,GACAD,EAAAvuB,EAAAxkC,EAAA2lC,WAAA0sB,EAAAD,EAAAa,GACAC,EAAA1uB,EAAAxkC,EAAA0yD,WAAAL,EAAAD,EAAAY,EAAA/tB,GAEAkuB,EAAA3uB,EAAAxkC,EAAAqP,OAAA3E,EAAA0oD,GACAC,EAAA7uB,EAAAxkC,EAAAlD,MAAA4N,EAAAk6B,GAGA9wB,EAAA9O,OAAAhF,EAAAwyD,UAAAh/B,WAAA5K,OAAA0qC,GACAx/C,EAAA9O,OAAAhF,EAAAylC,WAAAjS,WAAA5K,OAAA2qC,GACAz/C,EAAA9O,OAAAhF,EAAA2lC,WAAAnS,WAAA5K,OAAA4qC,GACA1/C,EAAA9O,OAAAhF,EAAA0yD,WAAAl/B,WAAA5K,OAAA6qC,GACA3/C,EAAA9O,OAAAhF,EAAAqP,OAAAmkB,WAAA5K,OAAA8qC,GACA5/C,EAAA9O,OAAAhF,EAAAlD,MAAA02B,WAAA5K,OAAA+qC,EAEA,IAAAnsC,IAAAxnB,EAAAwyD,UAAAxyD,EAAAylC,WAAAzlC,EAAA2lC,WAAA3lC,EAAA0yD,WAAA1yD,EAAAqP,OAAArP,EAAAlD,MACAgX,GAAA9O,OAAAuoD,GACAljD,KAAA,QACA42C,aAAA,EACAztB,YACAkd,OACAqD,OAAA6f,EACAxjC,QAAAmU,EAAAuqB,WACApmC,WAAA7mB,SAEA+mB,QACAmrB,OAAA6f,EACAxjC,QAAAmU,EAAAuqB,WACApmC,WAAA7mB,YAKA0rD,EAAA/lC,MAAAA,EAAA9nB,IAAA,SAAAM,GAAA,MAAAixC,GAAAzsB,EAAAxkB,KA/HA,GAAAukC,GACAC,EAAAppC,EAAAkpC,KAAAE,OACAzqB,EAAA,EACA6qB,EAAAxpC,EAAAkpC,KAAAM,YACA2oB,KACA7oB,EAAA,QACAC,GAAA,EACA7nC,EAAA,KACAk2D,EAAA53D,EAAAkpC,KAAAY,SACA+tB,EAAA73D,EAAAkpC,KAAAY,SACAkuB,EAAAh4D,EAAAkpC,KAAAY,SACAD,EAAA7pC,EAAAkpC,KAAAja,QACAwa,EAAA,KACAgvB,EAAA,KACA/uB,EAAA,KACAC,EAAA,EACA+uB,GAAA14D,EAAAkpC,KAAAiB,OACA+tB,KACAG,KACAF,KACAC,KACAG,KACAD,KACA1zD,GACAwyD,UAAA,KACA/sB,WAAA,KACAE,WAAA,KACA+sB,WAAA,KACArjD,OAAA,KACAvS,MAAA,MAGAwnC,IAyOA,OAnOAA,GAAAF,IAAA,WACAmpB,EAAAljD,MAAA8nD,EAAA5tB,GAGAO,EAAA+uB,EAAA,SAAAtvB,EAAAl6B,KACAmC,EAAAoO,KAAAxO,OAAAynD,GACArnD,EAAAJ,OAAAynD,GAFA,IAOA,IAAAE,GAAA,SAAAp0D,GAAA,OAAAkC,KAAAlC,IACAq0D,EAAA,MAAAnvB,EACAN,EAAAgB,MAAAhB,EAAAgB,MAAAtnB,MAAAsmB,EAAAuvB,GAAAvvB,EAAAl1B,SACAw1B,EACAovB,EAAAC,EAAA3vB,EAAAyvB,EAAAjvB,GAAArlC,IAAAq0D,EACAC,GAAAA,EAAAt0D,IAAAq0D,EACA,IAAArnD,GAAA,MAAAo4B,EAAAP,EAAAO,WAAAP,EAAAO,WAAA7mB,MAAAsmB,EAAAuvB,GAAAh2C,OAAAgnB,CACAkvB,GAAAxuD,QAAA,SAAA7F,GAAAA,EAAAw0D,MAAAznD,EAAA/M,EAAAkC,OACA,IAAAuyD,GAAAt3D,GAAAA,GAAA4C,IAAAq0D,KAWA,OATAxG,GAAA/lC,MAAA,GAAAyoB,KAAA,WAAA,MAAAtL,GAAAqvB,MACAzG,EAAA/lC,MAAA,GAAAyoB,KAAA,WAAA,MAAA+jB,IACAzG,EAAA/lC,MAAA,GAAAyoB,KAAA,WAAA,MAAAgkB,IACA1G,EAAA/lC,MAAA,GAAAyoB,KAAAsd,EAAA/lC,MAAA,GAAAyoB,KACAsd,EAAA/lC,MAAA,GAAAyoB,KAAA,WAAA,OAAA,IACAsd,EAAA/lC,MAAA,GAAAyoB,KAAA,WAAA,MAAAmkB,IACA7G,EAAAxzC,OAAAA,EACAwzC,EAAA/oB,OAAAA,EACA+oB,EAAA7oB,MAAAA,EACA6oB,GA8DAjpB,EAAAC,MAAA,SAAAxjC,GACA,MAAA0D,WAAApK,QACAkqC,IAAAxjC,IAAAwjC,EAAAxjC,EAAAqwB,KACAkT,GAFAC,GAKAD,EAAAE,OAAA,SAAAzjC,GACA,MAAA0D,WAAApK,QACAmqC,IAAAzjC,IACAyjC,EAAAzjC,IAAAszD,GAAAtzD,EAAA,GAAA3F,EAAAkpC,KAAAE,OACApT,KAEAkT,GALAE,GAQAF,EAAAxnC,MAAA,SAAAiE,GACA,MAAA0D,WAAApK,QACAyC,IAAAiE,IAAAjE,EAAAiE,EAAAqwB,KACAkT,GAFAxnC,GAKAwnC,EAAAiB,MAAA,WACA,MAAA9gC,WAAApK,QACAy5D,EAAArvD,UACA6/B,GAFAwvB,GAKAxvB,EAAAO,WAAA,SAAA9jC,GACA,MAAA0D,WAAApK,QACAwqC,EAAA9jC,EACAujC,GAFAO,GAKAP,EAAAQ,WAAA,SAAA/jC,GACA,MAAA0D,WAAApK,QACAw5D,IAAA9yD,IACA8yD,EAAA9yD,EACAqwB,KAEAkT,GALAuvB,GAQAvvB,EAAAY,SAAA,SAAAnkC,EAAAiL,GACA,IAAAvH,UAAApK,OAAA,MAAA24D,EACA,IAAAv5D,GAAAgL,UAAApK,OAAA,EACA25D,GAAAjzD,EACAkzD,EAAAx6D,EAAA,GAAAuS,EAAAgnD,EACA75B,EAAA1/B,EAAA,GAAAgL,UAAAhL,GAAAu5D,CAWA,QATAA,IAAAgB,GACAf,IAAAgB,GACAb,IAAAj6B,IACA/H,IAGA4hC,EAAAgB,EACAf,EAAAgB,EACAb,EAAAj6B,EACAmL,GAGAA,EAAAS,cAAA,SAAAhkC,GACA,MAAA0D,WAAApK,QACA0qC,GAAAhkC,EACAujC,GAFAS,GAKAT,EAAAvqB,OAAA,SAAAhZ,GACA,MAAA0D,WAAApK,QACA0f,EAAAjG,EAAAvG,SAAAxM,GAAAA,GAAAA,EACAujC,GAFAvqB,GAKAuqB,EAAAW,YAAA,SAAAlkC,GACA,MAAA0D,WAAApK,QACA4qC,KAAAlkC,IAAAkkC,GAAAlkC,EAAAqwB,KACAkT,GAFAW,GAKAX,EAAAM,YAAA,SAAA7jC,GACA,MAAA0D,WAAApK,QACAuqC,KAAA7jC,IAAA6jC,GAAA7jC,EAAAqwB,KACAkT,GAFAM,GAKAN,EAAAI,MAAA,SAAA3jC,GACA,MAAA0D,WAAApK,QACAqqC,IAAA3jC,IAAA2jC,EAAA3jC,EAAAqwB,KACAkT,GAFAI,GAKAJ,EAAAK,KAAA,SAAA5jC,GACA,MAAA0D,WAAApK,QACAsqC,IAAA5jC,IAAA4jC,EAAA5jC,EAAAqwB,KACAkT,GAFAK,GAKAL,EAAAyB,mBAAA,SAAAhlC,GACA,MAAA0D,WAAApK,QACAi5D,IAAAvyD,IAAAuyD,EAAAvyD,GACAujC,GAFAgvB,GAKAhvB,EAAAkB,oBAAA,SAAAzkC,GACA,MAAA0D,WAAApK,QACAk5D,IAAAxyD,IAAAwyD,EAAAxyD,GACAujC,GAFAivB,GAKAjvB,EAAAoB,oBAAA,SAAA3kC,GACA,MAAA0D,WAAApK,QACAm5D,IAAAzyD,IAAAyyD,EAAAzyD,GACAujC,GAFAkvB,GAKAlvB,EAAAsB,oBAAA,SAAA7kC,GACA,MAAA0D,WAAApK,QACAo5D,IAAA1yD,IAAA0yD,EAAA1yD,GACAujC,GAFAmvB,GAKAnvB,EAAAwB,gBAAA,SAAA/kC,GACA,MAAA0D,WAAApK,QACAs5D,IAAA5yD,IAAA4yD,EAAA5yD,GACAujC,GAFAqvB,GAKArvB,EAAA0B,iBAAA,SAAAjlC,GACA,MAAA0D,WAAApK,QACAq5D,IAAA3yD,IAAA2yD,EAAA3yD,GACAujC,GAFAovB,GAKApvB,EAAAlT,MAAA,WAAAA,KAEAkT,EAKA,QAAA4vB,GAAA3vB,EAAAgB,EAAAvlC,GAEA,GADAs0D,KACAt0D,GAAAulC,EAAAlrC,OAAA,EAAA,CAQA,IAPA,GACAi6D,GAIAr0D,EACAd,EANAwE,EAAA4wD,EAAAhwB,EAAAl1B,UAEArV,EAAA,GACAP,EAAA8rC,EAAAlrC,OACAsF,GAAA4lC,EAAA,GAAAA,EAAA,MAAAvlC,IAGAhG,EAAAP,GACA,IAAAwG,EAAAD,IAAAC,EAAA,IACAd,GAAAomC,EAAAvrC,GAAAiG,EAAAN,IAAAgE,EAAA,IACA2wD,EAAA13D,KAAAuC,EAIA,OAAAnF,EAAAiG,EAAA,IAAAA,EAAAD,IAAAb,GAAAomC,EAAAvrC,GAAAiG,EAAAN,GAAAgE,EAAA,IACA2wD,EAAA13D,KAAAuC,GAGA,MAAAm1D,GAGA,QAAAC,GAAAllD,GACA,GAAA1G,GAAA0G,EAAA,GAAAzG,EAAAyG,EAAAA,EAAAhV,OAAA,EACA,OAAAuO,GAAAD,GAAAA,EAAAC,IAAAA,EAAAD,GAGA,QAAA4pD,GAAAhuB,GACA,MAAAA,GAAAiwB,YACAjwB,EAAAiwB,cACAD,EAAAhwB,EAAA75B,SAiBA,QAAAwoD,GAAA1uB,EAAAqB,EAAAwsB,EAAAD,EAAA9vC,EAAAxM,GACAwM,EAAAra,KAAAlE,IAAAue,EAAA,GAAAxM,GACA,SAAA0uB,GAAA,QAAAA,KACAliB,GAAA,IAEA,QAAAkiB,GAAA,WAAAA,GACA1wB,EAAA9O,OAAA6gC,EAAArS,WAAAkd,OACA3vC,EAAAsxD,EACArmD,GAAArL,MAAA2hB,KAEAxO,EAAA9O,OAAA6gC,EAAArS,WAAA5K,QACA7nB,EAAAqxD,EACApmD,GAAArL,MAAA2hB,GACAm9B,OAAA9+C,MAAA,UACA++C,UAAA/+C,MAAA8zD,EAAAjwB,QAGA1wB,EAAA9O,OAAA6gC,EAAArS,WAAAkd,OACA3vC,GAAAJ,MAAA2hB,GACAtW,EAAAqmD,IAEAv+C,EAAA9O,OAAA6gC,EAAArS,WAAA5K,QACA7nB,GAAAJ,MAAA2hB,GACAtW,EAAAomD,EACA3S,OAAA9+C,MAAA+zD,EAAAlwB,IACAkb,UAAA/+C,MAAA,aAKA,QAAAoyD,GAAAvuB,EAAAe,EAAA8sB,EAAAD,EAAA9vC,GACA,GAAA3D,GAAA,SAAA6lB,GAAA,QAAAA,EAAA,GAAA,CAEAliB,GADAA,IAAA7W,EAAAA,EACA,QAAA+4B,GAAA,WAAAA,GACAtuB,OAAAiuB,MAAA,SAAAz8B,MAAA,GAAAktC,MAAAj2B,IACAzI,OAAAiuB,MAAA,QAAAz8B,MAAA,GAAAktC,MAAAj2B,IAEAhe,MAAAge,EAAA2D,GAEA,QAAAkiB,GAAA,WAAAA,GACA1wB,EAAA9O,OAAAugC,EAAA/R,WAAAkd,OACA3vC,EAAAsxD,EACArmD,GAAArL,MAAA,GACA0iB,GAAAf,IAEAxO,EAAA9O,OAAAugC,EAAA/R,WAAA5K,QACA7nB,EAAAqxD,EACApmD,GAAArL,MAAA,GACA0iB,GAAAf,IAEAxO,EAAA9O,OAAAugC,EAAA/R,WAAAmd,MACA5vC,EAAAqxD,MAGAt+C,EAAA9O,OAAAugC,EAAA/R,WAAAkd,OACA3vC,GAAAJ,MAAA,GACAyiB,GAAAd,EACAtW,EAAAqmD,IAEAv+C,EAAA9O,OAAAugC,EAAA/R,WAAA5K,QACA7nB,GAAAJ,MAAA,GACAyiB,GAAAd,EACAtW,EAAAomD,IAEAt+C,EAAA9O,OAAAugC,EAAA/R,WAAAmd,MACA3kC,EAAAomD,KAKA,QAAAiB,GAAA7uB,EAAA1nC,EAAA4N,EAAAqP,GACA,GAAA/Q,OAAA0B,EAAA,GAAAA,EAAA,IAAA,GACAiU,EAAA,QAAA6lB,GAAA,SAAAA,EAAA,GAAA,CAEA,YAAAA,GAAA,QAAAA,EACA1wB,EAAA9O,OAAAlI,EAAA02B,WAAA5K,QACA7nB,GAAAJ,MAAAqI,GACAgD,GAAArL,MAAAge,EAAA5E,GACA4J,OAAAhjB,MAAA,KAGAmT,EAAA9O,OAAAlI,EAAA02B,WAAA5K,QACA7nB,GAAAJ,MAAAge,EAAA5E,GACA/N,GAAArL,MAAAqI,GACA2a,OAAAhjB,MAAA,OAKA,QAAAwyD,GAAA3uB,EAAAn1B,EAAA3E,EAAA4X,GACA,GAAA0xB,IACA,QAAAxP,GAAA,SAAAA,KACAliB,EAAA,GAAAA,GAGA0xB,EADA,WAAAxP,GAAA,QAAAA,EACA,IAAA95B,EAAA,GAAA,IAAA4X,EAAA,MAAA5X,EAAA,GAAA,IAAA4X,EAEA,IAAAA,EAAA,IAAA5X,EAAA,GAAA,MAAAA,EAAA,GAAA,IAAA4X,EAEAjT,EAAAmkB,WAAA5K,OAAAorB,MAAArzC,MAAAqzC,GAGA,QAAA4f,GAAA/yC,EAAAsjB,EAAAjb,EAAAyF,EAAAjG,EAAAvB,GACA,GAAAvtB,GAAAsvB,KAAArI,EACA9G,EAAA8G,EAAAqwB,KAAA9M,IAAArqB,OACAyqB,EAAA3jB,EAAAqwB,KAAA9M,IAAAI,OACAtgB,EAAAigB,EAAAjgB,MACAC,EAAAggB,EAAAhgB,MAMA,QAJArQ,EAAAvG,SAAAwM,KACAA,GAAAoqB,EAAAI,MAAAxqB,EAAAwqB,OAAAxqB,EAAApZ,QAGA6jC,GACA,IAAA,OAAAsP,EAAAvxC,IAAA3I,EAAA,KAAAmgB,GAAA+5B,EAAAvxC,IAAA3I,EAAA,IAAA,EAAA,MACA,KAAA,QAAAk6C,EAAAvxC,IAAA3I,EAAA,IAAAsqB,EAAAnK,GAAA+5B,EAAAvxC,IAAA3I,EAAA,IAAA,EAAA,MACA,KAAA,SAAAk6C,EAAAvxC,IAAA3I,EAAA,IAAA,GAAAk6C,EAAAvxC,IAAA3I,EAAA,IAAAuqB,EAAApK,EAAA,MACA,KAAA,MAAA+5B,EAAAvxC,IAAA3I,EAAA,IAAA,GAAAk6C,EAAAvxC,IAAA3I,EAAA,KAAAmgB,EAAA,MACA,SAAA+5B,EAAAvxC,IAAA3I,EAAA,IAAA,GAAAk6C,EAAAvxC,IAAA3I,EAAA,IAAA,GAGAsvB,GAAAA,EAAApP,YAAA+G,EAAAjnB,GAGA,QAAA64D,KACA,OACApoD,KAAA,OACA42C,aAAA,EACA7hD,IAAA,OACAo0B,YACAkd,OACAgO,QAAA/9C,MAAAvF,EAAAkpC,KAAAqwB,WACA1W,aAAAt9C,MAAAvF,EAAAkpC,KAAAswB,WACAjW,SAAAh+C,MAAA,OAEAgwC,MAAAgO,SAAAh+C,MAAA,OACAioB,QAAA+1B,SAAAh+C,MAAA,MAKA,QAAAgyD,KACA,OACAtoD,KAAA,OACA42C,aAAA,EACA7hD,IAAA,OACAo0B,YACAkd,OACA+N,MAAA99C,MAAAvF,EAAAkpC,KAAAuwB,gBACAvY,MAAA37C,MAAAvF,EAAAkpC,KAAAwwB,eACAzY,UAAA17C,MAAAvF,EAAAkpC,KAAAywB,mBACApW,SAAAh+C,MAAA,MACAyY,MAAAlD,MAAA,UAEAy6B,MAAAgO,SAAAh+C,MAAA,OACAioB,QAAA+1B,SAAAh+C,MAAA,MAKA,QAAAkyD,KACA,OACAxoD,KAAA,OACA42C,aAAA,EACAztB,YACAkd,OACA4L,MAAA37C,MAAAvF,EAAAkpC,KAAA0wB,WACA3Y,UAAA17C,MAAAvF,EAAAkpC,KAAA2wB,eACA7Y,YAAAz7C,MAAAvF,EAAAkpC,KAAA4wB,iBACAzW,MAAA99C,MAAAvF,EAAAkpC,KAAA6wB,YACA1V,OAAA9+C,MAAA,UACA++C,UAAA/+C,MAAA,UACAyY,MAAAlD,MAAA,SAEA0S,YAKA,QAAAgqC,KACA,OACAvoD,KAAA,OACA42C,aAAA,EACAztB,YACAkd,OACA3vC,GAAAJ,MAAA,IACAqL,GAAArL,MAAA,IACA+9C,QAAA/9C,MAAAvF,EAAAkpC,KAAA8wB,WACAnX,aAAAt9C,MAAAvF,EAAAkpC,KAAA+wB,YAEAzsC,YApgBA,GAAApc,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAsH,EAAA/Z,EAAA,WACAqB,EAAArB,EAAA,kBACA+5C,EAAA/5C,EAAA,qBACAk3C,EAAAl3C,EAAA,iBA+QAs6D,GAAAj/C,IAAA,EAAAsQ,MAAA,EAAAC,OAAA,EAAAF,KAAA,GAqCAivC,GACA/uC,OAAA,SACAvQ,IAAA,SACAqQ,KAAA,QACAC,MAAA,QAGA+uC,GACA9uC,OAAA,MACAvQ,IAAA,SACAqQ,KAAA,SACAC,MAAA,SAsMA5sB,GAAAD,QAAAwrC,I3E6vZGjqC,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAGyjB,gBAAgB,GAAGxpC,iBAAiB,IAAI9vB,QAAU,KAAKu5D,IAAI,SAASx7D,EAAQjB,EAAOD,G4E/va7G,QAAA23D,GAAAvkC,GAyBA,MAxBAupC,GAAAv2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACAs3D,UAAAtmD,KAAA,kBAGAhR,KAAA2zB,SACAxsB,MAAA,QACAmW,IAAA,MACA7S,IAAA,MACAC,IAAA,MACA4C,IAAA,MACAC,KAAA,OACA+uD,MAAA,MACA3uD,MAAA,QACA4uD,KAAA,OACA3uD,OAAA,SACAC,OAAA,UAIA7N,KAAAw8D,WAAA,KACAx8D,KAAAy8D,aAAA,KACAz8D,KAAA08D,YAAA,EAEA18D,KAlCA,GAAAya,GAAA/Z,EAAA,WACA07D,EAAA17D,EAAA,eACAy7D,EAAAz7D,EAAA,aAGAi8D,GAFAj8D,EAAA,qBACAA,EAAA,yBACAA,EAAA,eACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBA8BAiF,EAAAwxD,EAAAvxD,UAAA,GAAAu2D,EAEAx2D,GAAAT,QACAgE,IAAA,SAAAikC,EAAAjoC,GACA,GAAAvE,GAAAsC,EAAA1D,EAAA8vB,IACA,KAAA1uB,EAAA,EAAAsC,EAAAiC,EAAAlE,OAAAiC,EAAAtC,IAAAA,EACApB,EAAA2F,EAAAvE,GACApB,EAAAgF,KAAAosB,SAAAtB,EAAA9vB,EAAAgF,KAAAosB,QAAA,GACAlW,EAAApV,MAAA9F,EAAA6F,KAAA+G,QAAA,SAAA5L,GAAAA,EAAAowB,SAAAtB,EAAA9uB,EAAAowB,QAAA,IAOA,OAJAwc,GAAAqvB,WAAAt3D,EACAioC,EAAAsvB,aAAA,KACAtvB,EAAA7kC,OACA6kC,EAAAlX,WAAAhC,EAAAkC,QAAA1b,EAAA3S,KAAAunB,IACA8d,IAIAxnC,EAAAyxD,UAAA,SAAA5lD,GACA,MAAApG,WAAApK,QACAhB,KAAA08D,WAAAlrD,EACAxR,MAFAA,KAAA08D,YAKA/2D,EAAA2C,KAAA,WACA,GAIA/I,GAAAoB,EAAA4D,EAAAa,EAAA4B,EAJAmmC,EAAAntC,KACA4yB,EAAA5yB,KAAAszB,OACApuB,EAAAlF,KAAAw8D,WACAl0D,EAAAtI,KAAAy8D,YAGA,IAAAn0D,EAAA,MAAAA,EAGA,KAFAA,EAAAtI,KAAAy8D,gBAEA97D,EAAA,EAAAA,EAAAuE,EAAAlE,OAAAL,IACApB,EAAA2F,EAAAvE,GACA,IAAApB,EAAA6F,IAAApE,SAEAuD,EAAAhF,EAAAgF,KAAAosB,OAAAiC,EAAA6C,UAAAl2B,EAAAgF,KAAAosB,QAAApxB,EAAAgF,KACAa,EAAAqV,EAAApV,MAAA9F,EAAA6F,IAAAurB,OAAAiC,EAAA6C,UAAAl2B,EAAA6F,IAAAurB,QAAApxB,EAAA6F,KACA4B,EAAA5B,EAAAiB,IAAA,SAAA5F,GAEA,MADAA,GAAAA,EAAAkwB,OAAAiC,EAAA6C,UAAAh1B,EAAAkwB,QAAAlwB,EACAk8D,EAAAl8D,GAAA8D,EAAA,IAAA4oC,EAAAxZ,QAAAlzB,MAEA6H,EAAA/E,MACAiJ,SAAAiO,EAAAjO,SAAAjI,GACAsY,MAAA7c,KAAA08D,WAAAzoC,EAAA0jC,UAAApzD,EACAyC,SAAA21D,EAAA11D,OAAAD,KAIA,OAAAsB,IAGA3C,EAAAi3D,OAAA,SAAArzD,EAAAirB,GAGA,MAFAx0B,MAAAy8D,aAAA,KACAz8D,KAAAsI,OACA6zD,EAAAv2D,UAAAg3D,OAAA77D,KAAAf,KAAAuJ,EAAAirB,IAGA7uB,EAAA8B,MAAA,SAAAC,GACA,MAAA1H,MAAA68D,IAAA33D,OAAAlE,OACAm7D,EAAAv2D,UAAA6B,MAAA1G,KAAAf,KAAA0H,IAAAI,QAAA/B,IAAA,KAGAJ,EAAAm3D,UAAA,SAAAp1D,EAAAC,GAMA,IALA,GAGAoE,GAHA9D,EAAAk0D,EAAAv2D,UAAAk3D,UAAA/7D,KAAAf,KAAA0H,EAAAC,GACAW,EAAAtI,KAAAsI,OACA3H,EAAA,EAAAsC,EAAAqF,EAAAtH,OAGAiC,EAAAtC,EAAAA,IACAoL,EAAAzD,EAAA3H,GACAsH,EAAA8D,EAAA8Q,OAAA,GAAA9Q,GAAA/E,SAAAiB,EAAAA,EAAAwyC,IAGA,OAAAxyC,IAGAtC,EAAAgD,KAAA,SAAAjB,GACA,GAGAqE,GAHAyF,EAAAxR,KAAA+H,MAAAL,GACAY,EAAAtI,KAAAsI,OACA3H,EAAA,EAAAsC,EAAAqF,EAAAtH,MAIA,KADAwQ,EAAAsS,MACA7gB,EAAAtC,EAAAA,IACAoL,EAAAzD,EAAA3H,GACA6Q,EAAAzF,EAAA8Q,OAAAjU,IAAAmD,EAAAS,SAAA9E,GAEA8J,GAAAurD,KAAA9oC,EAAAvuB,UAGAC,EAAAkD,KAAA,SAAAnB,GACA,GAGAqE,GAHAyF,EAAAxR,KAAA+H,MAAAL,GACAY,EAAAtI,KAAAsI,OACA3H,EAAA,EAAAsC,EAAAqF,EAAAtH,MAIA,KADAwQ,EAAAsS,MACA7gB,EAAAtC,EAAAA,IACAoL,EAAAzD,EAAA3H,GACA6Q,EAAAzF,EAAA8Q,OAAA/T,IAAAiD,EAAAS,SAAA9E,GAEA8J,GAAAurD,KAAA9oC,EAAAvuB,UAGAC,EAAAwnC,UAAA,SAAA5jC,EAAAwuB,GACAnI,EAAArmB,GAAA,cAEAvJ,KAAA68D,IAAA78D,KAAAs3D,SAAA9wD,IAAAxG,KAAAszB,OAEA,IAGA3yB,GAAAgH,EAAA6J,EAHAgjB,EAAA2nC,EAAAv2D,UAAAunC,UAAApsC,KAAAf,KAAAuJ,EAAAwuB,GACAzvB,EAAAtI,KAAAsI,OACArF,EAAAqF,EAAAtH,MAGA,KAAA2G,IAAA3H,MAAA8E,OAEA,GADA0M,EAAAxR,KAAA8E,OAAA6C,GAEA,IAAAhH,EAAA,EAAAsC,EAAAtC,EAAAA,IACA6Q,EAAAlJ,EAAA3H,GAAAkc,OAAA3T,KAIA,OAAAsrB,IAGA/0B,EAAAD,QAAA23D,I5E0waGzoC,wBAAwB,GAAG8pB,oBAAoB,GAAGvlB,oBAAoB,IAAI5F,gBAAgB,IAAI2vC,YAAY,GAAGC,cAAc,GAAGnzD,aAAa,IAAInH,QAAU,KAAKu6D,IAAI,SAASx8D,EAAQjB,EAAOD,G6E76a7L,QAAA29D,MAHA,GAAAf,GAAA17D,EAAA,eACA6E,EAAA7E,EAAA,yBAKAiF,EAAAw3D,EAAAv3D,UAAA,GAAAw2D,EAEAz2D,GAAAiG,KAAA,SAAAgnB,GAGA,MAFAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACA5yB,KAAA6zB,WAAA,GAAAtuB,GAAAqtB,GACA5yB,MAGA2F,EAAAwnC,UAAA,SAAA5jC,GAGAvJ,KAAA6zB,WAAAlE,SAAApmB,EACA,IAAAf,GAAAxI,KAAA6zB,WAAArrB,MACA,OAAAxI,MAAAo9D,eAAA7zD,EAAAf,IAGA7C,EAAAy3D,eAAA,SAAA7zD,EAAAf,KAGA/I,EAAAD,QAAA29D,I7Em7aG5I,wBAAwB,GAAG0I,cAAc,KAAKI,IAAI,SAAS38D,EAAQjB,EAAOD,G8Ex8a7E,QAAA89D,GAAA1qC,GAWA,MAVAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACA6c,OAAA7L,KAAA,SACAvG,KAAAuG,KAAA,SACAtG,KAAAsG,KAAA,SACA5C,MAAA4C,KAAA,SACAtC,SAAAsC,KAAA,QAAAusD,UAAA,MAGAv9D,KAAA2zB,SAAA6pC,IAAA,OACAx9D,KAfA,GAAAya,GAAA/Z,EAAA,WACA07D,EAAA17D,EAAA,eACAyH,EAAAzH,EAAA,qBAgBAiF,EAAA23D,EAAA13D,UAAA,GAAAw2D,EAEAz2D,GAAAwnC,UAAA,SAAA5jC,GAWA,QAAAgmB,GAAAjpB,GACA,GAAAR,GAAAqnC,EAAAtwB,MAAArW,MAAAgG,SAAAlG,EACAR,GAAA,MAAAA,EAAA,KACAyG,EAAA+C,MAAA/C,EAAA6B,SAAAtI,EAAAyG,EAAA+C,OAAA/C,EAAA6B,MACAjG,EAAAe,IAAA5C,EAAAkuB,EAAA1uB,EAAAyD,EAAAwsB,OAdA,GAAAoX,GAAAntC,KACAw0B,EAAAx0B,KAAA2zB,QAAA6pC,IAEAjxD,EAAAkO,EAAAvM,MACAzD,IAAAzK,KAAAyK,IAAAjE,MACAkE,IAAA1K,KAAA0K,IAAAlE,MACA4H,KAAApO,KAAAoO,KAAA5H,MACAkI,QAAA1O,KAAA0O,QAAAlI,OAaA,OAJA+C,GAAAX,IAAAuD,QAAAojB,GACAhmB,EAAAF,IAAA8C,QAAAojB,GACAhmB,EAAAT,IAAAqD,QAAAojB,GAEAhmB,GAGA9J,EAAAD,QAAA89D,I9E+8aG9kB,oBAAoB,GAAGykB,cAAc,GAAGt6D,QAAU,KAAK86D,IAAI,SAAS/8D,EAAQjB,EAAOD,G+Er/atF,QAAAk+D,GAAA9qC,GAcA,MAbAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACA29D,QAAA3sD,KAAA,QACA4sD,UAAA5sD,KAAA,QAAAusD,UAAA,UAGAv9D,KAAA2zB,SAAAvH,KAAA,IAAAC,MAAA,KACArsB,KAAA6zB,WAAA,GAAAtuB,GAAAqtB,GACA5yB,KAAA69D,SAAA,KACA79D,KAAA89D,UAAA,KACA99D,KAAA+9D,QACA/9D,KAAAg+D,UAEAh+D,KAAA0vB,QAAA,GAOA,QAAAunC,GAAAvvD,EAAAvH,GACA,GAAAqR,GAAAxR,KAAAg+D,OAAAt2D,EAAAsrB,KAAAhzB,KAAAg+D,OAAAt2D,EAAAsrB,OAAAxhB,KAAAlR,EAAAN,KAAAm1B,OACA3jB,GAAAA,EAAAjO,KAAApD,GAGA,QAAAyI,GAAA4rB,EAAApI,EAAA6xC,EAAAC,EAAAx2D,GAMA,IALA,GAGAvH,GAAAwS,EAAAqmB,EAHAxwB,EAAA4jB,EAAA6xC,EAAAj+D,KAAA6zB,WAAArrB,OACA7H,EAAA,EAAAsC,EAAAuF,EAAAxH,OACAgI,EAAAmE,SAAAzF,EAAAssB,MAAA,KAAA7mB,OAGAlK,EAAAtC,IAAAA,EACAgS,EAAAnK,EAAA7H,GACAq4B,EAAA5M,EAAA1kB,EAAAsrB,IAAA,IAAArgB,EAAAqgB,IAAArgB,EAAAqgB,IAAA,IAAAtrB,EAAAsrB,IACAhzB,KAAA+9D,KAAA/kC,KACAtxB,EAAAsrB,KAAArgB,EAAAqgB,KAAAkrC,KAEA/9D,EAAAgI,EAAAgsB,UAAAnrB,GACA7I,EAAAH,KAAA2zB,QAAAvH,MAAAA,EAAA1kB,EAAAiL,EACAxS,EAAAH,KAAA2zB,QAAAtH,OAAAD,EAAAzZ,EAAAjL,EACA8sB,EAAA5rB,IAAArF,KAAApD,GACA82D,EAAAl2D,KAAAf,KAAA0H,EAAAvH,GACA82D,EAAAl2D,KAAAf,KAAA2S,EAAAxS,GACAH,KAAA+9D,KAAA/kC,GAAA,GAIA,QAAA3vB,GAAAmrB,EAAApI,EAAA1kB,GACA,GAAAy2D,GAAAn+D,KACAwR,EAAAxR,KAAAg+D,OAAAt2D,EAAAsrB,IAEAhzB,MAAA69D,SAAArsD,EAAAlR,IACAkR,EAAAA,EAAAA,EAAAA,EAAAwL,OAAA,SAAArK,GACA,GAAAxS,GAAAwS,EAAAwrD,EAAAxqC,QAAAvH,EAAA,QAAA,QACA,OAAA,QAAA+xC,EAAAH,OAAA79D,EAAA6yB,OAEAxhB,EAAAlR,EAAAN,KAAA69D,UAGArpC,EAAAnrB,IAAA9F,KAAAqhB,MAAA4P,EAAAnrB,IAAAmI,EAAAA,GAGA,QAAA1I,GAAA0rB,EAAA9sB,GACA8sB,EAAA1rB,IAAAvF,KAAAqhB,MAAA4P,EAAA1rB,IAAA9I,KAAAg+D,OAAAt2D,EAAAsrB,KAAAxhB,GACAxR,KAAAg+D,OAAAt2D,EAAAsrB,KAAA,KACAhzB,KAAA69D,SAAA79D,KAAAm1B,OAGA,QAAAipC,GAAA70D,EAAAirB,IACAjrB,EAAAX,IAAA5H,QAAAuI,EAAAT,IAAA9H,UACAwzB,EAAAtvB,OAAAlF,KAAA2zB,QAAAvH,MAAA,EACAoI,EAAAtvB,OAAAlF,KAAA2zB,QAAAtH,OAAA,GA9EA,GAAA+vC,GAAA17D,EAAA,eACA6E,EAAA7E,EAAA,yBACAkvB,EAAAlvB,EAAA,iBACAyH,EAAAzH,EAAA,qBACAW,EAAAX,EAAA,yBAmBAiF,EAAA+3D,EAAA93D,UAAA,GAAAw2D,EA2DAz2D,GAAAwnC,UAAA,SAAA5jC,GACAqmB,EAAArmB,GAAA,aAGAvJ,KAAA6zB,WAAAlE,SAAApmB,EAEA,IAAA2a,GAAAlkB,KAAAA,QAAAwG,IAAAxG,KAAAszB,QACA4qC,EAAAl+D,KAAA49D,SAAAp3D,IAAAxG,KAAAszB,QACA+qC,GAAAn6C,EAAA3f,KACAiE,EAAAxI,KAAA6zB,WAAArrB,OACA81D,EAAAD,EAAA90D,EAAA2a,EAAAjE,OAAAgQ,OACAguC,EAAAI,EAAA71D,EAAA0b,EAAAjE,OAAAtW,SACA6qB,EAAAnzB,EAAA4F,OAAAsC,GACAlJ,EAAAyI,EAAAoX,KAAAlgB,KAAAw0B,EAiBA,OAfAjrB,GAAAT,IAAAqD,QAAA9L,GACAkJ,EAAAX,IAAAuD,QAAAvD,EAAAsX,KAAAlgB,KAAAw0B,GAAA,EAAAypC,EAAAC,KAEAG,GAAAC,EAAAvoC,MAAA/1B,KAAA89D,YACAQ,EAAAx1D,IAAAqD,QAAA9L,GACAi+D,EAAA11D,IAAAuD,QAAAvD,EAAAsX,KAAAlgB,KAAAw0B,GAAA,EAAAhsB,EAAA01D,IACAI,EAAAj1D,IAAA8C,QAAA9C,EAAA6W,KAAAlgB,KAAAw0B,GAAA,IACA4pC,EAAAr9D,KAAAf,KAAAs+D,EAAA9pC,GACAx0B,KAAA89D,UAAAQ,EAAAvoC,OAIAxsB,EAAAF,IAAA8C,QAAA9C,EAAA6W,KAAAlgB,KAAAw0B,GAAA,IACA4pC,EAAAr9D,KAAAf,KAAAuJ,EAAAirB,GAEAA,GAGA/0B,EAAAD,QAAAk+D,I/E6/aGnJ,wBAAwB,GAAG7lC,wBAAwB,GAAG8pB,oBAAoB,GAAGnrB,gBAAgB,IAAI4vC,cAAc,KAAKsB,IAAI,SAAS79D,EAAQjB,EAAOD,GgFzmbnJ,QAAAg/D,GAAA5rC,GAKA,MAJAupC,GAAAv2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MAAA8H,MAAAkJ,KAAA,kBAEAhR,KAAA4zB,aACA5zB,KAZA,GAAAo8D,GAAA17D,EAAA,eACAy7D,EAAAz7D,EAAA,aACAyH,EAAAzH,EAAA,qBACAW,EAAAX,EAAA,yBACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAUAiF,EAAA64D,EAAA54D,UAAA,GAAAu2D,EAEAx2D,GAAAqoB,SAAA,SAAAA,GACA,MAAA5iB,WAAApK,QACAhB,KAAA4zB,UAAA5F,EACAhuB,MAFAA,KAAA4zB,WAKAjuB,EAAAi3D,OAAA,SAAArzD,EAAAirB,GACA,GAAA7sB,GAAA6J,CACA,KAAA7J,IAAA3H,MAAA8E,OACA0M,EAAAxR,KAAA8E,OAAA6C,GACA6J,IACAgjB,EAAA1rB,IAAAvF,KAAAiO,EAAAipC,KACAjpC,EAAAA,YAEAxR,MAAA8E,WAGAa,EAAA84D,WAAA,SAAA/2D,EAAAC,GACA,MAAAQ,GAAAgsB,OAAAxsB,EAAA,OAGAhC,EAAAm3D,UAAA,SAAAp1D,EAAAC,GAKA,GAAAM,GAAAk0D,EAAAv2D,UAAAk3D,UAAA/7D,KAAAf,KAAA0H,EAAAC,GACAqmB,EAAAhuB,KAAA4zB,UAAAvtB,IAAA,SAAAjG,GAAA,MAAAA,GAAA8oB,UACAmK,EAAArzB,KACAG,EAAA8H,EAAAwyC,GAWA,OATAxyC,GAAA6mB,GAAA9uB,KAAAszB,OAAA9qB,KAAA,MAAArI,EAAA6yB,IAAAhF,EAAA7tB,GACA8H,EAAAA,UAAA,WACA2nB,MAAA,gBAAAjoB,EAAA5B,MACAstB,EAAAlvB,eAAA6pB,EAAA,IACAqF,EAAAC,OAAApF,WAAAF,IAGAhuB,KAAAgE,YAAAgqB,EAAA,IAEA/lB,GAGAtC,EAAAgD,KAAA,SAAAjB,GACA,GAAAO,GAAAk0D,EAAAv2D,UAAA+C,KAAA5H,KAAAf,KAAA0H,EAEA,OADAO,GAAA6mB,GAAA4E,OAAA9qB,IAAArF,KAAAmE,GACAO,GAGAtC,EAAAoD,KAAA,SAAArB,EAAAqwB,GACA,GAAA9vB,GAAAk0D,EAAAv2D,UAAAmD,KAAAhI,KAAAf,KAAA0H,EAAAqwB,EAGA,OAFA9vB,GAAA80D,IAAA9oC,EAAAxuB,UAAAwC,EAAA6mB,GAAA4E,OAAArqB,IAAA9F,KAAAmE,GACAO,EAAA80D,KAAA9oC,EAAAvuB,SACAuC,GAGAtC,EAAAkD,KAAA,SAAAnB,GACA,GAAAO,GAAAk0D,EAAAv2D,UAAAiD,KAAA9H,KAAAf,KAAA0H,EAEA,OADAO,GAAA6mB,GAAA4E,OAAA5qB,IAAAvF,KAAAmE,GACAO,GAGAtC,EAAAwnC,UAAA,SAAA5jC,EAAAwuB,GACAnI,EAAArmB,GAAA,aAEAvJ,KAAA68D,IAAA78D,KAAA8H,KAAAtB,IAAAxG,KAAAszB,OAEA,IACA3rB,GAAA6J,EADAgjB,EAAA2nC,EAAAv2D,UAAAunC,UAAApsC,KAAAf,KAAAuJ,EAAAwuB,EAGA,KAAApwB,IAAA3H,MAAA8E,OACA0M,EAAAxR,KAAA8E,OAAA6C,GACA,MAAA6J,IACA,IAAAA,EAAAsS,IACAtS,EAAAA,YAGAnQ,EAAAkoB,KAAAhgB,EAAAiI,EAAAsd,GAAA4E,QAIA,OAAAc,IAGA/0B,EAAAD,QAAAg/D,IhFknbG9vC,wBAAwB,GAAG8pB,oBAAoB,GAAGvlB,oBAAoB,IAAI5F,gBAAgB,IAAI2vC,YAAY,GAAGC,cAAc,KAAKyB,IAAI,SAASh+D,EAAQjB,EAAOD,GiFjtb/J,QAAAm/D,GAAA/rC,GAKA,MAJAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MAAA2V,MAAA3E,KAAA,UAEAhR,KAAA4+D,SACA5+D,KAKA,QAAA2V,GAAAjO,GACA,MAAA2+B,GAAA2P,KAAAh2C,KAAAszB,OAAAtzB,KAAA2V,KAAAnP,IAAAxG,KAAAszB,QACA5rB,EAAA,KAAA,KAAA,KAAA1H,KAAAi2B,WAAAhC,EAAAkC,UAlBA,GAAAimC,GAAA17D,EAAA,eACAW,EAAAX,EAAA,yBACA2lC,EAAA3lC,EAAA,iBACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAUAiF,EAAAg5D,EAAA/4D,UAAA,GAAAw2D,EAOAz2D,GAAAwnC,UAAA,SAAA5jC,GACAqmB,EAAArmB,GAAA,aACA,IAAAirB,GAAAnzB,EAAA4F,OAAAsC,GACAmvD,EAAA14D,KAAA4+D,MACAr/D,EAAAS,IA4BA,OA1BAuJ,GAAAT,IAAAqD,QAAA,SAAAzE,GACA,IAAAgxD,EAAAhxD,EAAAsrB,KAAAwB,EAAA1rB,IAAAvF,KAAAmE,GACAgxD,EAAAhxD,EAAAsrB,KAAA,IAGAzpB,EAAAX,IAAAuD,QAAA,SAAAzE,GACAiO,EAAA5U,KAAAxB,EAAAmI,GAAA8sB,EAAA5rB,IAAArF,KAAAmE,GACAgxD,EAAAhxD,EAAAsrB,KAAA,IAGAzpB,EAAAF,IAAA8C,QAAA,SAAAzE,GACA,GAAA6E,GAAAoJ,EAAA5U,KAAAxB,EAAAmI,GACApH,EAAA,IAAAo4D,EAAAhxD,EAAAsrB,IACAzmB,IAAAjM,GACAo4D,EAAAhxD,EAAAsrB,KAAA,EACAwB,EAAA5rB,IAAArF,KAAAmE,IACA6E,IAAAjM,EACAk0B,EAAAnrB,IAAA9F,KAAAmE,IACA6E,GAAAjM,IAGAk0B,EAAA1rB,IAAAvF,KAAAmE,GACAgxD,EAAAhxD,EAAAsrB,KAAA,KAIAwB,GAGA/0B,EAAAD,QAAAm/D,IjFytbGjwC,wBAAwB,GAAGmwC,gBAAgB,GAAG5rC,oBAAoB,IAAI5F,gBAAgB,IAAI4vC,cAAc,KAAK6B,IAAI,SAASp+D,EAAQjB,EAAOD,GkF5wb5I,QAAAu/D,GAAAnsC,GASA,MARAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACAkF,QAAA8L,KAAA,kBAGAhR,KAAA2zB,SAAA5tB,IAAA,MAAAuB,MAAA,SACAtH,KAAAg+D,UAEAh+D,KAAA0vB,QAAA,GAAAK,SAAA,GAKA,QAAAivC,GAAAz1D,EAAAirB,GACA,IAAA,GAAAwE,KAAAh5B,MAAAg+D,OAAAxpC,EAAA1rB,IAAAvF,KAAAqhB,MAAA4P,EAAA1rB,IAAA9I,KAAAg+D,OAAAhlC,GACAh5B,MAAAg+D,UAGA,QAAAiB,GAAAv3D,EAAA/G,EAAAsC,GACA,GAAA6Y,GAAA9b,KAAAg+D,OAAAt2D,EAAAsrB,OAAAhzB,KAAAg+D,OAAAt2D,EAAAsrB,KAAAprB,MAAA3E,GACA,OAAA6Y,GAAAnb,KAAAmb,EAAAnb,GAAAwH,EAAAwsB,OAAAjtB,EAAAA,EAAAssB,QAGA,QAAAjW,GAAAvV,EAAAtD,EAAAqC,EAAAmE,EAAAqqB,GAKA,IAJA,GACAnvB,GACAN,EAAAnG,EAFAQ,EAAA,EAAAu+D,EAAA12D,EAAAxH,OACA61D,EAAA3xD,EAAAlE,OAGAk+D,EAAAv+D,IAAAA,EAEA,IADA2F,EAAAkC,EAAA7H,GACAiG,EAAA,EAAAiwD,EAAAjwD,IAAAA,EACAzG,EAAA8+D,EAAAl+D,KAAAf,KAAAsG,EAAAM,EAAAiwD,GACA1uD,EAAAe,IAAA/I,EAAAH,KAAA2zB,QAAA5tB,IAAAb,EAAA0B,IACAuB,EAAAe,IAAA/I,EAAAH,KAAA2zB,QAAArsB,MAAAC,EAAAX,GAAAN,IACAoF,EAAAnI,KAAApD,GAxCA,GAAAi8D,GAAA17D,EAAA,eACAkvB,EAAAlvB,EAAA,iBACAyH,EAAAzH,EAAA,qBACAW,EAAAX,EAAA,yBAcAiF,EAAAo5D,EAAAn5D,UAAA,GAAAw2D,EA4BAz2D,GAAAwnC,UAAA,SAAA5jC,EAAAwuB,GACAnI,EAAArmB,GAAA,WAEA,IAAA41D,GAAAn/D,KACA+D,EAAA/D,KAAAkF,OAAAsB,IAAAxG,KAAAszB,QACApuB,EAAAnB,EAAAmB,OAAAqC,EAAAxD,EAAAwD,UACAitB,EAAAnzB,EAAA4F,OAAAsC,EAeA,OAbAwuB,IAAAinC,EAAAj+D,KAAAf,KAAAuJ,EAAAirB,GAEAzW,EAAAhd,KAAAf,KAAAuJ,EAAAX,IAAA1D,EAAAqC,EAAAitB,EAAA5rB,IAAAW,EAAAwsB,OACAhY,EAAAhd,KAAAf,KAAAuJ,EAAAF,IAAAnE,EAAAqC,EAAAwwB,EAAAvD,EAAA5rB,IAAA4rB,EAAAnrB,IAAAE,EAAAwsB,OACAxsB,EAAAT,IAAAqD,QAAA,SAAAzE,GACA8sB,EAAA1rB,IAAAvF,KAAAqhB,MAAA4P,EAAA1rB,IAAAq2D,EAAAnB,OAAAt2D,EAAAsrB,MACAmsC,EAAAnB,OAAAt2D,EAAAsrB,KAAA,QAIAzpB,EAAAX,IAAA5H,QAAAuI,EAAAT,IAAA9H,QACAkE,EAAAyR,KAAA,SAAApX,GAAA,QAAAgK,EAAArE,OAAA3F,QACAi1B,EAAAtvB,OAAAlF,KAAA2zB,QAAA5tB,KAAA,EAAAyuB,EAAAtvB,OAAAlF,KAAA2zB,QAAArsB,OAAA,GACAktB,GAGA/0B,EAAAD,QAAAu/D,IlFmxbGrwC,wBAAwB,GAAG8pB,oBAAoB,GAAGnrB,gBAAgB,IAAI4vC,cAAc,KAAKmC,IAAI,SAAS1+D,EAAQjB,EAAOD,IACxH,SAAWM,GmFr1bX,QAAAu/D,GAAAzsC,GA2BA,MA1BAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACAipB,MAAAjY,KAAA,eAAAusD,WAAA,IAAA,MACA+B,OAAAtuD,KAAA,QACAuuD,cAAAvuD,KAAA,QAAAusD,UAAA,IACAiC,cAAAxuD,KAAA,QAAAusD,UAAA,GACAkC,QAAAzuD,KAAA,QAAAusD,UAAA,IACAmC,gBAAA1uD,KAAA,QAAAusD,UAAAnrD,EAAAA,GACAutD,YAAA3uD,KAAA,QAAAusD,UAAA,KACAqC,UAAA5uD,KAAA,QAAAusD,UAAA,IACA7W,OAAA11C,KAAA,QAAAusD,UAAA,IACAsC,SAAA7uD,KAAA,QAAAusD,UAAA,IACAuC,OAAA9uD,KAAA,QAAAusD,UAAA,MAGAv9D,KAAA+/D,UACA//D,KAAAggE,UACAhgE,KAAAigE,QAAA9sD,EAAA+sD,OAAAC,QAEAngE,KAAA2zB,SACAjsB,EAAA,WACAiL,EAAA,WACAsN,OAAA,UACA41B,OAAA,WAGA71C,KAKA,QAAAwG,GAAA2mC,EAAA5oC,GACA,GAAAuB,GAAAqnC,EAAA5oC,GAAAiC,IAAA2mC,EAAA7Z,OACA,OAAAxtB,GAAA0G,SACA,SAAA9E,GAAA,MAAA5B,GAAA0G,SAAA9E,EAAAS,QACArC,EAAA+W,MAxCA,GAAA1J,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAipD,EAAA17D,EAAA,eACAyH,EAAAzH,EAAA,qBAgCAiF,EAAA05D,EAAAz5D,UAAA,GAAAw2D,EASAz2D,GAAAwnC,UAAA,SAAAizB,GAEA,GAAAxgE,GAAAI,KAAAszB,OACA+sC,EAAArgE,KAAAs/D,MAAA94D,IAAA5G,GAAAqgB,OAAAgQ,OACAiwC,EAAAlgE,KAAAigE,QACAzrC,EAAAx0B,KAAA2zB,QACA/K,EAAA5oB,KAAA+/D,OACAT,EAAAt/D,KAAAggE,OACAM,EAAAtgE,KAAA2/D,WAAAn5D,IAAA5G,EAGAwgE,GAAAx3D,IAAAuD,QAAA,SAAA/L,GACAwoB,EAAArlB,MAAA4E,MAAA/H,MAIAigE,EAAAz3D,IAAAuD,QAAA,SAAArL,GACA,GAAAy/D,IACAp4D,MAAArH,EACAmf,OAAA2I,EAAA9nB,EAAAmf,QACA41B,OAAAjtB,EAAA9nB,EAAA+0C,QAEA1tC,GAAAe,IAAApI,EAAA0zB,EAAAvU,OAAAsgD,EAAAtgD,OAAA9X,OACAA,EAAAe,IAAApI,EAAA0zB,EAAAqhB,OAAA0qB,EAAA1qB,OAAA1tC,OACAm3D,EAAA/7D,KAAAg9D,KAMAL,EACAj3C,KAAAjpB,KAAAipB,KAAAziB,IAAA5G,IACA2/D,aAAA/4D,EAAAxG,KAAA,iBACAw/D,aAAAh5D,EAAAxG,KAAA,iBACAy/D,OAAAj5D,EAAAxG,KAAA,WACA0/D,eAAAl5D,EAAAxG,KAAA,mBACA4/D,SAAA5/D,KAAA4/D,SAAAp5D,IAAA5G,IACA8mD,MAAA1mD,KAAA0mD,MAAAlgD,IAAA5G,IACAigE,QAAA7/D,KAAA6/D,QAAAr5D,IAAA5G,IACAkgE,MAAA9/D,KAAA8/D,MAAAt5D,IAAA5G,IACAgpB,MAAAA,GACA02C,MAAAA,GAGAY,EAAA5wD,OACA,KAAA,GAAA3O,GAAA,EAAA2/D,EAAA3/D,IAAAA,EACAu/D,EAAAM,MAWA,IATAN,EAAA3wD,OAGAqZ,EAAAzc,QAAA,SAAA/L,GACA+H,EAAAe,IAAA9I,EAAA+H,MAAAqsB,EAAA9sB,EAAAtH,EAAAsH,GACAS,EAAAe,IAAA9I,EAAA+H,MAAAqsB,EAAA7hB,EAAAvS,EAAAuS,KAIAytD,EAAAt3D,IAAA9H,OAAA,EAAA,CACA,GAAAy/D,GAAAt4D,EAAAmsB,MAAA8rC,EAAAt3D,IACA9I,MAAA+/D,OAAAn3C,EAAA5L,OAAA,SAAA5c,GAAA,OAAAqgE,EAAArgE,EAAA+H,MAAA6qB,OAIA,GAAAqtC,EAAAv3D,IAAA9H,OAAA,EAAA,CACA,GAAA0/D,GAAAv4D,EAAAmsB,MAAA+rC,EAAAv3D,IACA9I,MAAAggE,OAAAV,EAAAtiD,OAAA,SAAAlc,GAAA,OAAA4/D,EAAA5/D,EAAAqH,MAAA6qB,OAMA,MAFAotC,GAAAl7D,OAAAsvB,EAAA9sB,GAAA,EACA04D,EAAAl7D,OAAAsvB,EAAA7hB,GAAA,EACAytD,GAGA3gE,EAAAD,QAAA6/D,InF21bGt+D,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAGykB,cAAc,KAAK0D,IAAI,SAASjgE,EAAQjB,EAAOD,GoF58bzE,QAAAohE,GAAAhuC,GAOA,MANAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACA6c,OAAA7L,KAAA,SACAq1B,MAAAr1B,KAAA,UAGAhR,KAbA,GAAAo8D,GAAA17D,EAAA,eACAyH,EAAAzH,EAAA,qBACA45B,EAAA55B,EAAA,iBACAkvB,EAAAlvB,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAYAiF,EAAAi7D,EAAAh7D,UAAA,GAAAw2D,EAEAz2D,GAAAwnC,UAAA,SAAA5jC,GAQA,QAAAL,GAAAxB,GACA,GAAAwK,GAAAooB,EAAA0b,KAAAp2C,EAAAymC,EAAA3+B,EAAA,KAAA,KAAA,KAAAwvB,EACA/uB,GAAAe,IAAAxB,EAAAmV,EAAA3K,GATA0d,EAAArmB,GAAA,eACA,IACA3J,GAAAI,KAAAszB,OACAzW,EAAA7c,KAAA6c,MAAArW,IAAA5G,GACAymC,EAAArmC,KAAAqmC,KAAA7/B,IAAA5G,GACAs3B,EAAAl3B,KAAAi2B,WAAAhC,EAAAkC,QAcA,OAPA5sB,GAAAX,IAAAuD,QAAAjD,GAEAlJ,KAAAo2B,WAAA7sB,IACAA,EAAAF,IAAA8C,QAAAjD,GAGAK,EAAArE,OAAA2X,GAAA,EACAtT,GAGA9J,EAAAD,QAAAohE,IpFo9bGpoB,oBAAoB,GAAGqmB,gBAAgB,GAAG5rC,oBAAoB,IAAI5F,gBAAgB,IAAI4vC,cAAc,KAAK4D,IAAI,SAASngE,EAAQjB,EAAOD,IACxI,SAAWM,GqFz/bX,QAAAghE,GAAAluC,GAYA,MAXAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,KAAA8gE,EAAAC,YACA3E,EAAAC,cAAAr8D,MACAghE,KAAAhwD,KAAA,SACAiwD,KAAAjwD,KAAA,WAGAhR,KAAA2zB,SACAjsB,EAAA,QACAiL,EAAA,SAEA3S,KAjBA,GAAAya,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAipD,EAAA17D,EAAA,eACAyH,EAAAzH,EAAA,oBAmBAogE,GAAAC,YACAG,YAAAlwD,KAAA,QAAAusD,UAAA,YACArO,QAAAl+C,KAAA,gBACAkZ,WAAAlZ,KAAA,gBACAqZ,QAAArZ,KAAA,gBACAk6B,OAAAl6B,KAAA,SACAzC,WAAAyC,KAAA,SACAmwD,WAAAnwD,KAAA,SACAowD,YAAApwD,KAAA,UAGA8vD,EAAAO,aAAA,WACA,GAGAC,GAAA/8D,EAAA+C,EAHA1H,EAAAI,KAAAszB,OACA1X,EAAA5b,KAAAkhE,WAAA16D,IAAA5G,GACA2hE,EAAAT,EAAAC,UAGAnlD,KAAA5b,KAAAwhE,QACAxhE,KAAAwhE,MAAA5lD,EACA5b,KAAAyhE,YAAAtuD,EAAAuuD,IAAA9lD,MAEA0lD,EAAAthE,KAAAyhE,WAEA,KAAAl9D,IAAAg9D,GACA,eAAAh9D,GAAA+8D,EAAA/8D,KACA+C,EAAAtH,KAAAuE,GAAAiC,IAAA5G,GACAuN,SAAA7F,GAAAmT,EAAAtV,QAAAmC,IAAA,IAAAA,EAAAtG,QAGAsG,IAAAg6D,EAAA/8D,MACA+8D,EAAA/8D,GAAA+C,GAIA,OAAAg6D,GAGA,IAAA37D,GAAAm7D,EAAAl7D,UAAA,GAAAw2D,EAEAz2D,GAAAwnC,UAAA,SAAA5jC,GAOA,QAAAL,GAAA/I,GACA,GAAAwhE,IAAAX,EAAA7gE,GAAA8gE,EAAA9gE,IACAyhE,EAAAN,EAAAK,EACAx5D,GAAAe,IAAA/I,EAAAq0B,EAAA9sB,EAAAk6D,EAAA,IACAz5D,EAAAe,IAAA/I,EAAAq0B,EAAA7hB,EAAAivD,EAAA,IAVA,GAAAhiE,GAAAI,KAAAszB,OACAkB,EAAAx0B,KAAA2zB,QACAqtC,EAAAhhE,KAAAghE,IAAAx6D,IAAA5G,GAAA4M,SACAy0D,EAAAjhE,KAAAihE,IAAAz6D,IAAA5G,GAAA4M,SACA80D,EAAAR,EAAAO,aAAAtgE,KAAAf,KAiBA,OARAuJ,GAAAX,IAAAuD,QAAAjD,GACAlJ,KAAAo2B,WAAA7sB,KACAA,EAAAF,IAAA8C,QAAAjD,GACAK,EAAAT,IAAAqD,QAAAjD,IAGAK,EAAArE,OAAAsvB,EAAA9sB,GAAA,EACA6B,EAAArE,OAAAsvB,EAAA7hB,GAAA,EACApJ,GAGA9J,EAAAD,QAAAshE,IrFigcG//D,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAGykB,cAAc,GAAGt6D,QAAU,KAAKk/D,IAAI,SAASnhE,EAAQjB,EAAOD,IACtF,SAAWM,GsFplcX,QAAAgiE,GAAAlvC,GAUA,MATAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,KAAA8gE,EAAAC,YACA3E,EAAAC,cAAAr8D,MACAsH,OAAA0J,KAAA,QAAAusD,UAAA,QAGAv9D,KAAA2zB,SACAgnB,KAAA,YAEA36C,KAhBA,GAAAya,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACA2tD,EAAApgE,EAAA,SACA07D,EAAA17D,EAAA,eACAyH,EAAAzH,EAAA,qBAeAiF,EAAAm8D,EAAAl8D,UAAA,GAAAw2D;;AAEAz2D,EAAAwnC,UAAA,SAAA5jC,GAOA,QAAAL,GAAA/I,GACAgI,EAAAe,IAAA/I,EAAAq0B,EAAAmmB,KAAAA,EAAAonB,EAAA5hE,KAPA,GAAAP,GAAAI,KAAAszB,OACAkB,EAAAx0B,KAAA2zB,QACAouC,EAAA/hE,KAAAsH,MAAAd,IAAA5G,GAAA4M,UAAAiO,EAAA/R,SACA44D,EAAAR,EAAAO,aAAAtgE,KAAAf,MACA26C,EAAAxnC,EAAAuuD,IAAA/mB,OAAAumB,WAAAI,EAaA,OAPA/3D,GAAAX,IAAAuD,QAAAjD,GACAlJ,KAAAo2B,WAAA7sB,KACAA,EAAAF,IAAA8C,QAAAjD,GACAK,EAAAT,IAAAqD,QAAAjD,IAGAK,EAAArE,OAAAsvB,EAAAmmB,MAAA,EACApxC,GAGA9J,EAAAD,QAAAsiE,ItF6lcG/gE,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAGwpB,QAAQ,GAAG/E,cAAc,GAAGt6D,QAAU,KAAKs/D,IAAI,SAASvhE,EAAQjB,EAAOD,GuFpocjG,QAAA28D,GAAAvpC,GAEA,MADAA,IAAA5yB,KAAA4L,KAAAgnB,GACA5yB,KAPA,GAAAo8D,GAAA17D,EAAA,eACAyH,EAAAzH,EAAA,qBACAW,EAAAX,EAAA,yBACAuzB,EAAAvzB,EAAA,qBAOAiF,EAAAw2D,EAAAv2D,UAAA,GAAAw2D,EAEAz2D,GAAAiG,KAAA,SAAAgnB,GAGA,MAFA5yB,MAAA68D,IAAA,KACA78D,KAAA8E,UACAs3D,EAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAlD,QAAA,GAAAK,SAAA,IAGApqB,EAAA6C,KAAA,WAAA,MAAAxI,MAAA8E,QAEAa,EAAAi3D,OAAA,SAAArzD,EAAAirB,GACA,GAAA7sB,GAAA6J,CACA,KAAA7J,IAAA3H,MAAA8E,QACA0M,EAAAxR,KAAA8E,OAAA6C,KACA6sB,EAAA1rB,IAAAvF,KAAAiO,EAAAipC,IAEAz6C,MAAA8E,WAGAa,EAAA8B,MAAA,SAAAC,GACA,GAGA5B,GAHAuuD,EAAAr0D,KAAA68D,IAAAt1D,YAAAvH,KAAA68D,IAAArwD,UACA1E,EAAAusD,EAAAlpD,OAAA,SAAAvL,EAAAL,GACA,MAAA4N,WAAArH,EAAAvG,EAAAmI,KAAA9H,EAAA2D,KAAAuC,GAAAlG,GAAAA,OACA+H,EAAAG,EAAAmL,KAAA,IACA,OAAAnL,GAAA9G,OAAA,GAAA8G,KAAAA,EAAA/B,IAAA4B,GAAAwF,QAGAxH,EAAAoC,MAAA,SAAAL,GACA,GAAAC,GAAA3H,KAAAyH,MAAAC,EACA,OAAA1H,MAAA8E,OAAA6C,EAAA5B,OAAA/F,KAAA8E,OAAA6C,EAAA5B,KAAA/F,KAAA88D,UAAAp1D,EAAAC,KAGAhC,EAAAm3D,UAAA,SAAAp1D,EAAAC,GACA,OACAmc,IAAA,EACA22B,IAAAz6C,KAAAy+D,WAAA/2D,EAAAC,GACAo1D,IAAA9oC,EAAAxuB,WAIAE,EAAA84D,WAAA,SAAA/2D,EAAAC,GACA,GAGAhH,GAAAsC,EAHAi/D,EAAAliE,KAAA68D,IACA33D,EAAAg9D,EAAAh9D,SAAAg9D,EAAArlD,OACAw3C,EAAA6N,EAAA36D,YAAA26D,EAAA11D,UACArM,IAEA,KAAAQ,EAAA,EAAAsC,EAAAiC,EAAAlE,OAAAiC,EAAAtC,IAAAA,EACAR,EAAA+E,EAAAvE,IAAA0zD,EAAA1zD,GAAA+G,EAGA,OAAAS,GAAAgsB,OAAAh0B,EAAA,OAGAwF,EAAAgD,KAAA,SAAAjB,GACA,GAAAO,GAAAjI,KAAA+H,MAAAL,EAGA,OAFAO,GAAA6b,KAAA,EACA7b,EAAA80D,KAAA9oC,EAAAvuB,SACAuC,GAGAtC,EAAAkD,KAAA,SAAAnB,GACA,GAAAO,GAAAjI,KAAA+H,MAAAL,EAGA,OAFAO,GAAA6b,KAAA,EACA7b,EAAA80D,KAAA9oC,EAAAvuB,SACAuC,GAGAtC,EAAAoD,KAAA,SAAArB,EAAAqwB,GACA,MAAArwB,GAAAssB,OAAAtsB,EAAAssB,QAAAC,EAAAC,UAAA/mB,SAAAnN,KAAAyH,MAAAC,EAAAssB,QACAh0B,KAAA6I,KAAAnB,EAAAssB,OACAh0B,KAAA2I,KAAAjB,IACAqwB,EACA/3B,KAAA2I,KAAAjB,GAEA1H,KAAA+H,MAAAL,IAGA/B,EAAAwnC,UAAA,SAAA5jC,EAAAwuB,GACA,GAEApwB,GAAA6J,EAAAjS,EAAAY,EAFAgiE,EAAAniE,KACAw0B,EAAAnzB,EAAA4F,OAAAsC,EAGAwuB,IAAA/3B,KAAA48D,OAAArzD,EAAAirB,GAEAjrB,EAAAX,IAAAuD,QAAA,SAAAzE,GAAAy6D,EAAAx5D,KAAAjB,KACA6B,EAAAF,IAAA8C,QAAA,SAAAzE,GAAAy6D,EAAAp5D,KAAArB,EAAAqwB,KACAxuB,EAAAT,IAAAqD,QAAA,SAAAzE,GAEAy6D,EAAAt5D,KADAnB,EAAAssB,OAAAtsB,EAAAssB,QAAAC,EAAAC,UAAA/mB,SAAAg1D,EAAA16D,MAAAC,EAAAssB,OACAtsB,EAAAssB,MAEAtsB,IAIA,KAAAC,IAAA3H,MAAA8E,OACA0M,EAAAxR,KAAA8E,OAAA6C,GACA6J,IACAjS,EAAAiS,EAAAurD,IACA58D,EAAAqR,EAAAipC,IAEA,IAAAjpC,EAAAsS,KACAvkB,IAAA00B,EAAAvuB,UAAA8uB,EAAA1rB,IAAAvF,KAAApD,GACAH,KAAA8E,OAAA6C,GAAA,MACApI,EAAA00B,EAAAxuB,SACA+uB,EAAA5rB,IAAArF,KAAApD,GACAZ,EAAA00B,EAAAvuB,UACA8uB,EAAAnrB,IAAA9F,KAAApD,GAEAqR,EAAAurD,IAAA,EAGA,OAAAvoC,IAGA/0B,EAAAD,QAAA28D,IvF2ocGztC,wBAAwB,GAAG8pB,oBAAoB,GAAGvlB,oBAAoB,IAAIgqC,cAAc,KAAKmF,IAAI,SAAS1hE,EAAQjB,EAAOD,GwFrwc5H,QAAA6iE,GAAAzvC,GAYA,MAXAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACAigB,QAAAjP,KAAA,QAAAusD,UAAA,WACA1nB,QAAA7kC,KAAA,QAAAusD,UAAA,WACA71D,GAAAsJ,KAAA,QAAAusD,UAAA,YACA5qD,GAAA3B,KAAA,QAAAusD,UAAA,YACA3iB,SAAA5pC,KAAA,QAAAusD,UAAA,IACAjZ,OAAAtzC,KAAA,QAAAusD,UAAA,UAGAv9D,KAAA2zB,SAAAgnB,KAAA,aACA36C,KAKA,QAAA4iC,GAAAt8B,EAAA2Z,EAAA41B,EAAAnuC,EAAAiL,EAAAioC,GACA,GAAAt6C,GAAA2f,EAAA3Z,GAAAg8D,EAAA56D,EAAApH,GAAAiiE,EAAA5vD,EAAArS,GACAH,EAAA01C,EAAAvvC,GAAA63C,EAAAz2C,EAAAvH,GAAAqiE,EAAA7vD,EAAAxS,EACA,OAAA,IAAAmiE,EAAA,IAAAC,EACA,IAAApkB,EAAA,IAAAqkB,EAGA,QAAAC,GAAAn8D,EAAA2Z,EAAA41B,EAAAnuC,EAAAiL,EAAAioC,GACA,GAAAt6C,GAAA2f,EAAA3Z,GAAAg8D,EAAA56D,EAAApH,GAAAiiE,EAAA5vD,EAAArS,GACAH,EAAA01C,EAAAvvC,GAAA63C,EAAAz2C,EAAAvH,GAAAqiE,EAAA7vD,EAAAxS,GACAgqB,EAAAg0B,EAAAmkB,EACAl4C,EAAAo4C,EAAAD,EACAG,EAAA9nB,GAAAzwB,EAAAC,GACAu4C,EAAA/nB,GAAAxwB,EAAAD,EACA,OAAA,IAAAm4C,EAAA,IAAAC,EACA,KAAAD,EAAAI,GAAA,KAAAH,EAAAI,GACA,KAAAxkB,EAAAwkB,GAAA,KAAAH,EAAAE,GACA,IAAAvkB,EAAA,IAAAqkB,EAGA,QAAAI,GAAAt8D,EAAA2Z,EAAA41B,EAAAnuC,EAAAiL,EAAAioC,GACA,GAAAt6C,GAAA2f,EAAA3Z,GAAAg8D,EAAA56D,EAAApH,GAAAiiE,EAAA5vD,EAAArS,GACAH,EAAA01C,EAAAvvC,GAAA63C,EAAAz2C,EAAAvH,GAAAqiE,EAAA7vD,EAAAxS,GACAwG,GAAA27D,EAAAnkB,GAAA,CACA,OAAA,IAAAmkB,EAAA,IAAAC,EACA,IAAA57D,EAAA,IAAA47D,EACA,IAAA57D,EAAA,IAAA67D,EACA,IAAArkB,EAAA,IAAAqkB,EAGA,QAAAK,GAAAv8D,EAAA2Z,EAAA41B,EAAAnuC,EAAAiL,EAAAioC,GACA,GAAAt6C,GAAA2f,EAAA3Z,GAAAg8D,EAAA56D,EAAApH,GAAAiiE,EAAA5vD,EAAArS,GACAH,EAAA01C,EAAAvvC,GAAA63C,EAAAz2C,EAAAvH,GAAAqiE,EAAA7vD,EAAAxS,GACAwG,GAAA47D,EAAAC,GAAA,CACA,OAAA,IAAAF,EAAA,IAAAC,EACA,IAAAD,EAAA,IAAA37D,EACA,IAAAw3C,EAAA,IAAAx3C,EACA,IAAAw3C,EAAA,IAAAqkB,EAzDA,GAAApG,GAAA17D,EAAA,eACAyH,EAAAzH,EAAA,qBAiBAiF,EAAA08D,EAAAz8D,UAAA,GAAAw2D,GA0CA0G,GACAlgC,KAAAA,EACA6/B,MAAAA,EACA7E,SAAAgF,EACAA,UAAAA,EACAC,UAAAA,EAGAl9D,GAAAwnC,UAAA,SAAA5jC,GAUA,QAAAL,GAAA/I,GACA,GAAAw6C,GAAA2J,EAAAnkD,EAAA8f,EAAA41B,EAAAnuC,EAAAiL,EAAAioC,EACAzyC,GAAAe,IAAA/I,EAAAq0B,EAAAmmB,KAAAA,GAXA,GAAA/6C,GAAAI,KAAAszB,OACAkB,EAAAx0B,KAAA2zB,QACA2wB,EAAAwe,EAAA9iE,KAAAskD,MAAA99C,IAAA5G,KAAAkjE,EAAAlgC,KACA3iB,EAAAjgB,KAAAigB,OAAAzZ,IAAA5G,GAAA4M,SACAqpC,EAAA71C,KAAA61C,OAAArvC,IAAA5G,GAAA4M,SACA9E,EAAA1H,KAAA0H,EAAAlB,IAAA5G,GAAA4M,SACAmG,EAAA3S,KAAA2S,EAAAnM,IAAA5G,GAAA4M,SACAouC,EAAA56C,KAAA46C,QAAAp0C,IAAA5G,EAaA,OANA2J,GAAAX,IAAAuD,QAAAjD,GACAlJ,KAAAo2B,WAAA7sB,IACAA,EAAAF,IAAA8C,QAAAjD,GAGAK,EAAArE,OAAAsvB,EAAAmmB,MAAA,EACApxC,GAGA9J,EAAAD,QAAA6iE,IxF0wcG7pB,oBAAoB,GAAGykB,cAAc,KAAK8F,IAAI,SAASriE,EAAQjB,EAAOD,GyF71czE,QAAAwjE,GAAAz+D,EAAAyM,GACAhR,KAAAuzB,MAAAhvB,EACAvE,KAAAqrB,MAAAra,EAIAhR,KAAAw3B,UACAx3B,KAAAijE,cACAjjE,KAAAkjE,aAAA,EACAljE,KAAA+0B,YAlBA,GAAAta,GAAA/Z,EAAA,WACA2lC,EAAA3lC,EAAA,iBACAuzB,EAAAvzB,EAAA,qBAEAyiE,EAAA,SACAC,EAAA,QACAC,EAAA,SACAC,EAAA,QAcA39D,EAAAq9D,EAAAp9D,SAEAD,GAAA49D,KAAA,WACA,GAAAp+D,GAAAg+D,EAAAxtD,KAAA3V,KAAAqrB,OACAm4C,EAAAJ,EAAAztD,KAAA3V,KAAAqrB,OACAo4C,EAAAJ,EAAA1tD,KAAA3V,KAAAqrB,MAEA,OAAAm4C,GACAr+D,GAAAowB,MAAAv1B,KAAAw3B,OAAAksC,QAAA1jE,KAAAijE,aACA1+D,KAAAvE,KAAAw3B,OAAA,GAAAvX,OAAAjgB,KAAAijE,WAAA,IACAQ,EACAt+D,GAAAD,OAAAlF,KAAAw3B,OAAAjwB,UAAAvH,KAAAijE,aACApmD,MAAA7c,KAAAw3B,OAAA,GAAAhrB,SAAAxM,KAAAijE,WAAA,IAEA99D,EAAAnF,KAAAw3B,OAAAx3B,KAAAw3B,OAAA,IAIA7xB,EAAAa,IAAA,SAAAosB,GACA,GAEAtyB,GAAAuL,EAAAqG,EAFAsxD,EAAAJ,EAAAztD,KAAA3V,KAAAqrB,OACAo4C,EAAAJ,EAAA1tD,KAAA3V,KAAAqrB,MAIA,KAAArrB,KAAAkjE,YAAA,MAAAljE,MAAAujE,MAEA,IAAAC,EAEA,MADAxjE,MAAAijE,WAAAjjE,KAAAw3B,OAAAnxB,IAAA,SAAAP,GAAA,MAAA8sB,GAAApqB,KAAA1C,KACA9F,KAAAujE,MAGA,KAAAjjE,IAAAN,MAAA+0B,SACAlpB,EAAA7L,KAAA+0B,SAAAz0B,GACA4R,EAAA0gB,EAAA6C,UAAAn1B,GAEAmjE,IACAzjE,KAAAijE,WAAAp3D,GAAA7L,KAAAw3B,OAAA3rB,IAAAqG,EACAuI,EAAAjO,SAAA0F,GAAAlS,KAAAijE,WAAAp3D,IAGA7L,KAAAw3B,OAAA3rB,GAAAqG,CAGA,OAAAlS,MAAAujE,QAGA59D,EAAAuD,IAAA,SAAAikC,EAAA7lC,GACA,GAAAi6D,GAAAvhE,KACA2jE,EAAAL,EAAA3tD,KAAA3V,KAAAqrB,OACAm4C,EAAAJ,EAAAztD,KAAA3V,KAAAqrB,OACAo4C,EAAAJ,EAAA1tD,KAAA3V,KAAAqrB,MAiCA,OA/BArrB,MAAAw3B,OAAA/c,EAAApV,MAAAiC,GAAAjB,IAAA,SAAAP,EAAAnF,GACA,GAAA8Z,EAAAlU,SAAAT,GAAA,CACA,GAAA69D,EAAA,CACA,GAAAzjE,GAAAmmC,EAAAvgC,EAGA,OAFAqnC,GAAAlX,WAAAhC,EAAAyC,OAAAx2B,EAAAgF,QACAioC,EAAAlX,WAAAhC,EAAAkC,QAAAj2B,EAAAmvB,SACAnvB,EAAA6d,GAQA,MAPA0lD,IACAlC,EAAA0B,WAAAtiE,GAAA8Z,EAAAjO,SAAA1G,GACAqnC,EAAAlX,WAAAhC,EAAAyC,OAAA5wB,IACA09D,IACAjC,EAAA2B,aAAA,EACA/1B,EAAAlX,WAAAhC,EAAAiC,KAAApwB,IAEAA,EACA,MAAAqH,UAAArH,EAAAwB,MACAxB,EAAAwB,MACA6F,SAAArH,EAAA+W,OACA0kD,EAAA0B,WAAAtiE,GAAA8Z,EAAAjO,SAAA1G,EAAA+W,OACAswB,EAAAlX,WAAAhC,EAAAyC,OAAA5wB,EAAA+W,OACA/W,EAAA+W,OACA1P,SAAArH,EAAA6qB,QACA4wC,EAAA2B,aAAA,EACA3B,EAAAxsC,SAAAjvB,EAAA6qB,QAAAhwB,EACAwsC,EAAAlX,WAAAhC,EAAAkC,QAAArwB,EAAA6qB,QACA7qB,EAAA6qB,QAGA7qB,IAGAqnC,GAGA1tC,EAAAD,QAAAwjE,IzFw2cGnE,gBAAgB,GAAG5rC,oBAAoB,IAAItwB,QAAU,KAAKihE,IAAI,SAASljE,EAAQjB,EAAOD,IACzF,SAAWM,G0F98cX,QAAA+jE,GAAAjxC,GAeA,MAdAuqC,GAAAv3D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACAsH,OAAA0J,KAAA,QAAAusD,UAAA,MACAja,YAAAtyC,KAAA,QAAAusD,UAAA,GACA/Z,UAAAxyC,KAAA,QAAAusD,UAAA,EAAA3uD,KAAAksB,IACAxuB,MAAA0E,KAAA,QAAAusD,WAAA,KAGAv9D,KAAA2zB,SACArkB,MAAA,eACAC,KAAA,cACAI,IAAA,cAGA3P,KAKA,QAAA8jE,KAAA,MAAA,GA1BA,GAAArpD,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAipD,EAAA17D,EAAA,eACAy8D,EAAAz8D,EAAA,oBACAyH,EAAAzH,EAAA,qBAoBAiF,EAAAk+D,EAAAj+D,UAAA,GAAAu3D,EAIAx3D,GAAAy3D,eAAA,SAAA7zD,EAAAf,GACA,GAWA7H,GAAAR,EAAA2F,EAXAlG,EAAAI,KAAAszB,OACAkB,EAAAx0B,KAAA2zB,QACArsB,EAAAtH,KAAAsH,MAAAd,IAAA5G,GAAA4M,UAAAs3D,EACAx0D,EAAAtP,KAAAsjD,WAAA98C,IAAA5G,GACA2P,EAAAvP,KAAAwjD,SAAAh9C,IAAA5G,GACA0M,EAAAtM,KAAAsM,KAAA9F,IAAA5G,GAEA+J,EAAAnB,EAAAnC,IAAAiB,GACA7G,EAAA6O,EACA3H,GAAA4H,EAAAD,GAAA6D,EAAA7F,IAAA3D,GACAa,EAAAiQ,EAAApJ,MAAA7I,EAAAxH,OASA,KANAsL,GACA9B,EAAA8B,KAAA,SAAA7L,EAAA8L,GACA,MAAA5C,GAAAlJ,GAAAkJ,EAAA4C,KAIA5L,EAAA,EAAAA,EAAA6J,EAAAxJ,SAAAL,EACAR,EAAAqI,EAAAgC,EAAA7J,IACAmF,EAAA6D,EAAAa,EAAA7J,IACAwH,EAAAe,IAAA/I,EAAAq0B,EAAAllB,MAAA7O,GACA0H,EAAAe,IAAA/I,EAAAq0B,EAAA7kB,IAAAlP,EAAA,GAAAqF,EAAA6B,GACAQ,EAAAe,IAAA/I,EAAAq0B,EAAAjlB,KAAA9O,GAAAqF,EAAA6B,EAMA,OAHA4B,GAAArE,OAAAsvB,EAAAllB,OAAA,EACA/F,EAAArE,OAAAsvB,EAAAjlB,MAAA,EACAhG,EAAArE,OAAAsvB,EAAA7kB,KAAA,EACApG,GAGA9J,EAAAD,QAAAqkE,I1Fu9cG9iE,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAGurB,mBAAmB,GAAG9G,cAAc,GAAGt6D,QAAU,KAAKqhE,IAAI,SAAStjE,EAAQjB,EAAOD,G2Flhd5G,QAAAykE,GAAArxC,GAGA,MAFAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MAAAkkE,IAAAlzD,KAAA,kBACAhR,KAAA0vB,QAAA,GARA,GAAAjV,GAAA/Z,EAAA,WACA07D,EAAA17D,EAAA,eAEAkvB,GADAlvB,EAAA,iBACAA,EAAA,kBAQAiF,EAAAs+D,EAAAr+D,UAAA,GAAAw2D,EAEAz2D,GAAAwnC,UAAA,SAAA5jC,GAOA,MANAqmB,GAAArmB,GAAA,aAEAA,EAAAX,IAAA5H,QAAAuI,EAAAF,IAAArI,QAAAuI,EAAAT,IAAA9H,UACAuI,EAAA+C,KAAAmO,EAAA/I,WAAA1R,KAAAkkE,GAAA19D,IAAAxG,KAAAszB,QAAApuB,SAGAqE,GAGA9J,EAAAD,QAAAykE,I3FyhdGpF,gBAAgB,GAAGxxC,gBAAgB,IAAI4vC,cAAc,GAAGt6D,QAAU,KAAKwhE,IAAI,SAASzjE,EAAQjB,EAAOD,G4F3idtG,QAAA4kE,GAAAxxC,GAcA,MAbAuqC,GAAAv3D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACAkG,SAAA8K,KAAA,gBACAqzD,QAAArzD,KAAA,gBACA1J,OAAA0J,KAAA,SACA0P,QAAA1P,KAAA,QAAAusD,UAAA,UAGAv9D,KAAA2zB,SACArkB,MAAA,eACAC,KAAA,cACAI,IAAA,cAEA3P,KA0CA,QAAAskE,GAAA97D,EAAAtC,EAAAm+D,EAAA/8D,GACA,GACAjB,GAAA1F,EAAA+G,EAAAC,EAAA/H,EAAAU,EAAAoK,EADA65D,IAIA,IAAA,MAAAr+D,EACAq+D,EAAAhhE,KAAAiF,EAAAoE,aAEA,KAAAvG,KAAA1F,EAAA,EAAAA,EAAA6H,EAAAxH,SAAAL,EACA+G,EAAAc,EAAA7H,GACAgH,EAAAzB,EAAAG,IAAA,SAAA9G,GAAA,MAAAA,GAAAmI,KACA9H,EAAAyG,EAAAsB,KAAA48D,EAAAhhE,KAAA8C,EAAAsB,OAAAtB,EAAAsB,IACA/H,EAAA2D,KAAAmE,EAKA,KAAAC,EAAA,EAAA+C,EAAA,EAAA/C,EAAA48D,EAAAvjE,SAAA2G,EAAA,CAEA,IADA/H,EAAA2kE,EAAA58D,GACAhH,EAAA,EAAAL,EAAA,EAAAK,EAAAf,EAAAoB,SAAAL,EACAL,GAAAgH,EAAA1H,EAAAe,GAEAf,GAAA0N,IAAAhN,EACAA,EAAAoK,IAAAA,EAAApK,GACA,MAAA+jE,GAAAzkE,EAAA0M,KAAA+3D,GAIA,MAFAE,GAAA75D,IAAAA,EAEA65D,EAzFA,GAAA9pD,GAAA/Z,EAAA,WACA07D,EAAA17D,EAAA,eACAy8D,EAAAz8D,EAAA,oBACAyH,EAAAzH,EAAA,qBAmBAiF,EAAAy+D,EAAAx+D,UAAA,GAAAu3D,EAEAx3D,GAAAy3D,eAAA,SAAA7zD,EAAAf,GAYA,IAAA,GAXA5I,GAAAI,KAAAszB,OACAptB,EAAAlG,KAAAkG,QAAAM,IAAA5G,GAAA2H,UACA88D,EAAA5pD,EAAA/I,WAAA1R,KAAAqkE,OAAA79D,IAAA5G,GAAAsF,QACAoC,EAAAtH,KAAAsH,MAAAd,IAAA5G,GAAA4M,SACAkU,EAAA1gB,KAAA0gB,OAAAla,IAAA5G,GACA40B,EAAAx0B,KAAA2zB,QAGA4wC,EAAAD,EAAA97D,EAAAtC,EAAAm+D,EAAA/8D,GAGA3G,EAAA,EAAA+J,EAAA65D,EAAA75D,IAAA/J,EAAA4jE,EAAAvjE,SAAAL,EAAA,CACA,GAIAA,GAAA+G,EAAAjH,EAJAqqC,EAAAy5B,EAAA5jE,GACA2M,EAAAw9B,EAAAx9B,IACApJ,EAAA,WAAAwc,GAAAhW,EAAA4C,GAAA,EAAA,EACA49B,EAAA,cAAAxqB,EAAA,EAAApT,EAAA,EACAf,EAAArI,EAAA4B,EAAA,CAGA,KAAAc,EAAA,EAAAA,EAAAkkC,EAAA9pC,SAAA4F,EACAc,EAAAojC,EAAAlkC,GACAnG,EAAA8L,EACAzG,GAAAwB,EAAAI,GACA6E,EAAA2+B,EAAAplC,EAAA5B,EACAiE,EAAAe,IAAAxB,EAAA8sB,EAAAllB,MAAA7O,GACA0H,EAAAe,IAAAxB,EAAA8sB,EAAAjlB,KAAAhD,GACApE,EAAAe,IAAAxB,EAAA8sB,EAAA7kB,IAAA,IAAAlP,EAAA8L,IAOA,MAHAhD,GAAArE,OAAAsvB,EAAAllB,OAAA,EACA/F,EAAArE,OAAAsvB,EAAAjlB,MAAA,EACAhG,EAAArE,OAAAsvB,EAAA7kB,KAAA,EACApG,GAkCA9J,EAAAD,QAAA4kE,I5FkjdG5rB,oBAAoB,GAAGurB,mBAAmB,GAAG9G,cAAc,GAAGt6D,QAAU,KAAK6hE,IAAI,SAAS9jE,EAAQjB,EAAOD,G6F1od5G,QAAA48D,GAAAxpC,GAEA,MADAA,IAAApxB,EAAAoE,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACA5yB,KANA,GAAAwB,GAAAd,EAAA,oBACAsiE,EAAAtiE,EAAA,eACAuzB,EAAAvzB,EAAA,oBAOA07D,GAAAC,cAAA,SAAA12D,EAAA8+D,GACA,GAAA7oD,EACA,KAAA,GAAArX,KAAAkgE,GACA7oD,EAAA6oD,EAAAlgE,GACAoB,EAAApB,GAAA,GAAAy+D,GAAAz+D,EAAAqX,EAAA5K,MACA4K,EAAAxR,eAAA,YAAAzE,EAAApB,GAAA2E,IAAAvD,EAAAiW,EAAAA,WAEAjW,GAAA++D,YAAAD,EAGA,IAAA9+D,GAAAy2D,EAAAx2D,UAAA,GAAApE,EAEAmE,GAAAujB,MAAA,WACA,GAAA9oB,GAAAoB,EAAAoE,UAAAsjB,MAAAnoB,KAAAf,KACAI,GAAA+sC,UAAAntC,KAAAmtC,UACA/sC,EAAAskE,YAAA1kE,KAAA0kE,WACA,KAAA,GAAA/8D,KAAA3H,MACAI,EAAAuH,KACAvH,EAAAuH,GAAA3H,KAAA2H,GAEA,OAAAvH,IAGAuF,EAAAwnC,UAAA,SAAA5jC,EAAAwuB,GAAA,MAAAxuB,IACA5D,EAAAgqB,SAAA,SAAApmB,GAGA,GAAAwuB,GAAA/3B,KAAAm1B,OAAA5rB,EAAAwsB,OAAA/1B,KAAAi2B,WAAAhC,EAAAkC,SAAAxf,KAAA,SAAArW,GACA,QAAAiJ,EAAA8lB,QAAA/uB,IAGA,OAAAN,MAAAmtC,UAAA5jC,EAAAwuB,IAGApyB,EAAA6uB,OAAA,SAAAnuB,GACA,IAAA,GAAAN,KAAA/F,MAAA2zB,QACAxmB,SAAA9G,EAAAN,KACA/F,KAAA2zB,QAAA5tB,GAAAM,EAAAN,GAGA,OAAA/F,OAGAP,EAAAD,QAAA48D,I7FgpdG3tC,mBAAmB,GAAGwE,oBAAoB,IAAI0xC,cAAc,KAAKC,IAAI,SAASlkE,EAAQjB,EAAOD,IAChG,SAAWM,G8F/rdX,QAAA+kE,GAAAjyC,GAwBA,MAvBAuqC,GAAAv3D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MAEAsM,MAAA0E,KAAA,eAAAusD,WAAA,WACApoD,UAAAnE,KAAA,QAAAusD,UAAA,YACAj2D,OAAA0J,KAAA,QAAAusD,UAAA,SAEAt0C,MAAAjY,KAAA,eAAAusD,WAAA,IAAA,MACAnuD,OAAA4B,KAAA,QAAAusD,WAAA,GACAuH,QAAA9zD,KAAA,QAAAusD,WAAA,GACApd,OAAAnvC,KAAA,QAAAusD,UAAA,IAAA,EAAA3uD,KAAAgE,KAAA,KACAoe,SAAAhgB,KAAA,QAAAusD,UAAA,MACAwH,MAAA/zD,KAAA,QAAAusD,UAAA,cAGAv9D,KAAAigE,QAAA9sD,EAAA+sD,OAAA8E,UAEAhlE,KAAA2zB,SACAjsB,EAAA,WACAiL,EAAA,WACAkY,MAAA,eACAC,OAAA,iBAEA9qB,KA9BA,GAAAya,GAAA/Z,EAAA,WACAyS,EAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACAipD,EAAA17D,EAAA,eACAy8D,EAAAz8D,EAAA,oBACAyH,EAAAzH,EAAA,qBA6BAiF,EAAAk/D,EAAAj/D,UAAA,GAAAu3D,EAEAx3D,GAAAy3D,eAAA,SAAA7zD,EAAAf,GAEA,GAAA5I,GAAAI,KAAAszB,OACA4sC,EAAAlgE,KAAAigE,QACAzrC,EAAAx0B,KAAA2zB,OA4BA,OAzBAusC,GACA5zD,KAAAmO,EAAA/I,WAAA1R,KAAAsM,KAAA9F,IAAA5G,GAAAsF,SACAiQ,SAAAnV,KAAAmV,SAAA3O,IAAA5G,GAAA4M,UACAlF,MAAAtH,KAAAsH,MAAAd,IAAA5G,GAAA4M,UACAyc,KAAAjpB,KAAAipB,KAAAziB,IAAA5G,IACAwP,MAAApP,KAAAoP,MAAA5I,IAAA5G,IACAklE,OAAA9kE,KAAA8kE,OAAAt+D,IAAA5G,IACAugD,MAAAngD,KAAAmgD,MAAA35C,IAAA5G,IACAoxB,QAAAhxB,KAAAgxB,QAAAxqB,IAAA5G,IACAmlE,KAAA/kE,KAAA+kE,KAAAv+D,IAAA5G,IACAgpB,MAAApgB,EAAA,IAGAA,EAAA2D,QAAA,SAAA/L,GACA+H,EAAAe,IAAA9I,EAAAo0B,EAAA9sB,EAAAtH,EAAAsH,GACAS,EAAAe,IAAA9I,EAAAo0B,EAAA7hB,EAAAvS,EAAAuS,GACAxK,EAAAe,IAAA9I,EAAAo0B,EAAA3J,MAAAzqB,EAAA+pB,IACAhiB,EAAAe,IAAA9I,EAAAo0B,EAAA1J,OAAA1qB,EAAAgqB,MAIA7gB,EAAArE,OAAAsvB,EAAA9sB,GAAA,EACA6B,EAAArE,OAAAsvB,EAAA7hB,GAAA,EACApJ,EAAArE,OAAAsvB,EAAA3J,OAAA,EACAthB,EAAArE,OAAAsvB,EAAA1J,QAAA,EACAvhB,GAGA9J,EAAAD,QAAAqlE,I9FusdG9jE,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH24C,oBAAoB,GAAGurB,mBAAmB,GAAG9G,cAAc,GAAGt6D,QAAU,KAAKsiE,IAAI,SAASvkE,EAAQjB,EAAOD,G+F1wd5G,QAAA0lE,GAAAtyC,GAOA,MANAupC,GAAAv2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACA6c,OAAA7L,KAAA,SACAlK,IAAAkK,KAAA,WAGAhR,KAZA,GAAAo8D,GAAA17D,EAAA,eACAy7D,EAAAz7D,EAAA,aACAyH,EAAAzH,EAAA,qBACAkvB,EAAAlvB,EAAA,iBAYAiF,EAAAu/D,EAAAt/D,UAAA,GAAAu2D,EAEAx2D,GAAA84D,WAAA,SAAA/2D,GACA,GAAAnH,MACAwD,EAAA/D,KAAA6c,MAAArW,IAAAxG,KAAAszB,QACAxsB,EAAA9G,KAAA8G,GAAAN,IAAAxG,KAAAszB,OAGA,OADA/yB,GAAAuG,GAAA/C,EAAAyI,SAAA9E,GACAS,EAAAgsB,OAAA5zB,EAAA,OAGAoF,EAAAwnC,UAAA,SAAA5jC,EAAAwuB,GAGA,MAFAnI,GAAArmB,GAAA,YACAvJ,KAAA68D,IAAA78D,KAAA6c,MAAArW,IAAAxG,KAAAszB,QACA6oC,EAAAv2D,UAAAunC,UAAApsC,KAAAf,KAAAuJ,EAAAwuB,IAGAt4B,EAAAD,QAAA0lE,I/FixdG1sB,oBAAoB,GAAGnrB,gBAAgB,IAAI2vC,YAAY,GAAGC,cAAc,KAAKkI,IAAI,SAASzkE,EAAQjB,EAAOD,GgG5yd5G,QAAA4lE,GAAAxyC,GAcA,MAbAwpC,GAAAx2D,UAAAgG,KAAA7K,KAAAf,KAAA4yB,GACAwpC,EAAAC,cAAAr8D,MACA29D,QAAA3sD,KAAA,QACAlK,IAAAkK,KAAA,SACAjL,KAAAiL,KAAA,QAAAusD,UAAA,QACA8H,SAAAr0D,KAAA,QAAAusD,UAAA,MACAA,WAAAvsD,KAAA,WAGAhR,KAAAgyD,QACAhyD,KAAA6zB,WAAA,GAAAtuB,GAAAqtB,GACA5yB,KAAAslE,UAAA,EAEAtlE,KAAA+vB,SAAA,GAKA,QAAAw1C,GAAA59D,GACA,MAAA3H,MAAAgyD,KAAArqD,KAAA3H,KAAAgyD,KAAArqD,OAzBA,GAAA8S,GAAA/Z,EAAA,WACA07D,EAAA17D,EAAA,eACA6E,EAAA7E,EAAA,yBACAkvB,EAAAlvB,EAAA,iBAmBAiF,EAAAy/D,EAAAx/D,UAAA,GAAAw2D,EAMAz2D,GAAAwnC,UAAA,SAAA5jC,GACA,GAAA2a,GAAAlkB,KAAAA,QAAAwG,IAAAxG,KAAAszB,QACAkyC,EAAAthD,EAAAjE,OACAq+C,EAAAkH,EAAAv1C,OACAguC,EAAAuH,EAAA77D,SACA5D,EAAA/F,KAAA+F,IAAAS,IAAAxG,KAAAszB,QACA+xC,EAAArlE,KAAAqlE,QAAA7+D,IAAAxG,KAAAszB,QACAxsB,EAAA9G,KAAA8G,GAAAN,IAAAxG,KAAAszB,QACAmyC,EAAAzlE,KAAAA,WAAAwG,IAAAxG,KAAAszB,QACAjtB,EAAAk/D,EAAArlD,KAAAlgB,MACA8I,IAIA,IAFA8mB,EAAArmB,GAAA,UAAA2a,EAAA3f,OAEA8gE,EAAAxoD,MACAyhD,GAAAA,EAAAvoC,MAAA/1B,KAAAslE,YACAhH,EAAAx1D,IAAAqD,QAAA,SAAAzE,GACA,GAAAf,GAAAN,EAAAg/D,EAAA74D,SAAA9E,GACAf,GAAA,IAAAA,EAAA,GAAAwF,QAAA,SAAA7F,GAAAA,EAAAQ,GAAA2+D,IACA9+D,EAAA,GAAA,OAGA23D,EAAA11D,IAAAuD,QAAA,SAAAzE,GACA,GAAAf,GAAAN,EAAAg/D,EAAA74D,SAAA9E,GACAf,GAAA,IAAAA,EAAA,GAAAwF,QAAA,SAAA7F,GAAAA,EAAAQ,GAAAY,IACAf,EAAA,GAAAe,IAKA42D,EAAAp5D,OAAAmgE,EAAAxoD,QACAyhD,EAAAj1D,IAAA8C,QAAA,SAAAzE,GACA,GAAAsB,EACA,IAAAtB,EAAAssB,OAAA7mB,UAAAnE,EAAAq8D,EAAA74D,SAAA9E,EAAAssB,QAAA,CACA,GAAA0xC,GAAAr/D,EAAA2C,EACA08D,GAAA,IAAAA,EAAA,GAAAv5D,QAAA,SAAA7F,GAAAA,EAAAQ,GAAA2+D,IACAC,EAAA,GAAA,IAEA,IAAA/+D,GAAAN,EAAAg/D,EAAA74D,SAAA9E,GACAf,GAAA,IAAAA,EAAA,GAAAwF,QAAA,SAAA7F,GAAAA,EAAAQ,GAAAY,IACAf,EAAA,GAAAe,KAIA1H,KAAAslE,UAAAhH,EAAAvoC,OAGAxsB,EAAAX,IAAAuD,QAAA,SAAAzE,GACA,GAAAf,GAAAN,EAAAN,EAAAyG,SAAA9E,GACAA,GAAAZ,GAAAH,EAAA,IAAA8+D,GACA9+D,EAAA,GAAAA,EAAA,QAAApD,KAAAmE,KAGA6B,EAAAT,IAAAqD,QAAA,SAAAzE,GACA,GAAAC,GAAA5B,EAAAyG,SAAA9E,IACAoB,EAAAnB,GAAAmB,EAAAnB,QAAAD,EAAAsrB,KAAA,IAGAzpB,EAAArE,OAAAa,EAAA8W,QACAtT,EAAAF,IAAA8C,QAAA,SAAAzE,GACA,GAAAsB,EACA,IAAAtB,EAAAssB,OAAA7mB,UAAAnE,EAAAjD,EAAAyG,SAAA9E,EAAAssB,QAAA,CAEA,GAAArtB,GAAAN,EAAAN,EAAAyG,SAAA9E,GACAA,GAAAZ,GAAAH,EAAA,IAAA8+D,GACA9+D,EAAA,GAAAA,EAAA,QAAApD,KAAAmE,IACAoB,EAAAE,GAAAF,EAAAE,QAAAtB,EAAAsrB,KAAA,KAIAvY,EAAA3S,KAAAgB,GAAAqD,QAAA,SAAAxE,GACA,GAAAhB,GAAAN,EAAAsB,EACAhB,GAAA,KACAA,EAAA,GAAAA,EAAA,GAAAqW,OAAA,SAAAtV,GAAA,MAAA,KAAAoB,EAAAnB,GAAAD,EAAAsrB,cAEA,CAGA,GAAA,GAAAzpB,EAAAX,IAAA5H,QAAA,GAAAuI,EAAAT,IAAA9H,QACA,GAAAs9D,EAAA11D,IAAA5H,QAAA,GAAAs9D,EAAAx1D,IAAA9H,OAAA,MAAAuI,EAIAvJ,MAAA6zB,WAAAlE,SAAApmB,EAEA,IACA5I,GADA6H,EAAAxI,KAAA6zB,WAAArrB,OACAm9D,EAAA1H,EAAAj9D,MAEA,KAAAL,EAAA,EAAAA,EAAA6H,EAAAxH,OAAAL,IAAA6H,EAAA7H,GAAAmG,GAAAm3D,EAAAt9D,EAAAglE,GAIA,MADAp8D,GAAArE,OAAA4B,GAAA,EACAyC,GAGA9J,EAAAD,QAAA4lE,IhGmzdG7Q,wBAAwB,GAAGlnC,gBAAgB,IAAI4vC,cAAc,GAAGt6D,QAAU,KAAKijE,KAAK,SAASllE,EAAQjB,EAAOD,GiG96d/GC,EAAAD,SACAqmE,UAAAnlE,EAAA,eACA88D,IAAA98D,EAAA,SACAy9D,MAAAz9D,EAAA,WACAolE,SAAAplE,EAAA,cACA2yB,MAAA3yB,EAAA,WACAsc,OAAAtc,EAAA,YACAy+D,KAAAz+D,EAAA,UACAy/D,MAAAz/D,EAAA,WACAqlE,QAAArlE,EAAA,aACAghE,IAAAhhE,EAAA,SACAslE,QAAAtlE,EAAA,aACAulE,IAAAvlE,EAAA,SACA4L,KAAA5L,EAAA,UACAknC,MAAAlnC,EAAA,WACAskE,QAAAtkE,EAAA,aACA6Q,OAAA7Q,EAAA,YACAwlE,IAAAxlE,EAAA,YjGi7dGylE,cAAc,GAAGC,QAAQ,GAAGC,UAAU,GAAGC,UAAU,GAAGC,WAAW,GAAGC,SAAS,GAAGC,UAAU,GAAGC,YAAY,GAAG1E,QAAQ,GAAG2E,YAAY,GAAGC,aAAa,GAAGC,QAAQ,GAAGC,SAAS,GAAGC,UAAU,GAAGC,YAAY,GAAGC,WAAW,GAAGC,QAAQ,KAAKC,KAAK,SAASzmE,EAAQjB,EAAOD,GkG71dpQ,QAAAgM,GAAAC,GACA,MAAA,UAAAC,GACA,GAAA/E,GAAAge,OAAA1d,OAAAwE,EAGA,OAFA9E,GAAA+E,IAAAA,GAAAD,EAAAlH,KACAoC,EAAAkF,MAAAlF,EAAAkF,IAAA,GACAlF,GAIA,QAAAmF,GAAAC,GACA,QAAAxD,GAAA5B,EAAAlG,GAIA,OAHAA,EAAAyL,SAAAC,QAAA,SAAA9L,GACAsG,EAAAtG,IAAAkI,EAAA5B,EAAAA,EAAAtG,GAAA4L,EAAA5L,QAEAsG,EAEA,GAAAN,GAAA0F,EAAAZ,OAAA5C,EACAwD,EAAAZ,OAAA,SAAAxE,EAAAlG,GAAA,MAAAkG,GAAAlG,EAAA8D,MAAA9D,EAAAkG,QACA+F,IACA,KAAA,GAAA/E,KAAAtB,GAAAqG,EAAAnJ,KAAA8C,EAAAsB,GAEA,OADA+E,GAAAJ,KAAA,SAAA7L,EAAA8L,GAAA,MAAA9L,GAAAoL,IAAAU,EAAAV,MACAa,EAGA,QAAAytC,GAAApuC,GACA,GAAAW,GAAAZ,EAAAC,GACAY,EAAA,+BACA/D,EAAA,GACAE,EAAA,GACAI,EAAA,mBAcA,OAZAwD,GAAAP,QAAA,SAAA1L,GAAAkM,GAAAlM,EAAAmL,KAAAhD,GAAAnI,EAAAmI,IAAAE,GAAArI,EAAAqI,MACAiD,EAAAI,QAAA,SAAA1L,GAAAyI,GAAA,qBAAAzI,EAAAiL,IAAA,KAAAjL,EAAAyI,IAAA,OACAA,GAAA,YAEAyD,EAAAE,SAAA,IAAA,IAAAF,GACAA,EAAA/G,UAAAgD,IAAAiE,SAAA,IAAAjE,GACA+D,EAAA/G,UAAAkD,IAAA+D,SAAA,IAAA/D,GACA6D,EAAA/G,UAAAsD,IAAA2D,SAAA,QAAA3D,GACAyD,EAAA/G,UAAAyD,IAAAA,EACAsD,EAAA/G,UAAAkC,KAAA2S,EAAA3S,KACA6E,EAAA/G,UAAAg4C,IAAAwpB,EACAz6D,EAAA/G,UAAAuC,MAAAA,EACAwE,EAGA,QAAAtD,GAAA4D,EAAAC,GACAC,SAAAD,GAAAA,IAAAD,IACAjN,KAAA8I,IAAAoE,GACAlN,KAAA4I,IAAAqE,IAtJA,GAAAwN,GAAA/Z,EAAA,WACAyH,EAAAzH,EAAA,qBACA0mE,EAAA1mE,EAAA,uBAGAuL,GAFAvL,EAAA,sBAGAyG,MAAAqE,GACAjH,KAAA,QACAqH,KAAA,GACAhD,IAAA,GACAE,IAAA,GACAI,IAAA,kBAEAm+D,QAAA77D,GACAjH,KAAA,UACAqH,KAAA,kBACAhD,IAAA,sCACAE,IAAA,wDACAI,IAAA,GACAgD,KAAA,WAEAoB,IAAA9B,GACAjH,KAAA,MACAqH,KAAA,gBACAhD,IAAA,iBACAE,IAAA,iBACAI,IAAA,aAEAoU,IAAA9R,GACAjH,KAAA,MACAqH,KAAA,gBACAhD,IAAA,uDACAE,IAAA,uDACAI,IAAA,WACAgD,KAAA,SAAAL,IAAA,IAEAywD,MAAA9wD,GACAjH,KAAA,MACAqH,KAAA,gBACAhD,IAAA,kCACAE,IAAA,kCACAI,IAAA,+BACAgD,KAAA,OAAAL,IAAA,IAEA0wD,KAAA/wD,GACAjH,KAAA,OACAqH,KAAA,GACAhD,IAAA,GACAE,IAAA,GACAI,IAAA,2BACAgD,KAAA,OAAAL,IAAA,IAEA8B,MAAAnC,GACAjH,KAAA,QACAqH,KAAA,GACAhD,IAAA,GACAE,IAAA,GACAI,IAAA,0CACAgD,KAAA,OAAAL,IAAA,IAEA+B,OAAApC,GACAjH,KAAA,SACAqH,KAAA,GACAhD,IAAA,GACAE,IAAA,GACAI,IAAA,sCACAgD,KAAA,OAAAL,IAAA,IAEApB,IAAAe,GACAjH,KAAA,MACAqH,KAAA,wBACAhD,IAAA,0CACAE,IAAA,wKAIAI,IAAA,WACAgD,KAAA,WAAAL,IAAA,IAEAnB,IAAAc,GACAjH,KAAA,MACAqH,KAAA,wBACAhD,IAAA,0CACAE,IAAA,wKAIAI,IAAA,WACAgD,KAAA,WAAAL,IAAA,IAEAgC,OAAArC,GACAjH,KAAA,SACAqH,KAAA,mBACAhD,IAAA,oCACAE,IAAA,oBACAI,IAAA,gMAEAgD,KAAA,WAAAL,IAAA,KAwDAI,GAAAhF,OAAAkzC,EACA16C,EAAAD,QAAAyM,IlGo8dGusC,oBAAoB,GAAGvlB,oBAAoB,IAAIq0C,sBAAsB,IAAI3kE,QAAU,KAAK4kE,KAAK,SAAS7mE,EAAQjB,EAAOD,IACxH,SAAWM,GmGjleX,QAAA8iD,GAAAriD,GACA,OAAAA,EAAAsiD,UAAAtiD,EAAAsiD,UAAA,IAAA,KACAtiD,EAAAuiD,YAAAviD,EAAAuiD,YAAA,IAAA,KACAviD,EAAAwiD,WAAAxiD,EAAAwiD,WAAA,IAAA,KACA,MAAAxiD,EAAAyiD,SAAAziD,EAAAyiD,SAAAjhD,EAAA8pB,OAAAm3B,UAAA,OACAziD,EAAA0iD,MAAAlhD,EAAA8pB,OAAAo3B,MAGA,QAAA9iC,KAEA,MAAAqnD,KAAAA,EAEAr0D,EAAAqe,OAAA,QAAAC,OAAA,UACAC,KAAA,QAAA,eACAA,KAAA,QAAA,GACAA,KAAA,SAAA,GACAC,MAAA,UAAA,QACA1c,OACA8X,WAAA,OAGA,QAAA06C,GAAAlnE,EAAAo6C,EAAAjxB,GASA,MARA,OAAAixB,EACAjxB,EAAAxgB,IAAA,EAAA,EAAA,EAAA,IAEAw+D,EAAA/sB,EAAAjxB,GACAnpB,EAAA8kD,QAAA,IAAA9kD,EAAA+kD,SAAA/kD,EAAAqkD,YAAA,GACAl7B,EAAAO,OAAA1pB,EAAAqkD,cAGAl7B,EAGA,QAAAixB,GAAAp6C,EAAAmpB,GACA,GAAA9N,GAAArb,EAAAo6C,KACAp6C,EAAAsjD,YAAAtjD,EAAAsjD,UAAApiD,EAAAlB,EAAAo6C,OACA,IACA,OAAA8sB,GAAAlnE,EAAAqb,EAAA8N,GAGA,QAAAq6B,GAAAxjD,EAAAmpB,GACA,GAAAoG,GAAAvvB,EAAAs3C,KAAA/nB,MAAAvvB,EAAAuvB,EAAA,GACAlU,EAAArb,EAAAsjD,YAAAtjD,EAAAsjD,UAAApiD,EAAAmiD,EAAA9zB,IACA,OAAA23C,GAAA33C,EAAA,GAAAlU,EAAA8N,GAGA,QAAAkZ,GAAAriC,EAAAmpB,GACA,GAAAoG,GAAAvvB,EAAAs3C,KAAA/nB,MAAAvvB,EAAAuvB,EAAA,GACAlU,EAAArb,EAAAsjD,YAAAtjD,EAAAsjD,UAAApiD,EAAAwiD,EAAAn0B,IACA,OAAA23C,GAAA33C,EAAA,GAAAlU,EAAA8N,GAGA,QAAA03B,GAAA7gD,EAAAmpB,GACA,GAAAhiB,GAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,EACAuR,EAAAxc,EAAAnH,EAAAsqB,OAAA,EACA1Z,EAAAwB,EAAApS,EAAAuqB,QAAA,CAKA,OAJApB,GAAAxgB,IAAAxB,EAAAiL,EAAAuR,EAAA/S,GACA5Q,EAAA8kD,QAAA,IAAA9kD,EAAA+kD,SAAA/kD,EAAAqkD,YAAA,GACAl7B,EAAAO,OAAA1pB,EAAAqkD,aAEAl7B,EAGA,QAAA04B,GAAA7hD,EAAAmpB,GACA,GAAAxF,GAAA3jB,EAAAsqB,OAAA,EACA1Z,EAAA5Q,EAAAuqB,QAAA,EACApjB,GAAAnH,EAAAmH,GAAA,IAAA,WAAAnH,EAAA6lD,MACAliC,EAAA,EAAA,UAAA3jB,EAAA6lD,MAAAliC,EAAA,GACAvR,GAAApS,EAAAoS,GAAA,IAAA,WAAApS,EAAA8lD,SACAl1C,EAAA,EAAA,WAAA5Q,EAAA8lD,SAAAl1C,EAAA,EACA,OAAAuY,GAAAxgB,IAAAxB,EAAAiL,EAAAjL,EAAAwc,EAAAvR,EAAAxB,GAGA,QAAAqmC,GAAAj3C,EAAAmpB,GACA,GAAAE,GAAAE,CAUA,OATAJ,GAAAxgB,IACA0gB,EAAArpB,EAAAmH,GAAA,EACAoiB,EAAAvpB,EAAAoS,GAAA,EACA,MAAApS,EAAAwpB,GAAAxpB,EAAAwpB,GAAAH,EACA,MAAArpB,EAAAypB,GAAAzpB,EAAAypB,GAAAF,GAEAvpB,EAAA8kD,QAAA,IAAA9kD,EAAA+kD,SAAA/kD,EAAAqkD,YAAA,GACAl7B,EAAAO,OAAA1pB,EAAAqkD,aAEAl7B,EAGA,QAAAg6B,GAAAnjD,EAAAmpB,GACA,GAQAjpB,GAAAE,EAAAP,EAAAsH,EAAAiL,EAAA+vD,EAAAC,EAAAzY,EAAAC,EARA1/B,EAAAlqB,EAAAmH,GAAA,EACAgjB,EAAAnqB,EAAAoS,GAAA,EACAwwC,EAAA5iD,EAAA6iD,aAAA,EACArJ,EAAAx5C,EAAA8iD,aAAA,EACAx9B,GAAAtlB,EAAA+iD,YAAA,GAAAqkB,EACApkB,GAAAhjD,EAAAijD,UAAA,GAAAmkB,EACAC,EAAAx1D,EAAAA,EAAAy1D,IAAAz1D,EAAAA,GACA01D,EAAA11D,EAAAA,EAAA21D,IAAA31D,EAAAA,GAGA41D,GAAAniD,EAAA09B,GACAjjD,EAAAulB,EAAAA,EAAA8hD,CACA,KAAAhnE,EAAA,EAAA,EAAAA,GAAA4iD,EAAAjjD,IAAAK,EAAAL,GAAAqnE,EACAK,EAAAzkE,KAAAjD,EAGA,KAAAK,EAAA,EAAAP,EAAA4nE,EAAAhnE,OAAAZ,EAAAO,IAAAA,EACAF,EAAAunE,EAAArnE,GACA+G,EAAAkH,KAAA2b,IAAA9pB,GAAAiiE,EAAAvf,EAAAz7C,EAAAwiD,EAAAnQ,EAAAryC,EACAiL,EAAA/D,KAAA4b,IAAA/pB,GAAAkiE,EAAAxf,EAAAxwC,EAAAw3C,EAAApQ,EAAApnC,EACAi1D,EAAAh5D,KAAAnE,IAAAm9D,EAAAlF,EAAAxY,GACA2d,EAAAj5D,KAAAlE,IAAAm9D,EAAAnF,EAAAxY,GACA4d,EAAAl5D,KAAAnE,IAAAq9D,EAAAnF,EAAAxY,GACA4d,EAAAn5D,KAAAlE,IAAAq9D,EAAApF,EAAAxY,EAOA,OAJAzgC,GAAAxgB,IAAAuhB,EAAAm9C,EAAAl9C,EAAAo9C,EAAAr9C,EAAAo9C,EAAAn9C,EAAAq9C,GACAxnE,EAAA8kD,QAAA,IAAA9kD,EAAA+kD,SAAA/kD,EAAAqkD,YAAA,GACAl7B,EAAAO,OAAA1pB,EAAAqkD,aAEAl7B,EAGA,QAAA4+B,GAAA/nD,EAAAmpB,GACA,GAGArpB,GAAAF,EAAAikD,EAAAC,EAHAp7B,EAAA,MAAA1oB,EAAA0oB,KAAA1oB,EAAA0oB,KAAA,IACAvhB,EAAAnH,EAAAmH,GAAA,EACAiL,EAAApS,EAAAoS,GAAA,CAGA,QAAApS,EAAA+jD,OACA,IAAA,QACAjkD,EAAAuO,KAAAgE,KAAAqW,EAAA,GAAA,EACA9oB,EAAA,EAAAE,EACAqpB,EAAAxgB,IAAAxB,EAAAvH,EAAAwS,EAAAtS,EAAAqH,EAAAvH,EAAAwS,EAAAtS,EACA,MAEA,KAAA,UACAgkD,EAAAz1C,KAAAgE,KAAAqW,GAAA,EAAAu7B,IACAJ,EAAAC,EAAAG,EACA96B,EAAAxgB,IAAAxB,EAAA08C,EAAAzxC,EAAA0xC,EAAA38C,EAAA08C,EAAAzxC,EAAA0xC,EACA,MAEA,KAAA,SACAlkD,EAAAyO,KAAAgE,KAAAqW,GACA5oB,EAAAF,EAAA,EACAupB,EAAAxgB,IAAAxB,EAAArH,EAAAsS,EAAAtS,EAAAqH,EAAArH,EAAAsS,EAAAtS,EACA,MAEA,KAAA,gBACA+jD,EAAAx1C,KAAAgE,KAAAqW,EAAAw7B,GACAJ,EAAAD,EAAAK,EAAA,EACA/6B,EAAAxgB,IAAAxB,EAAA08C,EAAAzxC,EAAA0xC,EAAA38C,EAAA08C,EAAAzxC,EAAA0xC,EACA,MAEA,KAAA,cACAD,EAAAx1C,KAAAgE,KAAAqW,EAAAw7B,GACAJ,EAAAD,EAAAK,EAAA,EACA/6B,EAAAxgB,IAAAxB,EAAA08C,EAAAzxC,EAAA0xC,EAAA38C,EAAA08C,EAAAzxC,EAAA0xC,EACA,MAEA,SACAhkD,EAAAuO,KAAAgE,KAAAqW,EAAAra,KAAAksB,IACApR,EAAAxgB,IAAAxB,EAAArH,EAAAsS,EAAAtS,EAAAqH,EAAArH,EAAAsS,EAAAtS,GAKA,MAHAE,GAAA8kD,QAAA,IAAA9kD,EAAA+kD,SAAA/kD,EAAAqkD,YAAA,GACAl7B,EAAAO,OAAA1pB,EAAAqkD,aAEAl7B,EAGA,QAAA3J,GAAAxf,EAAAmpB,EAAAu+C,GACA,GAMA/jD,GAAA/jB,EANAuH,GAAAnH,EAAAmH,GAAA,IAAAnH,EAAA4pB,IAAA,GACAxX,GAAApS,EAAAoS,GAAA,IAAApS,EAAA6pB,IAAA,GACAjZ,EAAA5Q,EAAAyiD,UAAAjhD,EAAA8pB,OAAAm3B,SACAviD,EAAAF,EAAA6lD,MACA75C,EAAAhM,EAAA8lD,SACAhmD,EAAAE,EAAAkmD,QAAA,EACA7mD,EAAAugB,GAwCA,OAtCAvgB,GAAAqjD,KAAAL,EAAAriD,GACAX,EAAA2mD,UAAA9lD,GAAA,OACAb,EAAA4mD,aAAAj6C,GAAA,aACA2X,EAAAtkB,EAAAsoE,YAAA3nE,EAAAwf,MAAA,IAAA8K,MAEAxqB,IACAF,GAAAI,EAAAmmD,OAAA,GAAA93C,KAAAksB,GAAA,EACApzB,GAAArH,EAAAuO,KAAA2b,IAAApqB,GACAwS,GAAAtS,EAAAuO,KAAA4b,IAAArqB,IAIA,WAAAM,EACAiH,GAAAwc,EAAA,EACA,UAAAzjB,IACAiH,GAAAwc,GASA,QAAA3X,EACAoG,GAAAxB,EAAA,EACA,WAAA5E,EACAoG,GAAAxB,EACA,WAAA5E,EACAoG,EAAAA,EAAAxB,EAAA,EAAAA,EAAA,GAEAwB,GAAA,EAAAxB,EAAA,EAGAuY,EAAAxgB,IAAAxB,EAAAiL,EAAAjL,EAAAwc,EAAAvR,EAAAxB,GACA5Q,EAAA+pB,QAAA29C,GACAv+C,EAAAW,OAAA9pB,EAAA+pB,MAAA1b,KAAAksB,GAAA,IAAAv6B,EAAAmH,GAAA,EAAAnH,EAAAoS,GAAA,GAEA+W,EAAAO,OAAAg+C,EAAA,EAAA,GAGA,QAAAn9B,GAAAlrC,EAAA8pB,EAAAy+C,GACA,GACAvhE,GAAAD,EADAkkC,EAAAjrC,EAAAsnD,cACAD,EAAArnD,EAAAunD,eAEA,KAAAvgD,EAAA,EAAAD,EAAAkkC,EAAA7pC,OAAA2F,EAAAC,IAAAA,EACA8iB,EAAAC,MAAAkhB,EAAAjkC,GAAA8iB,OAEA,KAAA9iB,EAAA,EAAAD,EAAA/G,EAAAkwB,MAAA9uB,OAAA2F,EAAAC,IAAAA,EACA8iB,EAAAC,MAAA/pB,EAAAkwB,MAAAlpB,GAAA8iB,OAEA,IAAAy+C,EAAA,CACA,IAAAvhE,EAAA,EAAAD,EAAAsgD,EAAAjmD,OAAA2F,EAAAC,IAAAA,EACA8iB,EAAAC,MAAAs9B,EAAArgD,GAAA8iB,OAEA,OAAA9pB,EAAAirB,OAAA,MAAAjrB,EAAAkrB,QACApB,EAAA9gB,IAAAhJ,EAAAirB,MAAAjrB,EAAAkrB,QAEA,MAAAlrB,EAAA8H,GAAA,MAAA9H,EAAA+S,GACA+W,EAAA9gB,IAAA,EAAA,GAIA,MADA8gB,GAAAQ,UAAAtqB,EAAA8H,GAAA,EAAA9H,EAAA+S,GAAA,GACA+W,EAgBA,QAAA0+C,GAAA5gD,EAAA6M,EAAAlmB,GACAkmB,EAAAA,GAAAg0C,EAAA7gD,EAAAqwB,KAAA0H,UACA/3B,EAAA8gD,cAAA9gD,EAAA,eAAA,GAAAu5B,GACA,IAAAx0C,GAAAib,EAAAkC,OAAA6+C,EAAA/gD,EAAA,cAIA,OAHAjb,IAAAg8D,EAAA/gE,QAAAmiB,MAAApd,GACAib,EAAAkC,OAAA2K,EAAA7M,EAAAjb,EAAAA,EAAA/E,QAAA,GAAAu5C,GAAA5yC,GACA5B,GAAAg8D,EAAA/gE,QAAAmiB,MAAAnC,EAAAkC,QACAlC,EAAAkC,OAGA,QAAA8+C,GAAA3wB,EAAAnuB,EAAAvb,GACAub,EAAAA,GAAAmuB,EAAAnuB,QAAAmuB,EAAAnuB,OAAAliB,SAAA,GAAAu5C,EACA,IAGApgD,GAAAsC,EAHA+N,EAAA6mC,EAAA0H,SACAlrB,EAAAg0C,EAAAr3D,GACA8e,EAAA+nB,EAAA/nB,KAGA,IAAA,SAAA9e,GAAA,SAAAA,EACA8e,EAAA9uB,SACA8uB,EAAA,GAAApG,OAAA2K,EAAAvE,EAAA,GAAApG,QAGA,KAAA/oB,EAAA,EAAAsC,EAAA6sB,EAAA9uB,OAAAiC,EAAAtC,IAAAA,EACA+oB,EAAAC,MAAAy+C,EAAAt4C,EAAAnvB,GAAA0zB,EAAAlmB,GAGA0pC,GAAAnuB,OAAAA,EAzSA,GAAAvW,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACA4tC,EAAArgD,EAAA,kBACAsqB,EAAAtqB,EAAA,yBACAqB,EAAArB,EAAA,YAEAe,EAAAupB,EAAAvpB,MACAimE,EAAA18C,EAAAtB,OACAk6B,EAAA54B,EAAA+4B,KACAE,EAAAj5B,EAAA4X,KACA+kC,EAAA/4D,KAAAksB,GAAA,EACA2pB,EAAA71C,KAAAgE,KAAA,GACA4xC,EAAA51C,KAAA+sB,IAAA,GAAA/sB,KAAAksB,GAAA,KACA0sC,EAAA,KAsPAa,GACAv9B,MAAAA,EACAwd,OAAAA,EACAlG,MAAAA,EACAhB,KAAAA,EACA5J,KAAAA,EACAkM,IAAAA,EACA3jC,KAAAA,EACA46B,KAAAA,EACAoJ,KAAAA,EACAnhB,KAAAA,EAgCAnjC,GAAAD,SACAq4C,KAAA2wB,EACAhhD,KAAA4gD,EACAroD,KAAAA,EACA+qB,MAAAA,KnGkmeG/pC,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExH4oE,iBAAiB,GAAGC,wBAAwB,GAAGC,WAAW,MAAMC,KAAK,SAASloE,EAAQjB,EAAOD,IAChG,SAAWM,GoGr5eX,GAAAqT,GAAA,mBAAAtT,QAAAA,OAAAsT,GAAA,mBAAArT,GAAAA,EAAAqT,GAAA,KACApR,IAEAA,GAAA6tB,OAAA,EAEA7tB,EAAA8U,MAGApB,QAAA,GAIAM,iBAAA,GAIAhU,EAAA0sD,aACA,8FAIA1sD,EAAAovB,aAAA,EAIApvB,EAAAmpC,OACA3pB,KAAApO,EAAAoO,KAAA2pB,MACA29B,IAAA11D,EAAAoO,KAAA2pB,MAAA29B,KAIA9mE,EAAA8pB,QACAk5B,UAAA,EACAC,QAAA,OACA/B,KAAA,aACAD,SAAA,IAIAjhD,EAAAkpC,MACAE,OAAA,SACAe,MAAA,GACAlb,QAAA,EACA+qC,UAAA,OACAtC,UAAA,UACA6B,UAAA,OACAE,eAAA,OACAQ,UAAA,EACAT,UAAA,EACA1vB,SAAA,EACA6vB,kBAAA,GACAD,cAAA,aACAK,WAAA,OACAH,UAAA,aACAC,cAAA,GACAC,gBAAA,OACAtwB,YAAA,IAIAxpC,EAAA+mE,QACA39B,OAAA,QACAzqB,OAAA,GACAsQ,QAAA,EACA+3C,oBAAA,OACAC,oBAAA,EACAC,eAAA,GACAC,cAAA,IACAC,WAAA,OACAC,cAAA,GACAC,UAAA,aACAC,WAAA,OACAC,cAAA,SACAC,YAAA,EACAC,YAAA,SACAC,WAAA,GACAC,YAAA,OACAC,kBAAA,EACA9N,WAAA,OACAH,UAAA,aACAC,cAAA,GACAC,gBAAA,QAIA95D,EAAA05C,OACAouB,KAAA,IAAA,IAAA,KACAC,KAAA,GAAA,EAAA,GACAC,KAAA,EAAA,EAAA,IACAC,KAAA,EAAA,EAAA,KAIAjoE,EAAAsP,OACA44D,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEAC,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEApH,QACA,SACA,QACA,UACA,SACA,gBACA,gBAIArjE,EAAAD,QAAAuC,IpGu5eGhB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,gBAErHsqE,KAAK,SAASzpE,EAAQjB,EAAOD,GqGnifnCC,EAAAD,SACAiG,SAAA,EACAC,SAAA,EAEAwwB,KAAA,OACAQ,OAAA,SACAC,OAAA,SACAwhC,OAAA,SACAhiC,QAAA,UAEA86B,MAAA,QAEApa,MAAA,QACAC,OAAA,SACAC,KAAA,OAEA7iB,UAAAk2C,SAAA,GACAzS,UAAA,aAEAvf,IAAA,MACAC,OAAA,SACAC,OAAA,SACAC,MAAA,QAEAid,OAAA,SACAJ,QAAA,UACA0C,IAAA,MACAvB,MAAA,MACAG,KAAA,OACAP,SAAA,WAEAN,OAAA,SACAD,MAAA,QAEA9B,KAAA,OACAK,KAAA,OAEAkW,MAAA,QACA9S,IAAA,MACAC,IAAA,MAEA8S,IAAA,MACA5S,KAAA,arGsifM6S,KAAK,SAAS7pE,EAAQjB,EAAOD,GsGhlfnC,GACAssC,GADA/pC,EAAArB,EAAA,WAGAjB,GAAAD,QAAA,SAAA+J,EAAA2B,GACA,GAAAnJ,EAAA6tB,MAAA,CACA,GAAA/gB,GAAAhC,SAAAjH,UAAAsa,KAAAnf,KAAAypE,QAAA37D,IAAA27D,QACAt/D,GAAAqpB,QAAAhrB,EAAAwsB,OAAA,IACA7qB,EAAAqpB,QAAAha,KAAAqhB,MAAAkQ,GACAviC,EAAAX,KAAAsC,EAAA3H,KAAAgG,EAAAX,IAAA5H,OAAAuI,EAAAF,IAAArI,OAAAuI,EAAAT,IAAA9H,SAAAuI,EAAAunB,QACAjiB,EAAA+V,MAAA4lD,QAAAt/D,GACA4gC,EAAAvxB,KAAAqhB,UtGmlfG+sC,WAAW,MAAM8B,KAAK,SAAS/pE,EAAQjB,EAAOD,GuG7lfjD,GAAAib,GAAA/Z,EAAA,UAEAjB,GAAAD,QAAA,SAAAmI,EAAAD,EAAA8J,GACA,QAAAk5D,GAAAjqE,EAAA8L,GACA,GAAApM,GAAAuH,EAAAjH,EACAiH,GAAAjH,GAAAiH,EAAA6E,GACA7E,EAAA6E,GAAApM,EAIA,OAAAuH,IACAA,KACA+S,EAAA3S,KAAA0J,GAAArF,QAAA,SAAAxE,GACA,GAAAhH,GAAA,EAAAsC,EAAAuO,EAAA7J,EAEA,KADAA,GAAAA,GAAAA,EACA1E,EAAAtC,IAAAA,EAAA+G,EAAAnE,KAAAoE,KAQA,KAJA,GAEAqe,GAAArlB,EAAAgqE,EAFAv+C,EAAA,EACAC,EAAA3kB,EAAA1G,OAAA,EAGAqrB,EAAAD,GAAA,CAGA,IAFAu+C,EAAAjjE,EAAAC,GACA+iE,EAAA/iE,EAAA0kB,GACA1rB,EAAAqlB,EAAAoG,EAAAC,EAAA1rB,IAAAA,EACA+G,EAAA/G,GAAAgqE,GAAAD,EAAA/pE,EAAAqlB,IAGA,IADA0kD,EAAAr+C,EAAArG,GACAA,IAAAre,EAAA,KACAA,GAAAqe,EAAAoG,EAAApG,EAAA,EACAqG,EAAArG,EAAA,EAEA,MAAAte,GAAAC,MvGgmfGhF,QAAU,UAAU,IAAI","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};\n},{\"./src/core/View\":31,\"./src/dataflow/Datasource\":33,\"./src/dataflow/Graph\":34,\"./src/dataflow/Node\":35,\"./src/dataflow/changeset\":37,\"./src/parse/spec\":56,\"./src/scene/Builder\":72,\"./src/scene/GroupBuilder\":74,\"./src/transforms/index\":100,\"./src/util/config\":103,\"datalib\":20}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nvar util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        f.get && util.$(f.get) || util.$(f.name), // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this;\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nproto.accessors = function(fields) {\n  var aggr = this._aggr, i, n, f;\n  for (i=0, n=aggr.length; i<n; ++i) {\n    if ((f = fields[aggr[i].name])) {\n      aggr[i].measures.prototype.get = util.$(f);\n    }\n  }\n  return this;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._keys = function(x) {\n  var d = this._dims,\n      n = d.length,\n      k = Array(n), i;\n  for (i=0; i<n; ++i) { k[i] = d[i].get(x); }\n  return {key: util.keystr(k), keys: k};\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._newcell(x, k));\n};\n\nproto._newcell = function(x, k) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, k),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for(i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (cell.collect) cell.data.add(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].add(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (cell.collect) cell.data.rem(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].rem(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._mod = function(x, prev) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].rem(prev);\n    cell.aggs[aggr[i].name].add(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n},{\"../util\":25,\"./collector\":5,\"./measures\":7}],5:[function(require,module,exports){\nvar util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '$!_rem_!#';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n;\n\n  if (k) {\n    // has unique key field, use that\n    var lut = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!lut.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._f = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._f !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._f = get;    \n  }\n  return this._ext;\n};\nproto.min = function(f) { return this.extent(f)[0]; };\nproto.max = function(f) { return this.extent(f)[1]; };\n\nproto.quartile = function(get) {\n  if (this._f !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._f = get;    \n  }\n  return this._q;\n};\nproto.q1 = function(f) { return this.quartile(f)[0]; };\nproto.q2 = function(f) { return this.quartile(f)[1]; };\nproto.q3 = function(f) { return this.quartile(f)[2]; };\n\nmodule.exports = Collector;\n},{\"../stats\":22,\"../util\":25}],6:[function(require,module,exports){\nvar util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = Array.prototype.reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n},{\"../util\":25,\"./aggregator\":4}],7:[function(require,module,exports){\nvar util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'this.argmin = null;',\n    set:  'this.argmin || cell.data.min(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'this.argmax = null;',\n    set:  'this.argmax || cell.data.max(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? this.get(cell.data.min(this.get)) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? this.get(cell.data.max(this.get)) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;\n},{\"../stats\":22,\"../util\":25}],8:[function(require,module,exports){\nvar util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time-units\":24,\"../util\":25}],9:[function(require,module,exports){\nvar stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f), c = u.counts;\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n},{\"../generate\":10,\"../import/type\":19,\"../stats\":22,\"../util\":25,\"./bins\":8}],10:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],11:[function(require,module,exports){\n(function (global){\nvar util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util\":25}],12:[function(require,module,exports){\nvar dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n},{\"./dsv\":11,\"./json\":13,\"./topojson\":14,\"./treejson\":15}],13:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":25}],14:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":13}],15:[function(require,module,exports){\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n},{\"./json\":13}],16:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":25,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],17:[function(require,module,exports){\nvar util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n},{\"../util\":25,\"./formats\":12,\"./type\":19}],18:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":25,\"./load\":16,\"./read\":17}],19:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":25}],20:[function(require,module,exports){\nvar util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;\n},{\"./aggregate/groupby\":6,\"./bins/bins\":8,\"./bins/histogram\":9,\"./generate\":10,\"./import/load\":16,\"./import/read\":17,\"./import/readers\":18,\"./import/type\":19,\"./print\":21,\"./stats\":22,\"./template\":23,\"./time-units\":24,\"./util\":25}],21:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n},{\"./import/type\":19,\"./stats\":22,\"./template\":23,\"./util\":25}],22:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values and associated counts.\n// Output: an array of unique values, in observed order\n// The array includes an additional 'counts' property,\n// which is a hash from unique values to occurrence counts.\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var a, b, x, y, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":10,\"./import/type\":19,\"./util\":25}],23:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util\":25}],24:[function(require,module,exports){\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n\n},{}],25:[function(require,module,exports){\n(function (process){\nvar Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n}).call(this,require('_process'))\n\n},{\"./time-units\":24,\"_process\":3,\"buffer\":2}],26:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":27}],27:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],28:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],29:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad);\n  } else {\n    this.initCanvas(w, h, pad);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + pad.left + pad.right,\n      th = h + pad.top + pad.bottom,\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n};\n\nprototype.initSVG = function(w, h, pad) {\n  // configure renderer\n  this._renderer.initialize(this._el, w, h, pad);\n};\n\nmodule.exports = HeadlessView;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../render/canvas/index\":61,\"../render/svg-headless/index\":65,\"../util/debug\":105,\"./View\":31,\"datalib\":20}],30:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":34,\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../scene/GroupBuilder\":74,\"datalib\":20}],31:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../parse/streams\":57,\"../render/canvas/index\":61,\"../render/svg/index\":69,\"../scene/Encoder\":73,\"../scene/Transition\":77,\"../util/config\":103,\"../util/debug\":105,\"./HeadlessView\":29,\"datalib\":20}],32:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":104,\"../util/debug\":105,\"./Node\":35,\"./changeset\":37}],33:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":104,\"../util/debug\":105,\"./Collector\":32,\"./Node\":35,\"./changeset\":37,\"./tuple\":38,\"datalib\":20}],34:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":104,\"../util/debug\":105,\"./Datasource\":33,\"./Signal\":36,\"./changeset\":37,\"datalib\":20,\"heap\":26}],35:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":104,\"datalib\":20}],36:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;\n},{\"./Node\":35,\"./changeset\":37}],37:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":104}],38:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":104,\"datalib\":20}],39:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'datum';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n\n},{\"./constants\":40,\"./functions\":41,\"datalib\":20}],40:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],41:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":20}],42:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":39,\"./parser\":43}],43:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],44:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":78,\"../util/config\":103,\"datalib\":20}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n\n},{\"../util/config\":103,\"./modify\":51,\"./transforms\":58,\"datalib\":20}],46:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],47:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['datum', 'event', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('datum', 'event', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n\n},{\"../expression\":42,\"datalib\":20}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":103,\"../util/constants\":104,\"datalib\":20}],49:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":54,\"datalib\":20}],50:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":49}],51:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":35,\"../dataflow/tuple\":38,\"../util/constants\":104,\"../util/debug\":105,\"datalib\":20}],52:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":20}],53:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":20}],54:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"../util/config\":103,\"datalib\":20}],55:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":104,\"./expr\":47}],56:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n\n},{\"../core/Model\":30,\"../core/View\":31,\"../parse/data\":45,\"../parse/interactors\":48,\"../parse/marks\":50,\"../parse/padding\":52,\"../parse/predicates\":53,\"../parse/signals\":55,\"datalib\":20}],57:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../util/constants\":104,\"./events\":46,\"./expr\":47,\"datalib\":20}],58:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":100,\"datalib\":20}],59:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":62,\"datalib\":20}],60:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":28,\"../../util/config\":103,\"./marks\":62,\"datalib\":20}],61:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":59,\"./Renderer\":60}],62:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":28,\"../../util/bounds\":102,\"../../util/config\":103,\"./path\":63}],63:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":28}],64:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":103,\"./svg\":66,\"datalib\":20}],65:[function(require,module,exports){\nmodule.exports = {\n  Renderer: require('./Renderer')\n};\n\n},{\"./Renderer\":64}],66:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":103,\"datalib\":20}],67:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":20}],68:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":70,\"datalib\":20}],69:[function(require,module,exports){\narguments[4][61][0].apply(exports,arguments)\n},{\"./Handler\":67,\"./Renderer\":68,\"dup\":61}],70:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":103,\"datalib\":20}],71:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":35,\"../util/bounds\":102,\"../util/constants\":104,\"../util/debug\":105}],72:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../parse/data\":45,\"../util/constants\":104,\"../util/debug\":105,\"./Bounder\":71,\"./Encoder\":73,\"./Item\":75,\"datalib\":20}],73:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":35,\"../util/bounds\":102,\"../util/constants\":104,\"../util/debug\":105,\"datalib\":20}],74:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":32,\"../dataflow/Node\":35,\"../parse/axes\":44,\"../util/constants\":104,\"../util/debug\":105,\"./Builder\":72,\"./Scale\":76,\"datalib\":20}],75:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],76:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../transforms/Aggregate\":79,\"../util/config\":103,\"../util/constants\":104,\"../util/debug\":105,\"datalib\":20}],77:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":38,\"../util/bounds\":102,\"../util/constants\":104}],78:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"../parse/mark\":49,\"../util/config\":103,\"datalib\":20}],79:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":104,\"../util/debug\":105,\"./GroupBy\":90,\"./Transform\":96,\"./measures\":101,\"datalib\":20}],80:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n\n},{\"../dataflow/Collector\":32,\"./Transform\":96}],81:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96,\"datalib\":20}],82:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":32,\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/debug\":105,\"./Transform\":96}],83:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":104,\"../util/debug\":105,\"./GroupBy\":90,\"./Transform\":96}],84:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":37,\"../parse/expr\":47,\"../util/constants\":104,\"../util/debug\":105,\"./Transform\":96}],85:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/debug\":105,\"./Transform\":96}],86:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96}],87:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":38,\"../parse/expr\":47,\"../util/constants\":104,\"../util/debug\":105,\"./Transform\":96}],88:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96,\"datalib\":20}],89:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Geo\":88,\"./Transform\":96,\"datalib\":20}],90:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":104,\"./Transform\":96}],91:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n},{\"../dataflow/tuple\":38,\"./Transform\":96}],92:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":47,\"../util/constants\":104,\"datalib\":20}],93:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],94:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":47,\"../util/debug\":105,\"./Transform\":96,\"datalib\":20}],95:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],96:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":35,\"../util/constants\":104,\"./Parameter\":92}],97:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],98:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;\n},{\"../dataflow/tuple\":38,\"../util/debug\":105,\"./GroupBy\":90,\"./Transform\":96}],99:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":32,\"../util/debug\":105,\"./Transform\":96,\"datalib\":20}],100:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":79,\"./Bin\":81,\"./Cross\":82,\"./Facet\":83,\"./Filter\":84,\"./Fold\":85,\"./Force\":86,\"./Formula\":87,\"./Geo\":88,\"./GeoPath\":89,\"./LinkPath\":91,\"./Pie\":93,\"./Sort\":94,\"./Stack\":95,\"./Treemap\":97,\"./Unique\":98,\"./Zip\":99}],101:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;\n},{\"../dataflow/tuple\":38,\"../util/constants\":104,\"../util/quickselect\":106,\"datalib\":20}],102:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":28,\"../render/canvas/path\":63,\"./config\":103}],103:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],104:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],105:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":103}],106:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};\n},{\"datalib\":20}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        f.get && util.$(f.get) || util.$(f.name), // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this;\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nproto.accessors = function(fields) {\n  var aggr = this._aggr, i, n, f;\n  for (i=0, n=aggr.length; i<n; ++i) {\n    if ((f = fields[aggr[i].name])) {\n      aggr[i].measures.prototype.get = util.$(f);\n    }\n  }\n  return this;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._keys = function(x) {\n  var d = this._dims,\n      n = d.length,\n      k = Array(n), i;\n  for (i=0; i<n; ++i) { k[i] = d[i].get(x); }\n  return {key: util.keystr(k), keys: k};\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._newcell(x, k));\n};\n\nproto._newcell = function(x, k) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, k),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for(i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (cell.collect) cell.data.add(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].add(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (cell.collect) cell.data.rem(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].rem(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._mod = function(x, prev) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].rem(prev);\n    cell.aggs[aggr[i].name].add(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '$!_rem_!#';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n;\n\n  if (k) {\n    // has unique key field, use that\n    var lut = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!lut.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._f = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._f !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._f = get;    \n  }\n  return this._ext;\n};\nproto.min = function(f) { return this.extent(f)[0]; };\nproto.max = function(f) { return this.extent(f)[1]; };\n\nproto.quartile = function(get) {\n  if (this._f !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._f = get;    \n  }\n  return this._q;\n};\nproto.q1 = function(f) { return this.quartile(f)[0]; };\nproto.q2 = function(f) { return this.quartile(f)[1]; };\nproto.q3 = function(f) { return this.quartile(f)[2]; };\n\nmodule.exports = Collector;","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = Array.prototype.reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'this.argmin = null;',\n    set:  'this.argmin || cell.data.min(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'this.argmax = null;',\n    set:  'this.argmax || cell.data.max(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? this.get(cell.data.min(this.get)) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? this.get(cell.data.max(this.get)) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;","var util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f), c = u.counts;\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n","var json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;","var util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values and associated counts.\n// Output: an array of unique values, in observed order\n// The array includes an additional 'counts' property,\n// which is a hash from unique values to occurrence counts.\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var a, b, x, y, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n","var STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n","var Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad);\n  } else {\n    this.initCanvas(w, h, pad);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + pad.left + pad.right,\n      th = h + pad.top + pad.bottom,\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n};\n\nprototype.initSVG = function(w, h, pad) {\n  // configure renderer\n  this._renderer.initialize(this._el, w, h, pad);\n};\n\nmodule.exports = HeadlessView;\n","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'datum';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['datum', 'event', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('datum', 'event', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n","module.exports = {\n  Renderer: require('./Renderer')\n};\n","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};","var dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};"],"sourceRoot":"/source/"}